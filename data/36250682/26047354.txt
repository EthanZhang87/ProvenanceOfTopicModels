title: HipHop for PHP
id: 26047354
HipHop for PHP HPHPc is a discontinued PHP transpiler created by Facebook By using HPHPc as a source to source compiler PHP code is translated into C compiled into a binary and run as an executable as opposed to the PHP s usual execution path of PHP code being transformed into opcodes and interpreted HPHPc consists mainly of C C and PHP source codes and it is free and open source software distributed under the PHP License br The original motivation behind HipHop was to save resources on Facebook servers given the large PHP codebase of facebook com As the development of HipHop progressed it was realised that HipHop could substantially increase the speed of PHP applications in general Increases in web page generation throughput by factors of up to six have been observed over the Zend PHP A stated goal of HPHPc was to provide a high level of compatibility for Zend PHP where most Zend based PHP programs run unmodified on HPHPc HPHPc was originally open sourced in early br As an addition to HPHPc Facebook engineers also created a developer mode of HipHop interpreted version of a PHP execution engine known as HPHPi and the HipHop debugger known as HPHPd These additions allow developers to run PHP code through the same logic provided by HPHPc while making it possible to interactively debug PHP code by defining watches breakpoints etc Running the code through HPHPi yields lower performance when compared to HPHPc but the developer benefits were at the time worth having to maintain these two execution engines for production and development HPHPi and HPHPd were also open sourced in br By many accounts HPHPc fulfilled its goals especially within Facebook as it allowed facebook com to run much faster while using fewer resources However in early Facebook deprecated HPHPc in favor of the HipHop Virtual Machine HHVM which is a just in time JIT compilation based execution engine for PHP also developed by Facebook There were many reasons for this one of them was HPHPc s flattened curve for further performance improvements Also HPHPc did not fully support the PHP language including the create function and eval constructs and it involved a specific time and resource consuming deployment process that required a bigger than GB binary to be compiled and distributed to many servers in short order In addition maintaining HPHPc and HPHPi in parallel as they needed to be for the consistency of production and development environments was becoming cumbersome Finally HPHPc was not a drop in replacement for Zend requiring external customers to change their whole development and deployment processes to use HPHPc br br br See also br br Parrot virtual machine br Phalanger br br br br br br External links br HipHop Compiler for PHP Transforming PHP into C on YouTube by Haiping Zhao br The HipHop Compiler for PHP OOPSLA by Guilherme Ottoni et al br Scaling with HipHop on YouTube PHP UK Conference by Sara Goleman