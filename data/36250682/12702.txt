title: GIF
id: 12702
The Graphics Interchange Format GIF GHIF or JIF see Pronunciation is a bitmap image format that was developed by a team at the online services provider CompuServe led by American computer scientist Steve Wilhite and released on June br The format can contain up to bits per pixel allowing a single image to reference its own palette of up to different colors chosen from the bit RGB color space It can also represent multiple images in a file which can be used for animations and allows a separate palette of up to colors for each frame These palette limitations make GIF less suitable for reproducing color photographs and other images with color gradients but well suited for simpler images such as graphics or logos with solid areas of color br GIF images are compressed using the Lempel Ziv Welch LZW lossless data compression technique to reduce the file size without degrading the visual quality br While once in widespread usage on the World Wide Web because of its wide implementation and portability between applications and operating systems usage of the format has declined for space and quality reasons often being replaced with video formats such as the MP file format These replacements in turn are often termed GIFs despite having no relation to the original file format br br br History br br CompuServe introduced GIF on June to provide a color image format for their file downloading areas This replaced their earlier run length encoding format which was black and white only GIF became popular because it used Lempel Ziv Welch data compression Since this was more efficient than the run length encoding used by PCX and MacPaint fairly large images could be downloaded reasonably quickly even with slow modems br The original version of GIF was called a This version already supported multiple images in a stream br In CompuServe released an enhanced version called a This version added br br support for animation delays br transparent background colors br storage of application specific metadata br allowing text labels as text not embedding them in the graphical data As there is little control over display fonts however this feature is rarely used br The two versions can be distinguished by looking at the first six bytes of the file the magic number or signature which when interpreted as ASCII read GIF a or GIF a respectively br CompuServe encouraged the adoption of GIF by providing downloadable conversion utilities for many computers By December for example an Apple IIGS user could view pictures created on an Atari ST or Commodore GIF was one of the first two image formats commonly used on Web sites the other being the black and white XBM br In September Netscape Navigator added the ability for animated GIFs to loop br While GIF was developed by CompuServe it used the Lempel Ziv Welch LZW lossless data compression algorithm patented by Unisys in Controversy over the licensing agreement between Unisys and CompuServe in spurred the development of the Portable Network Graphics PNG standard In all patents relating to the proprietary compression used for GIF expired br The feature of storing multiple images in one file accompanied by control data is used extensively on the Web to produce simple animations br The optional interlacing feature which stores image scan lines out of order in such a fashion that even a partially downloaded image was somewhat recognizable also helped GIF s popularity as a user could abort the download if it was not what was required br In May Facebook added support for GIF In January Instagram also added GIF stickers to the story mode br br br Terminology br As a noun the word GIF is found in the newer editions of many dictionaries In the American wing of the Oxford University Press recognized GIF as a verb as well meaning to create a GIF file as in GIFing was the perfect medium for sharing scenes from the Summer Olympics The press s lexicographers voted it their word of the year saying that GIFs have evolved into a tool with serious applications including research and journalism br br br Pronunciation br br The pronunciation of the first letter of GIF has been disputed since the s The most common pronunciations in English are with a soft g as in gin and with a hard g as in gift differing in the phoneme represented by the letter G The creators of the format pronounced the acronym GIF as with a soft g with Wilhite stating that he intended for the pronunciation to deliberately echo the American peanut butter brand Jif and CompuServe employees would often quip choosy developers choose GIF a spoof of Jif s television commercials However the word is widely pronounced as with a hard g and polls have generally shown that this hard g pronunciation is more prevalent br Dictionary com cites both pronunciations indicating as the primary pronunciation while Cambridge Dictionary of American English offers only the hard g pronunciation Merriam Webster s Collegiate Dictionary and Oxford Dictionaries cite both pronunciations but place the hard g first The New Oxford American Dictionary gave only in its second edition but updated it to in the third edition br The disagreement over the pronunciation has led to heated Internet debate On the occasion of receiving a lifetime achievement award at the Webby Awards ceremony Wilhite publicly rejected the hard g pronunciation his speech led to more than posts on Twitter and dozens of news articles The White House and the TV program Jeopardy also entered the debate in In February The J M Smucker Company the owners of the Jif brand partnered with the animated image database and search engine Giphy to release a limited edition Jif vs GIF hashtagged as JIFvsGIF jar of peanut butter that had a label humorously declaring the soft g pronunciation to refer exclusively to the peanut butter and GIF to be exclusively pronounced with the hard g pronunciation br br br Usage br GIFs are suitable for sharp edged line art with a limited number of colors such as logos This takes advantage of the format s lossless compression which favors flat areas of uniform color with well defined edges They can also be used to store low color sprite data for games GIFs can be used for small animations and low resolution video clips or as reactions in online messaging used to convey emotion and feelings instead of using words They are popular on social media platforms such as Tumblr Facebook and Twitter br br br File format br Conceptually a GIF file describes a fixed sized graphical area the logical screen populated with zero or more images Many GIF files have a single image that fills the entire logical screen Others divide the logical screen into separate sub images The images may also function as animation frames in an animated GIF file but again these need not fill the entire logical screen br GIF files start with a fixed length header GIF a or GIF a giving the version followed by a fixed length Logical Screen Descriptor giving the pixel dimensions and other characteristics of the logical screen The screen descriptor may also specify the presence and size of a Global Color Table GCT which follows next if present br Thereafter the file is divided into segments of the following types each introduced by a byte sentinel br br An image introduced by x C an ASCII comma br An extension block introduced by x an ASCII exclamation point br The trailer a single byte of value x B an ASCII semicolon which should be the last byte of the file br An image starts with a fixed length Image Descriptor which may specify the presence and size of a Local Color Table which follows next if present The image data follows one byte giving the bit width of the unencoded symbols which must be at least bits wide even for bi color images followed by a series of sub blocks containing the LZW encoded data br Extension blocks blocks that extend the a definition via a mechanism already defined in the a spec consist of the sentinel an additional byte specifying the type of extension and a series of sub blocks with the extension data Extension blocks that modify an image like the Graphic Control Extension that specifies the optional animation delay time and optional transparent background color must immediately precede the segment with the image they refer to br Each sub block begins with a byte giving the number of subsequent data bytes in the sub block to The series of sub blocks is terminated by an empty sub block a byte br This structure allows the file to be parsed even if not all parts are understood A GIF marked a may contain extension blocks the intent is that a decoder can read and display the file without the features covered in extensions it does not understand br The full detail of the file format is covered in the GIF specification br br br Palettes br br GIF is palette based the colors used in an image a frame in the file have their RGB values defined in a palette table that can hold up to entries and the data for the image refer to the colors by their indices in the palette table The color definitions in the palette can be drawn from a color space of millions of shades shades bits for each primary but the maximum number of colors a frame can use is This limitation was reasonable when GIF was developed because hardware that could display more than colors simultaneously was rare Simple graphics line drawings cartoons and grey scale photographs typically need fewer than colors br Each frame can designate one index as a transparent background color any pixel assigned this index takes on the color of the pixel in the same position from the background which may have been determined by a previous frame of animation br Many techniques collectively called dithering have been developed to approximate a wider range of colors with a small color palette by using pixels of two or more colors to approximate in between colors These techniques sacrifice spatial resolution to approximate deeper color resolution While not part of the GIF specification dithering can be used in images subsequently encoded as GIF images This is often not an ideal solution for GIF images both because the loss of spatial resolution typically makes an image look fuzzy on the screen and because the dithering patterns often interfere with the compressibility of the image data working against GIF s main purpose br In the early days of graphical web browsers graphics cards with bit buffers allowing only colors were common and it was fairly common to make GIF images using the websafe palette This ensured predictable display but severely limited the choice of colors When bit color became the norm palettes could instead be populated with the optimum colors for individual images br A small color table may suffice for small images and keeping the color table small allows the file to be downloaded faster Both the a and a specifications allow color tables of n colors for any n from through Most graphics applications will read and display GIF images with any of these table sizes but some do not support all sizes when creating images Tables of and colors are widely supported br br br True color br Although GIF is almost never used for true color images it is possible to do so A GIF image can include multiple image blocks each of which can have its own color palette and the blocks can be tiled to create a complete image Alternatively the GIF a specification introduced the idea of a transparent color where each image block can include its own palette of visible colors plus one transparent color A complete image can be created by layering image blocks with the visible portion of each layer showing through the transparent portions of the layers above br br To render a full color image as a GIF the original image must be broken down into smaller regions having no more than or different colors Each of these regions is then stored as a separate image block with its own local palette and when the image blocks are displayed together either by tiling or by layering partially transparent image blocks the complete full color image appears For example breaking an image into tiles of by pixels pixels in total ensures that no tile has more than the local palette limit of colors although larger tiles may be used and similar colors merged resulting in some loss of color information br Since each image block can have its own local color table a GIF file having many image blocks can be very large limiting the usefulness of full color GIFs Additionally not all GIF rendering programs handle tiled or layered images correctly Many rendering programs interpret tiles or layers as animation frames and display them in sequence as an animation with most web browsers automatically displaying the frames with a delay time of seconds or more br br br Example GIF file br br The hex numbers in the following tables are in little endian byte order as the format specification prescribes br br br Image coding br The image pixel data scanned horizontally from top left are converted by LZW encoding to codes that are then mapped into bytes for storing in the file The pixel codes typically don t match the bit size of the bytes so the codes are packed into bytes by a little Endian scheme the least significant bit of the first code is stored in the least significant bit of the first byte higher order bits of the code into higher order bits of the byte spilling over into the low order bits of the next byte as necessary Each subsequent code is stored starting at the least significant bit not already used br This byte stream is stored in the file as a series of sub blocks Each sub block has a maximum length bytes and is prefixed with a byte indicating the number of data bytes in the sub block The series of sub blocks is terminated by an empty sub block a single byte indicating a sub block with data bytes br For the sample image above the reversible mapping between bit codes and bytes is shown below br br A slight compression is evident pixel colors defined initially by bytes are exactly represented by code bytes including control codes br The encoding process that produces the bit codes is shown below A local string accumulates pixel color numbers from the palette with no output action as long as the local string can be found in a code table There is special treatment of the first two pixels that arrive before the table grows from its initial size by additions of strings After each output code the local string is initialized to the latest pixel color that could not be included in the output code br br Table bit br string code code Action br h Initialize root table of bit codes br palette br colors br FFh br clr h br end h br h Clear br Pixel Local br color Palette string br BLACK h st pixel always to output br WHITE FF String found in table br FF h Always add st string to table br FF Initialize local string br WHITE FF FF String not found in table br FFh output code for previous string br FF FF h add latest string to table br FF initialize local string br WHITE FF FF String found in table br BLACK FF FF String not found in table br h output code for previous string br FF FF h add latest string to table br initialize local string br WHITE FF String found in table br WHITE FF FF String not found in table br h output code for previous string br FF FF h add latest string to table br FF initialize local string br WHITE FF FF String found in table br WHITE FF FF FF String not found in table br h output code for previous string br FF FF FF h add latest string to table br FF initialize local string br WHITE FF FF String found in table br WHITE FF FF FF String found in table br WHITE FF FF FF FF String not found in table br h output code for previous string br FF FF FF FF h add latest string to table br FF initialize local string br WHITE FF FF String found in table br WHITE FF FF FF String found in table br WHITE FF FF FF FF String found in table br No more pixels br h output code for last string br h End br br For clarity the table is shown above as being built of strings of increasing length That scheme can function but the table consumes an unpredictable amount of memory Memory can be saved in practice by noting that each new string to be stored consists of a previously stored string augmented by one character It is economical to store at each address only two words an existing address and one character br The LZW algorithm requires a search of the table for each pixel A linear search through up to addresses would make the coding slow In practice the codes can be stored in order of numerical value this allows each search to be done by a SAR Successive Approximation Register as used in some ADCs with only magnitude comparisons For this efficiency an extra table is needed to convert between codes and actual memory addresses the extra table upkeeping is needed only when a new code is stored which happens at much less than pixel rate br br br Image decoding br Decoding begins by mapping the stored bytes back to bit codes These are decoded to recover the pixel colors as shown below A table identical to the one used in the encoder is built by adding strings by this rule br br shift br bit Local Table Pixel br code code code string Palette color Action br h h Initialize root table of bit codes br palette br colors br FFh br h clr br h end br h BLACK Decode st pixel br FFh h Incoming code found in table br WHITE output string from table br h FF add to table br h FFh Incoming code not found in table br h FF FF add to table br output string from table br WHITE br WHITE br h h Incoming code found in table br output string from table br BLACK br WHITE br h FF FF add to table br h h Incoming code found in table br output string from table br WHITE br WHITE br h FF FF add to table br h h Incoming code not found in table br h FF FF FF add to table br output string from table br WHITE br WHITE br WHITE br h h Incoming code not found in table br h FF FF FF FF add to table br output string from table br WHITE br WHITE br WHITE br WHITE br h End br br br LZW code lengths br Shorter code lengths can be used for palettes smaller than the colors in the example If the palette is only colors so color indexes are bits wide the symbols can range from to and the symbol width can be taken to be bits with codes starting at bits In fact the symbol width need not match the palette size as long as the values decoded are always less than the number of colors in the palette the symbols can be any width from to and the palette size any power of from to For example if only the first four colors values to of the palette are used the symbols can be taken to be bits wide with codes starting at bits br Conversely the symbol width could be set at even if only values and are used these data would only require a two color table Although there would be no point in encoding the file that way something similar typically happens for bi color images the minimum symbol width is even if only values and are used br The code table initially contains codes that are one bit longer than the symbol size in order to accommodate the two special codes clr and end and codes for strings that are added during the process When the table is full the code length increases to give space for more strings up to a maximum code FFF hex As the decoder builds its table it tracks these increases in code length and it is able to unpack incoming bytes accordingly br br br Uncompressed GIF br br The GIF encoding process can be modified to create a file without LZW compression that is still viewable as a GIF image This technique was introduced originally as a way to avoid patent infringement Uncompressed GIF can also be a useful intermediate format for a graphics programmer because individual pixels are accessible for reading or painting An uncompressed GIF file can be converted to an ordinary GIF file simply by passing it through an image editor br The modified encoding method ignores building the LZW table and emits only the root palette codes and the codes for CLEAR and STOP This yields a simpler encoding a to correspondence between code values and palette codes but sacrifices all of the compression each pixel in the image generates an output code indicating its color index When processing an uncompressed GIF a standard GIF decoder will not be prevented from writing strings to its dictionary table but the code width must never increase since that triggers a different packing of bits to bytes br If the symbol width is n the codes of width n fall naturally into two blocks the lower block of n codes for coding single symbols and the upper block of n codes that will be used by the decoder for sequences of length greater than one Of that upper block the first two codes are already taken n for CLEAR and n for STOP The decoder must also be prevented from using the last code in the upper block n because when the decoder fills that slot it will increase the code width Thus in the upper block there are n codes available to the decoder that won t trigger an increase in code width Because the decoder is always one step behind in maintaining the table it does not generate a table entry upon receiving the first code from the encoder but will generate one for each succeeding code Thus the encoder can generate n codes without triggering an increase in code width Therefore the encoder must emit extra CLEAR codes at intervals of n codes or less to make the decoder reset the coding dictionary The GIF standard allows such extra CLEAR codes to be inserted in the image data at any time The composite data stream is partitioned into sub blocks that each carry from to bytes br For the sample image above the following bit codes represent clear followed by image pixels in scan order and stop br br FF FF FF FF FF FF FF FF FF FF FF FF FF br br After the above codes are mapped to bytes the uncompressed file differs from the compressed file thus br br br Compression example br The trivial example of a large image of solid color demonstrates the variable length LZW compression used in GIF files br br The code values shown are packed into bytes which are then packed into blocks of up to bytes A block of image data begins with a byte that declares the number of bytes to follow The last block of data for an image is marked by a zero block length byte br br br Interlacing br br The GIF Specification allows each image within the logical screen of a GIF file to specify that it is interlaced i e that the order of the raster lines in its data block is not sequential This allows a partial display of the image that can be recognized before the full image is painted br An interlaced image is divided from top to bottom into strips pixels high and the rows of the image are presented in the following order br br Pass Line the top most line from each strip br Pass Line from each strip br Pass Lines and from each strip br Pass Lines and from each strip br The pixels within each line are not interlaced but presented consecutively from left to right As with non interlaced images there is no break between the data for one line and the data for the next The indicator that an image is interlaced is a bit set in the corresponding Image Descriptor block br br br Animated GIF br br Although GIF was not designed as an animation medium its ability to store multiple images in one file naturally suggested using the format to store the frames of an animation sequence To facilitate displaying animations the GIF a spec added the Graphic Control Extension GCE which allows the images frames in the file to be painted with time delays forming a video clip Each frame in an animation GIF is introduced by its own GCE specifying the time delay to wait after the frame is drawn Global information at the start of the file applies by default to all frames The data is stream oriented so the file offset of the start of each GCE depends on the length of preceding data Within each frame the LZW coded image data is arranged in sub blocks of up to bytes the size of each sub block is declared by the byte that precedes it br By default an animation displays the sequence of frames only once stopping when the last frame is displayed To enable an animation to loop Netscape in the s used the Application Extension block intended to allow vendors to add application specific information to the GIF file to implement the Netscape Application Block NAB This block placed immediately before the sequence of animation frames specifies the number of times the sequence of frames should be played to times or that it should repeat continuously zero indicates loop forever Support for these repeating animations first appeared in Netscape Navigator version and then spread to other browsers Most browsers now recognize and support NAB though it is not strictly part of the GIF a specification br The following example shows the structure of the animation file Rotating earth large gif shown as a thumbnail in the article s infobox br br The animation delay for each frame is specified in the GCE in hundredths of a second Some economy of data is possible where a frame need only rewrite a portion of the pixels of the display because the Image Descriptor can define a smaller rectangle to be rescanned instead of the whole image Browsers or other displays that do not support animated GIFs typically show only the first frame br The size and color quality of animated GIF files can vary significantly depending on the application used to create them Strategies for minimizing file size include using a common global color table for all frames rather than a complete local color table for each frame and minimizing the number of pixels covered in successive frames so that only the pixels that change from one frame to the next are included in the latter frame More advanced techniques involve modifying color sequences to better match the existing LZW dictionary a form of lossy compression Simply packing a series of independent frame images into a composite animation tends to yield large file sizes Tools are available to minimize the file size given an existing GIF br br br Metadata br Metadata can be stored in GIF files as a comment block a plain text block or an application specific application extension block Several graphics editors use unofficial application extension blocks to include the data used to generate the image so that it can be recovered for further editing br All of these methods technically require the metadata to be broken into sub blocks so that applications can navigate the metadata block without knowing its internal structure br The Extensible Metadata Platform XMP metadata standard introduced an unofficial but now widespread XMP Data application extension block for including XMP data in GIF files Since the XMP data is encoded using UTF without NUL characters there are no bytes in the data Rather than break the data into formal sub blocks the extension block terminates with a magic trailer that routes any application treating the data as sub blocks to a final byte that terminates the sub block chain br br br Unisys and LZW patent enforcement br In and Jacob Ziv and Abraham Lempel published a pair of papers on a new class of lossless data compression algorithms now collectively referred to as LZ and LZ In Terry Welch developed a fast variant of LZ which was named Lempel Ziv Welch LZW br Welch filed a patent application for the LZW method in June The resulting patent US granted in December was assigned to Sperry Corporation who subsequently merged with Burroughs Corporation in and formed Unisys Further patents were obtained in the United Kingdom France Germany Italy Japan and Canada br In addition to the above patents Welch s patent also includes citations to several other patents that influenced it including br br two Japanese patents from NEC s Jun Kanatsu br U S patent from John S Hoerning br U S patent from Klaus E Holtz and br a German patent from Karl Eckhart Heinz br In June an article by Welch was published in the IEEE magazine which publicly described the LZW technique for the first time LZW became a popular data compression technique and when the patent was granted Unisys entered into licensing agreements with over a hundred companies br The popularity of LZW led CompuServe to choose it as the compression technique for their version of GIF developed in At the time CompuServe was not aware of the patent Unisys became aware that the version of GIF used the LZW compression technique and entered into licensing negotiations with CompuServe in January The subsequent agreement was announced on December Unisys stated that they expected all major commercial on line information services companies employing the LZW patent to license the technology from Unisys at a reasonable rate but that they would not require licensing or fees to be paid for non commercial non profit GIF based applications including those for use on the on line services br Following this announcement there was widespread condemnation of CompuServe and Unisys and many software developers threatened to stop using GIF The PNG format see below was developed in as an intended replacement However obtaining support from the makers of Web browsers and other software for the PNG format proved difficult and it was not possible to replace GIF although PNG has gradually increased in popularity Therefore GIF variations without LZW compression were developed For instance the libungif library based on Eric S Raymond s giflib allows creation of GIFs that followed the data format but avoided the compression features thus avoiding use of the Unisys LZW patent A Dr Dobb s article described a way to achieve LZW compatible encoding without infringing on its patents br In August Unisys changed the details of their licensing practice announcing the option for owners of certain non commercial and private websites to obtain licenses on payment of a one time license fee of or Such licenses were not required for website owners or other GIF users who had used licensed software to generate GIFs Nevertheless Unisys was subjected to thousands of online attacks and abusive emails from users believing that they were going to be charged or sued for using GIFs on their websites Despite giving free licenses to hundreds of non profit organizations schools and governments Unisys was completely unable to generate any good publicity and continued to be condemned by individuals and organizations such as the League for Programming Freedom who started the Burn All GIFs campaign in br The United States LZW patent expired on June The counterpart patents in the United Kingdom France Germany and Italy expired on June the Japanese patents expired on June and the Canadian patent expired on July Consequently while Unisys has further patents and patent applications relating to improvements to the LZW technique LZW itself and consequently GIF have been free to use since July br br br Alternatives br br br PNG br Portable Network Graphics PNG was designed as a replacement for GIF in order to avoid infringement of Unisys patent on the LZW compression technique PNG offers better compression and more features than GIF animation being the only significant exception PNG is more suitable than GIF in instances where true color imaging and alpha transparency are required br Although support for PNG format came slowly new web browsers support PNG Older versions of Internet Explorer do not support all features of PNG Versions and earlier do not support alpha channel transparency without using Microsoft specific HTML extensions Gamma correction of PNG images was not supported before version and the display of these images in earlier versions may have the wrong tint br For identical bit or lower image data PNG files are typically smaller than the equivalent GIFs due to the more efficient compression techniques used in PNG encoding Complete support for GIF is complicated chiefly by the complex canvas structure it allows though this is what enables the compact animation features br br br Animation formats br Videos resolve many issues that GIFs present through common usage on the web They include drastically smaller file sizes the ability to surpass the bit color restriction and better frame handling and compression through inter frame coding Virtually universal support for the GIF format in web browsers and a lack of official support for video in the HTML standard caused GIF to rise to prominence for the purpose of displaying short video like files on the web br br MNG Multiple image Network Graphics was originally developed as a PNG based solution for animations MNG reached version in but few applications support it br APNG Animated Portable Network Graphics was proposed by Mozilla in APNG is an extension to the PNG format as alternative to the MNG format APNG is supported by most browsers as of APNG provides the ability to animate PNG files while retaining backwards compatibility in decoders that cannot understand the animation chunk unlike MNG Older decoders will simply render the first frame of the animation br The PNG group officially rejected APNG as an official extension on April br There have been several subsequent proposals for a simple animated graphics format based on PNG using several different approaches Nevertheless APNG is still under development by Mozilla and is supported in Firefox while MNG support was dropped APNG is currently supported by all major web browsers including Chrome since version Opera Firefox and Edge br Embedded Adobe Flash objects and MPEG files were used on some websites to display simple video but required the use of an additional browser plugin br WebM and WebP are in development and are supported by some web browsers br Other options for web animation include serving individual frames using AJAX or animating SVG Scalable vector graphics images using JavaScript or SMIL Synchronized Multimedia Integration Language br With the introduction of widespread support of the HTML video video tag in most web browsers some websites use a looped version of the video tag generated by JavaScript functions This gives the appearance of a GIF but with the size and speed advantages of compressed video br Notable examples are Gfycat and Imgur and their GIFV metaformat which is really a video tag playing a looped MP or WebM compressed video br HEIF High Efficiency Image File Format is an image file format finalized in which uses a discrete cosine transform DCT lossy compression algorithm based on the HEVC video format and related to the JPEG image format In contrast to JPEG HEIF supports animation br Compared to the GIF format which lacks DCT compression HEIF allows significantly more efficient compression HEIF stores more information and produces higher quality animated images at a small fraction of an equivalent GIF s size br VP only supports alpha compositing with chroma subsampling which may be unsuitable for GIFs that combine transparency with rasterised vector graphics with fine color details br AV video codec or AVIF can also be used either as a video or a sequenced image br br br Uses br In April chan added support for silent WebM videos that are under MB in size and min in length and in October Imgur started converting any GIF files uploaded to the site to H video and giving the link to the HTML player the appearance of an actual file with a gifv extension br In January Telegram started re encoding all GIFs to MPEG videos that require up to less disk space for the same image quality br br br See also br br AVIF br Cinemagraph a partially animated photograph often in GIF br Clear GIF a technique used to check content access br Comparison of graphics file formats br GIF art a form of digital art associated with GIF br GIFBuilder early animated GIF creation program br GNU plotutils supports pseudo GIF which uses run length encoding rather than LZW br Microsoft GIF Animator historic program to create simple animated GIFs br Software patent br br br br br br External links br br The GIFLIB project br spec gif a txt GIF a specification on w org br GIF a specification reformatted into HTML br LZW and GIF explained br Animated GIFs a six minute documentary produced by Off Book web series br GifCities The GeoCities Animated GIF Search Engine 