title: TOPS-20
id: 66380
The TOPS operating system by Digital Equipment Corporation DEC is a proprietary OS used on some of DEC s bit mainframe computers The Hardware Reference Manual was described as for DECsystem DECSYSTEM Processor meaning the DEC PDP and the DECSYSTEM br TOPS began in as the TENEX operating system of Bolt Beranek and Newman BBN and shipped as a product by DEC starting in TOPS is almost entirely unrelated to the similarly named TOPS but it was shipped with the PA TOPS Monitor Calls emulation facility which allowed most but not all TOPS executables to run unchanged As a matter of policy DEC did not update PA to support later TOPS additions except where required by DEC software br TOPS competed with TOPS ITS and WAITS all of which were notable time sharing systems for the PDP during this timeframe TOPS is informally known as TWENEX br br br TENEX br br TOPS was based upon the TENEX operating system which had been created by Bolt Beranek and Newman for Digital s PDP computer After Digital started development of the KI version of the PDP an issue arose by this point TENEX was the most popular customer written PDP operating systems but it would not run on the new faster KI s To correct this problem the DEC PDP sales manager purchased the rights to TENEX from BBN and set up a project to port it to the new machine In the end very little of the original TENEX code remained and Digital ultimately named the resulting operating system TOPS br br br PA br Some of what came with TOPS was merely an emulation of the TOPS Operating System s calls These were known as UUO s standing for Unimplemented User Operation and were needed both for compilers which were not specific to run as well as user programs written in these languages The package that was mapped into a user s address space was named PA PA as in PAT as in compatibility as in DEC or PDP as in a PDP Model br Sometimes PA was referred to as PAT a name that was a good fit to the fact that PA was simply unprivileged user mode code that performed the requested action using JSYS calls where necessary br br br TOPS capabilities br The major ways to get at TOPS capabilities and what made TOPS important were br br Commands entered via the command processor EXEC EXE br JSYS Jump to System calls from MACro language MAC programs br The EXEC accomplished its work primarily using br br internal code including calls via JSYS br requesting services from GALAXY components e g spoolers br br br Command processor br Rather advanced for its day were some TOPS specific features br br Command completion br Dynamic help in the form of br noise words typing DIR and then pressing the ESCape key resulted in br DIRectory of files br typing I and pressing the Esc key resulted in br Information about br One could then type to find out what operands were permitted required Pressing Ctrl T displays status information br br br Commands br The following list of commands are supported by the TOPS Command Processor br br br JSYS features br JSYS stands for Jump to SYStem Operands were at times memory addresses TOPS allows you to use bit or bit addresses Some monitor calls require one kind some the other some calls accept either kind Some monitor calls use only bits to hold an address These calls interpret bit addresses as locations in the current section br Internally files were first identified using a GTJFN Get Job File Number JSYS and then that JFN number was used to open OPENF and manipulate the file s contents br br br PCL Programmable Command Language br PCL Programmable Command Language is a programming language that runs under TOPS PCL source programs are by default stored with Filetype PCL and enable extending the TOPS EXEC via a verb named DECLARE Newly compiled commands then become functionally part of the EXEC br br br PCL language features br PCL includes br br flow control DO While Until CASE SELECT IF THEN ELSE GOTO br character string operations length substring concatenation br access to system information date time file attributes device characteristics br br br TOPS today br Paul Allen maintained several publicly accessible historic computer systems before his death including an XKL TOAD running TOPS br See also SDF Public Access Unix System br br br See also br Time sharing system evolution br br br br br br Further reading br Storage Organization and Management in TENEX Daniel L Murphy AFIPS Proceedings FJCC br Implementation of TENEX on the KI Daniel L Murphy TENEX Panel Session NCC br TOPS User s Guide Archived at the Wayback Machine br DECSYSTEM Assembly Language Guide Frank da Cruz and Chris Ryland br Running TOPS V under the SIMH Emulator br br br External links br DIGITAL Computing Timeline br Origins and Development of TOPS is an excellent longer history br Panda TOPS distribution br SDF Public Access TWENEX br SIMH Simulator capable of simulating the PDP and running TOPS br Manuals for DEC bit computers Archived at the Wayback Machine br PDP Software Archive br bits Forever br Request a login to Living Computers Museum Labs TOAD running TOPS 