title: GNU Emacs
id: 17698784
GNU Emacs is a free software text editor It was created by GNU Project founder Richard Stallman based on the Emacs editor developed for Unix operating systems GNU Emacs has been a central component of the GNU project and a flagship project of the free software movement Its tag line is the extensible self documenting text editor br br br History br br The original EMACS was written in by David A Moon and Guy L Steele Jr as a set of macros for the TECO editor and in Richard Stallman began work on GNU Emacs to produce a free software alternative to the proprietary Gosling Emacs GNU Emacs was initially based on Gosling Emacs but Stallman s replacement of its Mocklisp interpreter with a true Lisp interpreter required that nearly all of its code be rewritten This became the first program released by the then nascent GNU Project GNU Emacs is written in C and provides Emacs Lisp also implemented in C as an extension language Version the first public release was made on March The first widely distributed version of GNU Emacs was version released later in Early versions of GNU Emacs were numbered as x x with the initial digit denoting the version of the C core The was dropped after version as it was thought that the major number would never change and thus the major version skipped from to A new third version number was added to represent changes made by user sites In the current numbering scheme a number with two components signifies a release version with development versions having three components br GNU Emacs was later ported to the Unix operating system It offered more features than Gosling Emacs in particular a full featured Lisp as its extension language and soon replaced Gosling Emacs as the de facto Unix Emacs editor Markus Hess exploited a security flaw in GNU Emacs s email subsystem in his cracking spree in which he gained superuser access to Unix computers br Although users commonly submitted patches and Elisp code to the net emacs newsgroup participation in GNU Emacs development was relatively restricted until and was used as an example of the Cathedral development style in The Cathedral and the Bazaar The project has since adopted a public development mailing list and anonymous CVS access Development took place in a single CVS trunk until and today uses the Git DVCS br Richard Stallman has remained the principal maintainer of GNU Emacs but he has stepped back from the role at times Stefan Monnier and Chong Yidong have overseen maintenance since On September Monnier announced that he would be stepping down as maintainer effective with the feature freeze of Emacs Longtime contributor John Wiegley was announced as the new maintainer on November Wiegley was joined by Eli Zaretskii in July and Lars Ingebrigtsen in September br br br Licensing br The terms of the GNU General Public License GPL state that the Emacs source code including both the C and Emacs Lisp components are freely available for examination modification and redistribution br Older versions of the GNU Emacs documentation appeared under an ad hoc license that required the inclusion of certain text in any modified copy In the GNU Emacs user s manual for example this included instructions for obtaining GNU Emacs and Richard Stallman s essay The GNU Manifesto The XEmacs manuals which were inherited from older GNU Emacs manuals when the fork occurred have the same license Newer versions of the documentation use the GNU Free Documentation License with invariant sections that require the inclusion of the same documents and that the manuals proclaim themselves as GNU Manuals br For GNU Emacs like many other GNU packages it remains policy to accept significant code contributions only if the copyright holder executes a suitable disclaimer or assignment of their copyright interest to the Free Software Foundation FSF Small contributions of fewer than lines of code are exempt This policy is in place so that the FSF can defend the software in court if its copyleft license is violated br In it was noticed that GNU Emacs had been accidentally releasing some binaries without corresponding source code for two years in opposition to the intended spirit of the GPL Richard Stallman described this incident as a very bad mistake which was promptly fixed The FSF did not sue any downstream redistributors who unknowingly violated the GPL by distributing these binaries br br br Using GNU Emacs br br br Commands br In its normal editing mode GNU Emacs behaves like common text editors by allowing the user to type text with the keyboard and move the editing point with arrow keys Escape key sequences or pressing the control key and or the meta key alt key or super keys in conjunction with a regular key produces modified keystrokes that invoke functions from the Emacs Lisp environment Commands such as save buffer and save buffers kill emacs combine multiple modified keystrokes br Some GNU Emacs commands work by invoking external programs such as ispell for spell checking and the GNU Compiler Collection GCC for program compilation Emacs also supports inferior processes long lived child processes that interact with the editor This is used to implement shell mode running a Unix shell as inferior process as well as read eval print loop REPL modes for various programming languages Emacs support for external processes makes it suitable for interactive programming along the lines of Interlisp or Smalltalk br Users who prefer the widely used IBM Common User Access keyboard shortcut layout can use cua mode a package that originally was a third party add on but has been included in GNU Emacs since version br br br Minibuffer br Emacs uses the minibuffer normally the bottommost line to display messages and request information functions that are often performed by dialog boxes in GUI editors The minibuffer holds information such as text to target in a search or the name of a file to read or save When applicable command line completion is available using the tab and space keys br br br File management and display br Emacs keeps text in data structures known as buffers Buffers may or may not be displayed onscreen and all buffer features are accessible by both Emacs Lisp programs and the user interface The user can create new buffers and dismiss unwanted ones and many buffers can exist at the same time limited only by available memory Emacs can be configured to save the list of open buffers on exit and reopen this list when it is restarted br Some buffers contain text loaded from text files which the user can edit and save back to permanent storage These buffers are said to be visiting files Buffers also serve to display other data such as the output of Emacs commands dired directory listings documentation strings displayed by the help library and notification messages that in other editors would be displayed in a dialog box Some of these notifications are displayed briefly in the minibuffer and GNU Emacs provides a Messages buffer that keeps a history of the most recent notifications of this type When the minibuffer is used for output from Emacs it is called the echo area Longer notifications are displayed in buffers of their own The maximum length of messages that will be displayed in the minibuffer is of course configurable br Buffers can also serve as input and output areas for an external process such as a shell or REPL Buffers which Emacs creates on its own are typically named with asterisks on each end to distinguish from user buffers The list of open buffers is itself displayed in this type of buffer br Most Emacs key sequences remain functional in any buffer For example the standard Ctrl s isearch function can be used to search filenames in dired buffers and the file list can be saved to a text file just as any other buffer Dired buffers can be switched to a writable mode in which filenames and attributes can be edited textually when the buffer is saved the changes are written to the filesystem This allows multiple files to be renamed using the search and replace features of Emacs When so equipped Emacs displays image files in buffers Emacs is binary safe and bit clean br Emacs can split the editing area into separate non overlapping sections called windows a feature that has been available since predating the graphical user interface in common use In Emacs terminology windows are similar to what other systems call frames or panes a rectangular portion of the program s display that can be updated and interacted with independently Each Emacs window has a status bar called the mode line displayed by default at the bottom edge of the window Emacs windows are available both in text terminal and graphical modes and allow more than one buffer or several parts of a buffer to be displayed at once Common applications are to display a dired buffer along with the contents of files in the current directory there are special modes to make the file buffer follow the file highlighted in dired to display the source code of a program in one window while another displays a shell buffer with the results of compiling the program to run a debugger along with a shell buffer running the program to work on code while displaying a man page or other documentation possibly loaded over the World Wide Web using one of Emacs built in web browsers or simply to display multiple files for editing at once such as a header along with its implementation file for C based languages In addition there is follow mode a minor mode that chains windows to display non overlapping portions of a buffer Using follow mode a single file can be displayed in multiple side by side windows that update appropriately when scrolled In addition Emacs supports narrowing a buffer to display only a portion of a file with top bottom of buffer navigation functionality and buffer size calculations reflecting only the selected range br Emacs windows are tiled and cannot appear above or below their companions Emacs can launch multiple frames which are displayed as individual windows in a graphical environment On a text terminal multiple frames are displayed stacked filling the entire terminal and can be switched using the standard Emacs commands br br br Major modes br GNU Emacs can display or edit a variety of different types of text and adapts its behavior by entering add on modes called major modes There are major modes for many different purposes including editing ordinary text files the source code of many markup and programming languages as well as displaying web pages directory listings and other system info Each major mode involves an Emacs Lisp program that extends the editor to behave more conveniently for the specified type of text Major modes typically provide some or all of the following common features br br Syntax highlighting font lock combinations of fonts and colors termed faces that differentiate between document elements such as keywords and comments br Automatic indentation to maintain consistent formatting within a file br The automatic insertion of elements required by the structure of the document such as spaces newlines and parentheses br Special editing commands such as commands to jump to the beginning or the end of a function while editing a programming file or commands to validate documents or insert closing tags while working with markup languages such as XML br br br Minor modes br The use of minor modes enables further customization A GNU Emacs editing buffer can use only one major mode at a time but multiple minor modes can operate simultaneously These may operate directly on documents as in the way the major mode for the C programming language defines a separate minor mode for each of its popular indent styles or they may alter the editing environment Examples of the latter include a mode that adds the ability to undo changes to the window configuration and one that performs on the fly syntax checking There is also a minor mode that allows multiple major modes to be used in a single file for convenience when editing a document in which multiple programming languages are embedded br br br Batch mode br GNU Emacs supports the capability to use it as an interpreter for the Emacs Lisp language without displaying the text editor user interface In batch mode user configuration is not loaded and the terminal interrupt characters C c and C z will have their usual effect of exiting the program or suspending execution instead of invoking Emacs keybindings GNU Emacs has command line options to specify either a file to load and execute or an Emacs Lisp function may be passed in from the command line Emacs will start up execute the passed in file or function print the results then exit The shebang line usr bin emacs script allows the creation of standalone scripts in Emacs Lisp br br br Manuals br br The GNU Emacs Manual written by Richard Stallman is bundled with GNU Emacs and can be viewed with the built in info browser Two additional manuals the Emacs Lisp Reference Manual by Bil Lewis Richard Stallman and Dan Laliberte and An Introduction to Programming in Emacs Lisp by Robert Chassell are included All three manuals are also published in book form by the Free Software Foundation br br br Internationalization br GNU Emacs has support for many alphabets scripts writing systems and cultural conventions and provides spell checking for many languages by calling external programs such as ispell Version added support for bidirectional text and left to right and right to left writing direction for languages such as Arabic Persian and Hebrew br Many character encoding systems including UTF are supported GNU Emacs uses UTF for its encoding as of version while prior versions used their own encoding internally and performed conversion upon load and save The internal encoding used by XEmacs is similar to that of GNU Emacs but differs in details br The GNU Emacs user interface originated in English and with the exception of the beginners tutorial has not been translated into any other language br A subsystem called Emacspeak enables visually impaired and blind users to control the editor through audio feedback br br br Extensibility br br The behavior of GNU Emacs can be modified and extended almost without limit by incorporating Emacs Lisp programs that define new commands new buffer modes new keymaps add command line options and so on Many extensions providing user facing functionality define a major mode either for a new file type or to build a non text editing user interface others define only commands or minor modes or provide functions that enhance another extension br Since version GNU Emacs includes a built in package manager accessible with the list packages command that allows users to search for and install packages Historically packages were downloaded manually often distributed through the Usenet newsgroup gnu emacs sources Over time many popular packages have been included in Emacs by default for example version began bundling Org mode Calc TRAMP and many others br br Notable packages include br br AUCTeX tools to edit and process TeX and LaTeX documents br Dired a file manager br Dissociated press a Racter like text generator br Dunnet a text adventure br Emacs Web Wowser eww a web browser br Emacs Speaks Statistics ESS modes for editing statistical languages like R and SAS br ERC an IRC client br Eshell a command line shell written in Emacs Lisp This allows closer integration with the Emacs environment than standard shells such as bash or PowerShell which are also available from within Emacs For example in Eshell Elisp functions are available as shell commands and output from Unix commands can be redirected to an Emacs buffer br Exwm an X window manager allowing X apps to be run in an Emacs window br Gnus a full featured news client newsreader and email client and early evidence for Zawinski s Law br Magit for working with the version control system Git br MULtilingual Enhancement to Emacs MULE allows editing of text in multiple languages in a manner somewhat analogous to Unicode br Org mode for keeping notes maintaining various types of lists planning and measuring projects and composing documents in many formats such as PDF HTML or OpenDocument formats There are static site generators using org mode as well as an extension Babel allowing it to be used for literate programming br Rcirc an IRC client br Superior Lisp Interaction Mode for Emacs SLIME extends GNU Emacs into a development environment for Common Lisp With SLIME written in Emacs Lisp the GNU Emacs editor communicates with a Common Lisp system using the SWANK backend over a special communication protocol and provides such tools as a read eval print loop a data inspector and a debugger br Texinfo Info an online help browser br br br Performance br In its early history GNU Emacs often ran noticeably slower than rival text editors because the loading and interpreting of its Lisp based code incurs a performance overhead Modern computers are powerful enough to run GNU Emacs with ease but versions prior to released in couldn t edit files larger than MB The file size limit was raised in successive versions and bit versions after GNU Emacs can edit files up to MB in size Emacs compiled on a bit machine can handle much larger buffers br While GNU Emacs is largely written in Emacs Lisp it makes extensive use of natively compiled C code to improve performance In addition to its own C code it uses external libraries such as libxml for parsing XML Packages installed by the user can load dynamic modules br Since version Emacs can natively compile Emacs Lisp files via libgccjit as opposed to just byte compiling them resulting in a significant boost in performance br br br Platforms br GNU Emacs runs on a wide variety of operating systems including DOS Windows and most Unix like operating systems such as Linux the various BSDs Solaris AIX HP UX and macOS Many Unix like systems include Emacs by default In an official port for Android was released Version removed supported for some platforms deemed obsolete br GNU Emacs runs both on text terminals and in graphical user interface GUI environments On Unix like operating systems GNU Emacs can use the X Window System to produce its GUI either directly using Athena widgets or by using a widget toolkit such as Motif LessTif or GTK GNU Emacs can also use the graphics systems native to macOS and Windows to provide menubars toolbars scrollbars and context menus conforming more closely to each platform s look and feel br br br Forks br br br XEmacs br br Lucid Emacs based on an early version of GNU Emacs was developed beginning in by Jamie Zawinski and others at Lucid Inc One of the best known forks in free software development occurred when the codebases of the two Emacs versions diverged and the separate development teams ceased efforts to merge them back into a single program After Lucid filed for bankruptcy Lucid Emacs was renamed XEmacs XEmacs development has slowed with the most recent stable version released in January while GNU Emacs has implemented many formerly XEmacs only features This has led some users to proclaim XEmacs death br br br Other forks of GNU Emacs br Other forks less known than XEmacs include br br Meadow a Japanese version for Microsoft Windows br SXEmacs Steve Youngs fork of XEmacs br Aquamacs a version which focuses on integrating with the Apple Macintosh user interface br Remacs an incremental port of GNU Emacs to the Rust programming language incomplete and no longer maintained as of br br br Release history br Changes in each Emacs release are listed in a NEWS file distributed with Emacs Changes brought about by downgrading to the previous release are listed in an Antinews file often with some snarky commentary on why this might be desirable br br br br br br Further reading br Stallman Richard M GNU Emacs Manual th ed GNU Press ISBN br Stallman Richard M My Lisp Experiences and the Development of GNU Emacs Retrieved br Chassel Robert J An Introduction to Programming in Emacs Lisp GNU Press ISBN Archived from the original on br Glickstein Bob April Writing GNU Emacs Extensions O Reilly Associates ISBN br Cameron Debra Elliott James Loy Marc Raymond Eric Rosenblatt Bill December Learning GNU Emacs rd Edition O Reilly Associates ISBN br br br External links br br Official website br Unofficial Emacs wiki br Emacs Free Software Directory