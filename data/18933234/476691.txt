title: Focus (computing)
id: 476691
In a computing graphical user interface GUI a component has focus when it is selected to receive input from the user by an event such as a mouse button click or keypress Moving the focus away from a specific user interface element is known as a blur event in relation to this element Typically the focus is withdrawn from an element by giving another element the focus This means that focus and blur events are virtually simultaneous in relation to different user interface elements one that becomes focused and one that is blurred in the computing not visual sense br The concept is similar to a cursor in a text based environment However when considering a graphical interface there is also a mouse pointer involved Moving the mouse will typically move the mouse pointer without changing the focus The focus can usually be changed by clicking on a component that can receive focus with the mouse Many desktops also allow the focus to be changed with the keyboard By convention the Tab key is used to move the focus to the next focusable component and Shift Tab to the previous one When graphical interfaces were first introduced many computers did not have mice so this alternative was necessary This feature makes it easier for people unable to use a mouse to use the user interface In certain circumstances the arrow keys can be used to change focus br br br Window focus br The behaviour of focus on one s desktop can be governed by policies in window management br br br Click to focus br On most mainstream user interfaces such as ones made by Microsoft and Apple it is common to find a focus follows click policy or click to focus where one must click the mouse inside of the window for that window to gain focus This also typically results in the window being raised above all other windows on screen If a clickfocus model such as this is being used the current application window continues to retain focus and collect input even if the mouse pointer is over another application window br br br Focus follows pointer br Another common policy on Unix systems using X Window System X is the focus follows mouse policy or FFM where the focus automatically follows the current placement of the pointer The focused window is not necessarily raised parts of it may remain below other windows Window managers with this policy usually offer autoraise which raises the window when it is focused typically after a configurable short delay A possible consequence of a followfocus policy is that no window has focus when the pointer is moved over the background with no window underneath otherwise the focus simply remains in the last window br br br Sloppy focus br The sloppyfocus model is a variant of the followfocus model It allows input to continue to be collected by the last focused window when the mouse pointer is moved away from any window such as over a menubar or desktop area br br br Focus models used by X window managers br br br Intra window component focus br Individual components of a window may also have a focal position For instance in a text editing package the text editing window must have the Focus so that text can be entered When text is entered into the component it will appear at the position of the text cursor which will also normally be movable using the mouse pointer br Which component should have the default focus and how focus should move between components are difficult but important problems in user interface design Giving the wrong thing focus means that the user has to waste time moving the focus Conversely giving the right thing focus can significantly enhance the user experience br br br See also br Tab order br Focus stealing br Selection user interface br br br br br br Notes br Per window or window class with additional support for never focus windows that should never receive focus 