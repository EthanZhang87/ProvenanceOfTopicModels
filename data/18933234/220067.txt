title: Standard streams
id: 220067
In computer programming standard streams are preconnected input and output communication channels between a computer program and its environment when it begins execution The three input output I O connections are called standard input stdin standard output stdout and standard error stderr Originally I O happened via a physically connected system console input via keyboard output via monitor but standard streams abstract this When a command is executed via an interactive shell the streams are typically connected to the text terminal on which the shell is running but can be changed with redirection or a pipeline More generally a child process inherits the standard streams of its parent process br br br Application br br Users generally know standard streams as input and output channels that handle data coming from an input device or that write data from the application The data may be text with any encoding or binary data br When a program is run as a daemon its standard error stream is redirected into a log file typically for error analysis purposes br Streams may be used to chain applications meaning that the output stream of one program can be redirected to be the input stream to another application In many operating systems this is expressed by listing the application names separated by the vertical bar character for this reason often called the pipeline character A well known example is the use of a pagination application such as more providing the user control over the display of the output stream on the display br br br Background br In most operating systems predating Unix programs had to explicitly connect to the appropriate input and output devices OS specific intricacies caused this to be a tedious programming task On many systems it was necessary to obtain control of environment settings access a local file table determine the intended data set and handle hardware correctly in the case of a punch card reader magnetic tape drive disk drive line printer card punch or interactive terminal br One of Unix s several groundbreaking advances was abstract devices which removed the need for a program to know or care what kind of devices it was communicating with Older operating systems forced upon the programmer a record structure and frequently non orthogonal data semantics and device control Unix eliminated this complexity with the concept of a data stream an ordered sequence of data bytes which can be read until the end of file A program may also write bytes as desired and need not and cannot easily declare their count or grouping br Another Unix breakthrough was to automatically associate input and output to terminal keyboard and terminal display respectively by default the program and programmer did absolutely nothing to establish input and output for a typical input process output program unless it chose a different paradigm In contrast previous operating systems usually required some often complex job control language to establish connections or the equivalent burden had to be orchestrated by the program br Since Unix provided standard streams the Unix C runtime environment was obliged to support it as well As a result most C runtime environments and C s descendants regardless of the operating system provide equivalent functionality br br br Standard input stdin br Standard input is a stream from which a program reads its input data The program requests data transfers by use of the read operation Not all programs require stream input For example the dir and ls programs which display file names contained in a directory may take command line arguments but perform their operations without any stream data input br Unless redirected standard input is inherited from the parent process In the case of an interactive shell that is usually associated with the input device of a terminal or pseudo terminal which is ultimately linked to a user s keyboard br On POSIX systems the file descriptor for standard input is zero the POSIX unistd h definition is STDIN FILENO the corresponding C stdio h abstraction is provided via the FILE stdin global variable Similarly the global C std cin variable of type iostream provides an abstraction via C streams Similar abstractions exist in the standard I O libraries of practically every programming language br br br Standard output stdout br Standard output is a stream to which a program writes its output data The program requests data transfer with the write operation Not all programs generate output For example the file rename command variously called mv move or ren is silent on success br Unless redirected standard output is inherited from the parent process In the case of an interactive shell that is usually the text terminal which initiated the program br The file descriptor for standard output is one the POSIX unistd h definition is STDOUT FILENO the corresponding C stdio h variable is FILE stdout similarly the C iostream variable is std cout br br br Standard error stderr br Standard error is another output stream typically used by programs to output error messages or diagnostics It is a stream independent of standard output and can be redirected separately br This solves the semi predicate problem allowing output and errors to be distinguished and is analogous to a function returning a pair of values see Semi predicate problem Multi valued return The usual destination is the text terminal which started the program to provide the best chance of being seen even if standard output is redirected so not readily observed For example output of a program in a pipeline is redirected to input of the next program or a text file but errors from each program still go directly to the text terminal so they can be reviewed by the user in real time br It is acceptable and normal to direct standard output and standard error to the same destination such as the text terminal Messages appear in the same order as the program writes them unless buffering is involved For example in common situations the standard error stream is unbuffered but the standard output stream is line buffered in this case text written to standard error later may appear on the terminal earlier if the standard output stream buffer is not yet full br The file descriptor for standard error is defined by POSIX as two the unistd h header file provides the symbol STDERR FILENO the corresponding C stdio h variable is FILE stderr The C iostream standard header provides two variables associated with this stream std cerr and std clog the former being unbuffered and the latter using the same buffering mechanism as all other C streams br Bourne style shells allow standard error to be redirected to the same destination that standard output is directed to using br br br br csh style shells allow standard error to be redirected to the same destination that standard output is directed to using br br br br Standard error was added to Unix in the s after several wasted phototypesetting runs ended with error messages being typeset instead of displayed on the user s terminal br br br Timeline br br br s Fortran br Fortran has the equivalent of Unix file descriptors By convention many Fortran implementations use unit numbers UNIT for stdin UNIT for stdout and UNIT for stderr In Fortran the intrinsic ISO FORTRAN ENV module was standardized to include the named constants INPUT UNIT OUTPUT UNIT and ERROR UNIT to portably specify the unit numbers br br br ALGOL br ALGOL was criticized for having no standard file access br br br ALGOL br ALGOL s input and output facilities were collectively referred to as the transput Koster coordinated the definition of the transput standard The model included three standard channels stand in stand out and stand back br br br s C and Unix br In the C programming language the standard input output and error streams are attached to the existing Unix file descriptors and respectively In a POSIX environment the unistd h definitions STDIN FILENO STDOUT FILENO or STDERR FILENO should be used instead rather than magic numbers File pointers stdin stdout and stderr are also provided br Ken Thompson designer and implementer of the original Unix operating system modified sort in Version Unix to accept as representing standard input which spread to other utilities and became a part of the operating system as a special file in Version Diagnostics were part of standard output through Version after which Dennis M Ritchie created the concept of standard error br br br Java br In Java the standard streams are referred to by System in for stdin System out for stdout and System err for stderr br br br s NET br In C and other NET languages the standard streams are referred to by System Console In for stdin System Console Out for stdout and System Console Error for stderr Basic read and write capabilities for the stdin and stdout streams are also accessible directly through the class System Console e g System Console WriteLine can be used instead of System Console Out WriteLine br System Console In System Console Out and System Console Error are System IO TextReader stdin and System IO TextWriter stdout stderr objects which only allow access to the underlying standard streams on a text basis Full binary access to the standard streams must be performed through the System IO Stream objects returned by System Console OpenStandardInput System Console OpenStandardOutput and System Console OpenStandardError respectively br br When applying the System Diagnostics Process class one can use the instance properties StandardInput StandardOutput and StandardError of that class to access the standard streams of the process br br br Python or br The following example written in Python shows how to redirect the standard input both to the standard output br and to a text file br br br GUIs br Graphical user interfaces GUIs do not always make use of the standard streams they do when GUIs are wrappers of underlying scripts and or console programs for instance the Synaptic package manager GUI which wraps apt commands in Debian and or Ubuntu GUIs created with scripting tools like Zenity and KDialog by KDE project make use of stdin stdout and stderr and are based on simple scripts rather than a complete GUI programmed and compiled in C C using Qt GTK or other equivalent proprietary widget framework br The Services menu as implemented on NeXTSTEP and Mac OS X is also analogous to standard streams On these operating systems graphical applications can provide functionality through a system wide menu that operates on the current selection in the GUI no matter in what application br Some GUI programs primarily on Unix still write debug information to standard error Others such as many Unix media players may read files from standard input Popular Windows programs that open a separate console window in addition to their GUI windows are the emulators pSX and DOSBox br GTK server can use stdin as a communication interface with an interpreted program to realize a GUI br The Common Lisp Interface Manager paradigm presents GUI elements sent to an extended output stream br br br See also br Redirection computing br Stream computing br Input output br C file input output br SYSIN and SYSOUT br Standard streams in OpenVMS br br br br br br Sources br br br External links br Standard Input Definition by The Linux Information Project br Standard Output Definition by The Linux Information Project br Standard Error Definition by The Linux Information Project