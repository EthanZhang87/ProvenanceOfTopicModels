title: SLIME
id: 6899503
SLIME the Superior Lisp Interaction Mode for Emacs is an Emacs mode for developing Common Lisp applications SLIME originates in an Emacs mode called SLIM written by Eric Marsden It is developed as an open source public domain software project by Luke Gorrie and Helmut Eller Over Lisp developers have contributed code to SLIME since the project was started in SLIME uses a backend called Swank that is loaded into Common Lisp br SLIME works with the following Common Lisp implementations br br CMU Common Lisp CMUCL br Scieneer Common Lisp br Steel Bank Common Lisp SBCL br Clozure CL former OpenMCL br LispWorks br Allegro Common Lisp br CLISP br Embeddable Common Lisp ECL br Armed Bear Common Lisp ABCL br Some implementations of other programming languages are using SLIME br br Clojure br JavaScript br Kawa a Scheme implementation br GNU R br Ruby br MIT Scheme br Scheme br There are also clones of SLIME br br SOLID for OCaml br br br br br Peachybabies com br br br External links br SLIME project page br The birth of SLIME on the cmucl imp mailing list August br SLIME presentation by Tobias Rittweiler Archived at the Wayback Machine br Review of SLIME by Andy Wingo br Bill Clementson s Slime Tips and Techniques Part See also Part Part Part Part Part and Part br Bill Clementson s SLIME Refactoring describes how to set up SLIME br Bill Clementson s Emacs Keymaps and the SLIME scratch buffer br Bill Clementson s CL Music and SLIME Tutorials contains a good SLIME tutorial br Marco Baringer s SLIME guru SLIME setup br Marco Baringer s Editing Lisp Code with Emacs br The slime devel Archives br Up to date Swank for MIT GNU Scheme for use with SLIME CVS