title: GNU Scientific Library
id: 1113067
The GNU Scientific Library or GSL is a software library for numerical computations in applied mathematics and science The GSL is written in C wrappers are available for other programming languages The GSL is part of the GNU Project and is distributed under the GNU General Public License br br br Project history br The GSL project was initiated in by physicists Mark Galassi and James Theiler of Los Alamos National Laboratory They aimed at writing a modern replacement for widely used but somewhat outdated Fortran libraries such as Netlib They carried out the overall design and wrote early modules with that ready they recruited other scientists to contribute br The overall development of the library and the design and implementation of the major modules was carried out by Brian Gough and Gerard Jungman Other major contributors were Jim Davies Reid Priedhorsky M Booth and F Rossi br Version was released in In the following years the library expanded only slowly as the documentation stated the maintainers were more interested in stability than in additional functionality Major version ended with release of July this was the only public activity in the three years br Vigorous development resumed with publication of version in October The latest version was released in June br br br Example br The following example program calculates the value of the Bessel function of the first kind and order zero for br br The example program has to be linked to the GSL library br upon compilation br br The output is shown below and should be correct to double precision accuracy br br br Features br The software library provides facilities for br br br Programming language bindings br Since the GSL is written in C it is straightforward to provide wrappers for other programming languages Such wrappers currently exist for br br AMPL br C br Fortran br Haskell br Java br Julia br Common Lisp br OCaml br Octave br Perl Data Language br Python br R br Ruby br Rust br br br C support br The GSL can be used in C classes but not using pointers to member functions because the type of pointer to member function is different from pointer to function Instead pointers to static functions have to be used Another common workaround is using a functor br C wrappers for GSL are available Not all of these are regularly maintained They do offer access to matrix and vector classes without having to use GSL s interface to malloc and free functions Some also offer support for also creating workspaces that behave like Smart pointer classes Finally there is limited as of April support for allowing the user to create classes to represent a parameterised function as a functor br While not strictly wrappers there are some C classes that allow C users to use the Gnu Scientific Library with wrapper features br br br See also br br List of numerical analysis software br List of numerical libraries br Netlib br Numerical Recipes br br br Notes br br br br br br External links br Official website br GSL Design Document br The gsl package for R programming language an R wrapper for the special functions and quasi random number generators br FLOSS FOR SCIENCE interview with Mark Galassi on the history of GSL 