title: Cocoa text system
id: 46461160
The Cocoa text system formerly known simply by the primary class name NSText is the linked network of classes protocols interfaces and objects that provide typography and text field editing capabilities and to Cocoa applications on Apple s macOS where it is the primary text handling system Although extremely complex the standard text handling abilities of the Cocoa text system have been widely praised as without peer br It is possible to implement a fully featured rich text editor in only a few lines of code br Formerly embodied in developer NeXT Inc s OpenStep API specification and implemented in NeXT s OPENSTEP operating system and probably also in the earlier NeXTSTEP platform Cocoa s NSText has additionally been implemented via the OpenStep API specification successfully in third party implementations such as the free and open source GNUstep br The Cocoa text system uses a Model View Controller design pattern The view layer is handled by NSTextView and NSTextField NSLayoutManager and NSTextContainer are the controller layer and NSTextStorage a mutable attributed string subclass is the model br The Cocoa text system also interacts with Services to provide standard streams functionality in a GUI environment br Users interact with two classes NSTextField providing single line edit fields or NSTextView providing multi line editing Each NSTextField uses a shared instance of a NSTextView called the field editor This was done to reduce high memory requirements that would arise if every field implemented its own NSTextView object graph when only one field can actually have focus at any time br Cocoa adopts many Emacs keybindings familiar to programmers and the default text editing keyboard shortcuts can be overridden and new custom shortcuts can be created by creating and editing related configuration files br br br br br br External links br About the Cocoa Text System br Text System Architecture