title: ASCII
id: 586
ASCII ASS kee an acronym for American Standard Code for Information Interchange is a character encoding standard for electronic communication ASCII codes represent text in computers telecommunications equipment and other devices Because of technical limitations of computer systems at the time it was invented ASCII has just code points of which only are printable characters which severely limited its scope Modern computer systems have evolved to use Unicode which has over a million code points but the first of these are the same as the ASCII set br The Internet Assigned Numbers Authority IANA prefers the name US ASCII for this character encoding br ASCII is one of the IEEE milestones br br br Overview br ASCII was developed in part from telegraph code Its first commercial use was in the Teletype Model and the Teletype Model as a seven bit teleprinter code promoted by Bell data services Work on the ASCII standard began in May with the first meeting of the American Standards Association s ASA now the American National Standards Institute or ANSI X subcommittee The first edition of the standard was published in underwent a major revision during and experienced its most recent update during Compared to earlier telegraph codes the proposed Bell code and ASCII were both ordered for more convenient sorting i e alphabetization of lists and added features for devices other than teleprinters br The use of ASCII format for Network Interchange was described in That document was formally elevated to an Internet Standard in br Originally based on the modern English alphabet ASCII encodes specified characters into seven bit integers as shown by the ASCII chart in this article Ninety five of the encoded characters are printable these include the digits to lowercase letters a to z uppercase letters A to Z and punctuation symbols In addition the original ASCII specification included non printing control codes which originated with Teletype models most of these are now obsolete although a few are still commonly used such as the carriage return line feed and tab codes br For example lowercase i would be represented in the ASCII encoding by binary hexadecimal i is the ninth letter decimal br Despite being an American standard ASCII does not have a code point for the cent It also does not support English terms with diacritical marks such as r sum and jalape o or proper nouns with diacritical marks such as Beyonc br br br History br br The American Standard Code for Information Interchange ASCII was developed under the auspices of a committee of the American Standards Association ASA called the X committee by its X later X L subcommittee and later by that subcommittee s X working group now INCITS The ASA later became the United States of America Standards Institute USASI and ultimately became the American National Standards Institute ANSI br With the other special characters and control codes filled in ASCII was published as ASA X leaving code positions without any assigned meaning reserved for future standardization and one unassigned control code There was some debate at the time whether there should be more control characters rather than the lowercase alphabet The indecision did not last long during May the CCITT Working Party on the New Telegraph Alphabet proposed to assign lowercase characters to sticks and and International Organization for Standardization TC SC voted during October to incorporate the change into its draft standard The X task group voted its approval for the change to ASCII at its May meeting Locating the lowercase letters in sticks and caused the characters to differ in bit pattern from the upper case by a single bit which simplified case insensitive character matching and the construction of keyboards and printers br The X committee made other changes including other new characters the brace and vertical bar characters renaming some control characters SOM became start of header SOH and moving or removing others RU was removed ASCII was subsequently updated as USAS X then USAS X ANSI X and finally ANSI X br br br Revisions br ASA X br ASA X approved but not published nevertheless used by IBM Display Stations and IBM Display Control br USAS X br USAS X br ANSI X br ANSI X br ANSI X R br ANSI X R br ANSI INCITS R br ANSI INCITS R br INCITS R br INCITS R br INCITS R br In the X standard the X committee also addressed how ASCII should be transmitted least significant bit first and recorded on perforated tape They proposed a track standard for magnetic tape and attempted to deal with some punched card formats br br br Design considerations br br br Bit width br The X subcommittee designed ASCII based on the earlier teleprinter encoding systems Like other character encodings ASCII specifies a correspondence between digital bit patterns and character symbols i e graphemes and control characters This allows digital devices to communicate with each other and to process store and communicate character oriented information such as written language Before ASCII was developed the encodings in use included alphabetic characters numerical digits and from to special graphic symbols To include all these and control characters compatible with the Comit Consultatif International T l phonique et T l graphique CCITT International Telegraph Alphabet No ITA standard of FIELDATA and early EBCDIC more than codes were required for ASCII br ITA was in turn based on Baudot code the bit telegraph code mile Baudot invented in and patented in br The committee debated the possibility of a shift function like in ITA which would allow more than codes to be represented by a six bit code In a shifted code some character codes determine choices between options for the following character codes It allows compact encoding but is less reliable for data transmission as an error in transmitting the shift code typically makes a long part of the transmission unreadable The standards committee decided against shifting and so ASCII required at least a seven bit code br The committee considered an eight bit code since eight bits octets would allow two four bit patterns to efficiently encode two digits with binary coded decimal However it would require all data transmission to send eight bits when seven could suffice The committee voted to use a seven bit code to minimize costs associated with data transmission Since perforated tape at the time could record eight bits in one position it also allowed for a parity bit for error checking if desired c Eight bit machines with octets as the native data type that did not use parity checking typically set the eighth bit to br br br Internal organization br The code itself was patterned so that most control codes were together and all graphic codes were together for ease of identification The first two so called ASCII sticks positions were reserved for control characters The space character had to come before graphics to make sorting easier so it became position hex for the same reason many special signs commonly used as separators were placed before digits The committee decided it was important to support uppercase character alphabets and chose to pattern ASCII so it could be reduced easily to a usable character set of graphic codes as was done in the DEC SIXBIT code Lowercase letters were therefore not interleaved with uppercase To keep options available for lowercase letters and other graphics the special and numeric codes were arranged before the letters and the letter A was placed in position hex to match the draft of the corresponding British standard The digits are prefixed with but the remaining bits correspond to their respective values in binary making conversion with binary coded decimal straightforward for example in encoded to where is in binary br Many of the non alphanumeric characters were positioned to correspond to their shifted position on typewriters an important subtlety is that these were based on mechanical typewriters not electric typewriters Mechanical typewriters followed the de facto standard set by the Remington No the first typewriter with a shift key and the shifted values of were early typewriters omitted and using O capital letter o and l lowercase letter L instead but and pairs became standard once and became common Thus in ASCII were placed in the second stick positions corresponding to the digits in the adjacent stick The parentheses could not correspond to and however because the place corresponding to was taken by the space character This was accommodated by removing underscore from and shifting the remaining characters which corresponded to many European typewriters that placed the parentheses with and This discrepancy from typewriters led to bit paired keyboards notably the Teletype Model which used the left shifted layout corresponding to ASCII differently from traditional mechanical typewriters br Electric typewriters notably the IBM Selectric used a somewhat different layout that has become de facto standard on computers following the IBM PC especially Model M and thus shift values for symbols on modern keyboards do not correspond as closely to the ASCII table as earlier keyboards did The pair also dates to the No and the pairs were used on some keyboards others including the No did not shift comma or full stop so they could be used in uppercase without unshifting However ASCII split the pair dating to No and rearranged mathematical symbols varied conventions commonly to br Some then common typewriter characters were not included notably while were included as diacritics for international use and for mathematical use together with the simple line characters in addition to common The symbol was not used in continental Europe and the committee expected it would be replaced by an accented in the French variation so the was placed in position hex right before the letter A br The control codes felt essential for data transmission were the start of message SOM end of address EOA end of message EOM end of transmission EOT who are you WRU are you RU a reserved device control DC synchronous idle SYNC and acknowledge ACK These were positioned to maximize the Hamming distance between their bit patterns br br br Character order br ASCII code order is also called ASCIIbetical order Collation of data is sometimes done in this order rather than standard alphabetical order collating sequence The main deviations in ASCII order are br br All uppercase come before lowercase letters for example Z precedes a br Digits and many punctuation marks come before letters br An intermediate order converts uppercase letters to lowercase before comparing ASCII values br br br Character set br br br Character groups br br br Control characters br br ASCII reserves the first code points numbers decimal and the last one number decimal for control characters These are codes intended to control peripheral devices such as printers or to provide meta information about data streams such as those stored on magnetic tape Despite their name these code points do not represent printable characters i e they are not characters at all but signals For debugging purposes placeholder symbols such as those given in ISO and its predecessors are assigned to them br For example character x A represents the line feed function which causes a printer to advance its paper and character represents backspace RFC refers to control characters that do not include carriage return line feed or white space as non whitespace control characters Except for the control characters that prescribe elementary line oriented formatting ASCII does not define any mechanism for describing the structure or appearance of text within a document Other schemes such as markup languages address page and document layout and formatting br The original ASCII standard used only short descriptive phrases for each control character The ambiguity this caused was sometimes intentional for example where a character would be used slightly differently on a terminal link than on a data stream and sometimes accidental for example the standard is unclear about the meaning of delete br Probably the most influential single device affecting the interpretation of these characters was the Teletype Model ASR which was a printing terminal with an available paper tape reader punch option Paper tape was a very popular medium for long term program storage until the s less costly and in some ways less fragile than magnetic tape In particular the Teletype Model machine assignments for codes control Q DC also known as XON control S DC also known as XOFF and delete became de facto standards The Model was also notable for taking the description of control G code BEL meaning audibly alert the operator literally as the unit contained an actual bell which it rang when it received a BEL character Because the keytop for the O key also showed a left arrow symbol from ASCII which had this character instead of underscore a noncompliant use of code control O shift in interpreted as delete previous character was also adopted by many early timesharing systems but eventually became neglected br When a Teletype ASR equipped with the automatic paper tape reader received a control S XOFF an abbreviation for transmit off it caused the tape reader to stop receiving control Q XON transmit on caused the tape reader to resume This so called flow control technique became adopted by several early computer operating systems as a handshaking signal warning a sender to stop transmission because of impending buffer overflow it persists to this day in many systems as a manual output control technique On some systems control S retains its meaning but control Q is replaced by a second control S to resume output br The ASR also could be configured to employ control R DC and control T DC to start and stop the tape punch on some units equipped with this function the corresponding control character lettering on the keycap above the letter was TAPE and TAPE respectively br br br Delete vs backspace br The Teletype could not move its typehead backwards so it did not have a key on its keyboard to send a BS backspace Instead there was a key marked RUB OUT that sent code DEL The purpose of this key was to erase mistakes in a manually input paper tape the operator had to push a button on the tape punch to back it up then type the rubout which punched all holes and replaced the mistake with a character that was intended to be ignored Teletypes were commonly used with the less expensive computers from Digital Equipment Corporation DEC these systems had to use what keys were available and thus the DEL character was assigned to erase the previous character Because of this DEC video terminals by default sent the DEL character for the key marked Backspace while the separate key marked Delete sent an escape sequence many other competing terminals sent a BS character for the backspace key br The early Unix tty drivers unlike some modern implementations allowed only one character to be set to erase the previous character in canonical input processing where a very simple line editor is available this could be set to BS or DEL but not both resulting in recurring situations of ambiguity where users had to decide depending on what terminal they were using shells that allow line editing such as ksh bash and zsh understand both The assumption that no key sent a BS character allowed Ctrl H to be used for other purposes such as the help prefix command in GNU Emacs br br br Escape br Many more of the control characters have been assigned meanings quite different from their original ones The escape character ESC code for example was intended originally to allow sending of other control characters as literals instead of invoking their meaning an escape sequence This is the same meaning of escape encountered in URL encodings C language strings and other systems where certain characters have a reserved meaning Over time this interpretation has been co opted and has eventually been changed br In modern usage an ESC sent to the terminal usually indicates the start of a command sequence which can be used to address the cursor scroll a region set query various terminal properties and more They are usually in the form of a so called ANSI escape code often starting with a Control Sequence Introducer CSI ESC from ECMA and its successors Some escape sequences do not have introducers like the VT full reset command ESC c br In contrast an ESC read from the terminal is most often used as an out of band character used to terminate an operation or special mode as in the TECO and vi text editors In graphical user interface GUI and windowing systems ESC generally causes an application to abort its current operation or to exit terminate altogether br br br End of line br The inherent ambiguity of many control characters combined with their historical usage created problems when transferring plain text files between systems The best example of this is the newline problem on various operating systems Teletype machines required that a line of text be terminated with both carriage return which moves the printhead to the beginning of the line and line feed which advances the paper one line without moving the printhead The name carriage return comes from the fact that on a manual typewriter the carriage holding the paper moves while the typebars that strike the ribbon remain stationary The entire carriage had to be pushed returned to the right in order to position the paper for the next line br DEC operating systems OS RT RSX RSTS TOPS etc used both characters to mark the end of a line so that the console device originally Teletype machines would work By the time so called glass TTYs later called CRTs or dumb terminals came along the convention was so well established that backward compatibility necessitated continuing to follow it When Gary Kildall created CP M he was inspired by some of the command line interface conventions used in DEC s RT operating system br Until the introduction of PC DOS in IBM had no influence in this because their s operating systems used EBCDIC encoding instead of ASCII and they were oriented toward punch card input and line printer output on which the concept of carriage return was meaningless IBM s PC DOS also marketed as MS DOS by Microsoft inherited the convention by virtue of being loosely based on CP M and Windows in turn inherited it from MS DOS br Requiring two characters to mark the end of a line introduces unnecessary complexity and ambiguity as to how to interpret each character when encountered by itself To simplify matters plain text data streams including files on Multics used line feed LF alone as a line terminator The tty driver would handle the LF to CRLF conversion on output so files can be directly printed to terminal and NL newline is often used to refer to CRLF in UNIX documents Unix and Unix like systems and Amiga systems adopted this convention from Multics On the other hand the original Macintosh OS Apple DOS and ProDOS used carriage return CR alone as a line terminator however since Apple later replaced these obsolete operating systems with their Unix based macOS formerly named OS X operating system they now use line feed LF as well The Radio Shack TRS also used a lone CR to terminate lines br Computers attached to the ARPANET included machines running operating systems such as TOPS and TENEX using CR LF line endings machines running operating systems such as Multics using LF line endings and machines running operating systems such as OS that represented lines as a character count followed by the characters of the line and which used EBCDIC rather than ASCII encoding The Telnet protocol defined an ASCII Network Virtual Terminal NVT so that connections between hosts with different line ending conventions and character sets could be supported by transmitting a standard text format over the network Telnet used ASCII along with CR LF line endings and software using other conventions would translate between the local conventions and the NVT The File Transfer Protocol adopted the Telnet protocol including use of the Network Virtual Terminal for use when transmitting commands and transferring data in the default ASCII mode This adds complexity to implementations of those protocols and to other network protocols such as those used for E mail and the World Wide Web on systems not using the NVT s CR LF line ending convention br br br End of file stream br The PDP monitor and its PDP successor TOPS used control Z SUB as an end of file indication for input from a terminal Some operating systems such as CP M tracked file length only in units of disk blocks and used control Z to mark the end of the actual text in the file For these reasons EOF or end of file was used colloquially and conventionally as a three letter acronym for control Z instead of SUBstitute The end of text character ETX also known as control C was inappropriate for a variety of reasons while using control Z as the control character to end a file is analogous to the letter Z s position at the end of the alphabet and serves as a very convenient mnemonic aid A historically common and still prevalent convention uses the ETX character convention to interrupt and halt a program via an input data stream usually from a keyboard br The Unix terminal driver uses the end of transmission character EOT also known as control D to indicate the end of a data stream br In the C programming language and in Unix conventions the null character is used to terminate text strings such null terminated strings can be known in abbreviation as ASCIZ or ASCIIZ where here Z stands for zero br br br Control code chart br br Other representations might be used by specialist equipment for example ISO graphics or hexadecimal numbers br br br Printable characters br Codes hex to Ehex known as the printable characters represent letters digits punctuation marks and a few miscellaneous symbols There are printable characters in total br Code hex the space character denotes the space between words as produced by the space bar of a keyboard Since the space character is considered an invisible graphic rather than a control character it is listed in the table below instead of in the previous section br Code Fhex corresponds to the non printable delete DEL control character and is therefore omitted from this chart it is covered in the previous section s chart Earlier versions of ASCII used the up arrow instead of the caret Ehex and the left arrow instead of the underscore Fhex br br br Usage br ASCII was first used commercially during as a seven bit teleprinter code for American Telephone Telegraph s TWX TeletypeWriter eXchange network TWX originally used the earlier five bit ITA which was also used by the competing Telex teleprinter system Bob Bemer introduced features such as the escape sequence His British colleague Hugh McGregor Ross helped to popularize this work according to Bemer so much so that the code that was to become ASCII was first called the Bemer Ross Code in Europe Because of his extensive work on ASCII Bemer has been called the father of ASCII br On March US President Lyndon B Johnson mandated that all computers purchased by the United States Federal Government support ASCII stating br br I have also approved recommendations of the Secretary of Commerce Luther H Hodges regarding standards for recording the Standard Code for Information Interchange on magnetic tapes and paper tapes when they are used in computer operations br All computers and related equipment configurations brought into the Federal Government inventory on and after July must have the capability to use the Standard Code for Information Interchange and the formats prescribed by the magnetic tape and paper tape standards when these media are used br ASCII was the most common character encoding on the World Wide Web until December when UTF encoding surpassed it UTF is backward compatible with ASCII br br br Variants and derivations br As computer technology spread throughout the world different standards bodies and corporations developed many variations of ASCII to facilitate the expression of non English languages that used Roman based alphabets One could class some of these variations as ASCII extensions although some misuse that term to represent all variants including those that do not preserve ASCII s character map in the bit range Furthermore the ASCII extensions have also been mislabelled as ASCII br br br bit codes br br From early in its development ASCII was intended to be just one of several national variants of an international character code standard br Other international standards bodies have ratified character encodings such as ISO that are identical or nearly identical to ASCII with extensions for characters outside the English alphabet and symbols used outside the United States such as the symbol for the United Kingdom s pound sterling e g with code page Almost every country needed an adapted version of ASCII since ASCII suited the needs of only the US and a few other countries For example Canada had its own version that supported French characters br Many other countries developed variants of ASCII to include non English letters e g currency symbols e g etc See also YUSCII Yugoslavia br It would share most characters in common but assign other locally useful characters to several code points reserved for national use However the four years that elapsed between the publication of ASCII and ISO s first acceptance of an international recommendation during caused ASCII s choices for the national use characters to seem to be de facto standards for the world causing confusion and incompatibility once other countries did begin to make their own assignments to these code points br ISO IEC like ASCII is a bit character set It does not make any additional codes available so the same code points encoded different characters in different countries Escape codes were defined to indicate which national variant applied to a piece of text but they were rarely used so it was often impossible to know what variant to work with and therefore which character a code represented and in general text processing systems could cope with only one variant anyway br Because the bracket and brace characters of ASCII were assigned to national use code points that were used for accented letters in other national variants of ISO IEC a German French or Swedish etc programmer using their national variant of ISO IEC rather than ASCII had to write and thus read something such as br br a i n br instead of br br a i n br C trigraphs were created to solve this problem for ANSI C although their late introduction and inconsistent implementation in compilers limited their use Many programmers kept their computers on ASCII so plain text in Swedish German etc for example in e mail or Usenet contained and similar variants in the middle of words something those programmers got used to For example a Swedish programmer mailing another programmer asking if they should go for lunch could get N jag har sm rg sar as the answer which should be N jag har sm rg sar meaning No I ve got sandwiches br In Japan and Korea still as of the s a variation of ASCII is used in which the backslash C hex is rendered as a Yen sign in Japan or a Won sign in Korea This means that for example the file path C Users Smith is shown as C Users Smith in Japan or C Users Smith in Korea br In Europe teletext character sets which are variants of ASCII are used for broadcast TV subtitles defined by World System Teletext and broadcast using the DVB TXT standard for embedding teletext into DVB transmissions In the case that the subtitles were initially authored for teletext and converted the derived subtitle formats are constrained to the same character sets br br br bit codes br br Eventually as and bit and later bit computers began to replace and bit computers as the norm it became common to use an bit byte to store each character in memory providing an opportunity for extended bit relatives of ASCII In most cases these developed as true extensions of ASCII leaving the original character mapping intact but adding additional character definitions after the first i e bit characters ASCII itself remained a seven bit code the term extended ASCII has no official status br For some countries bit extensions of ASCII were developed that included support for characters used in local languages for example ISCII for India and VISCII for Vietnam Kaypro CP M computers used the upper characters for the Greek alphabet br Even for markets where it was not necessary to add many characters to support additional languages manufacturers of early home computer systems often developed their own bit extensions of ASCII to include additional characters such as box drawing characters semigraphics and video game sprites Often these additions also replaced control characters index to as well as index with even more platform specific extensions In other cases the extra bit was used for some other purpose such as toggling inverse video this approach was used by ATASCII an extension of ASCII developed by Atari br Most ASCII extensions are based on ASCII the current standard but some extensions are instead based on the earlier ASCII For example PETSCII which was developed by Commodore International for their bit systems is based on ASCII Likewise many Sharp MZ character sets are based on ASCII br IBM defined code page for the IBM PC replacing the control characters with graphic symbols such as smiley faces and mapping additional graphic characters to the upper positions Digital Equipment Corporation developed the Multinational Character Set DEC MCS for use in the popular VT terminal as one of the first extensions designed more for international languages than for block graphics Apple defined Mac OS Roman for the Macintosh and Adobe defined the PostScript Standard Encoding for PostScript both sets contained international letters typographic symbols and punctuation marks instead of graphics more like modern character sets br The ISO IEC standard derived from the DEC MCS provided a standard that most systems copied or at least were based on when not copied exactly A popular further extension designed by Microsoft Windows often mislabeled as ISO added the typographic punctuation marks needed for traditional text printing ISO Windows and the original bit ASCII were the most common character encoding methods on the World Wide Web until when UTF overtook them br ISO IEC introduced additional control codes defined in the F hexadecimal range as part of extending the bit ASCII encoding to become an bit system br br br Unicode br br Unicode and the ISO IEC Universal Character Set UCS have a much wider array of characters and their various encoding forms have begun to supplant ISO IEC and ASCII rapidly in many environments While ASCII is limited to characters Unicode and the UCS support more characters by separating the concepts of unique identification using natural numbers called code points and encoding to or bit binary formats called UTF UTF and UTF respectively br ASCII was incorporated into the Unicode character set as the first symbols so the bit ASCII characters have the same numeric codes in both sets This allows UTF to be backward compatible with bit ASCII as a UTF file containing only ASCII characters is identical to an ASCII file containing the same sequence of characters Even more importantly forward compatibility is ensured as software that recognizes only bit ASCII characters as special and does not alter bytes with the highest bit set as is often done to support bit ASCII extensions such as ISO will preserve UTF data unchanged br br br See also br br br Notes br br br br br br Further reading br Bemer Robert William A Proposal for Character Code Compatibility Communications of the ACM doi S CID br Bemer Robert William The Babel of Codes Prior to ASCII The Survey of Coded Character Sets The Reasons for ASCII Archived from the original on Retrieved from br Bemer Robert William December Survey of coded character representation Communications of the ACM doi S CID br Smith H J Williams F A December Survey of punched card codes Communications of the ACM doi br American National Standard Code for Information Interchange ANSI X PDF National Institute for Standards Archived PDF from the original on facsimile not machine readable br Robinson G S Cargill C History and impact of computer standards Computer Vol no pp doi br Mullendore Ralph Elvin Ptak John F ed On the Early Development of ASCII The History of ASCII JF Ptak Science Books published March Archived from the original on Retrieved br br br External links br br C Controls and Basic Latin Range F PDF The Unicode Standard Unicode Inc Archived PDF from the original on Retrieved 