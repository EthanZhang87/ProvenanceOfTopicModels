title: Incompatible Timesharing System
id: 298349
Incompatible Timesharing System ITS is a time sharing operating system developed principally by the MIT Artificial Intelligence Laboratory with help from Project MAC The name is the jocular complement of the MIT Compatible Time Sharing System CTSS br ITS and the software developed on it were technically and culturally influential far beyond their core user community Remote guest or tourist access was easily available via the early ARPANET allowing many interested parties to informally try out features of the operating system and application programs The wide open ITS philosophy and collaborative online community were a major influence on the hacker culture as described in Steven Levy s book Hackers and were the direct forerunners of the free and open source software open design and Wiki movements br br br History br ITS development was initiated in the late s by those the majority of the MIT AI Lab staff at that time who disagreed with the direction taken by Project MAC s Multics project which had started in the mid s particularly such decisions as the inclusion of powerful system security The name was chosen by Tom Knight as a joke on the name of the earliest MIT time sharing operating system the Compatible Time Sharing System which dated from the early s br By simplifying their system compared to Multics ITS s authors were able to quickly produce a functional operating system for their lab ITS was written in assembly language originally for the Digital Equipment Corporation PDP computer but the majority of ITS development and use was on the later largely compatible PDP br Although not used as intensively after about ITS continued to operate on original hardware at MIT until and then until at Stacken Computer Club in Sweden Today some ITS implementations continue to be remotely accessible via emulation of PDP hardware running on modern low cost computers supported by interested hackers br br br Significant technical features br ITS introduced many then new features br br The first device independent graphics terminal output programs generated generic commands to control screen content which the system automatically translated into the appropriate character sequences for the particular type of terminal operated by the user br A general mechanism for implementing virtual devices in software running in user processes which were called jobs in ITS br Using the virtual device mechanism ITS provided transparent inter machine filesystem access The ITS machines were all connected to the ARPAnet and a user on one machine could perform the same operations with files on other ITS machines as if they were local files br Sophisticated process management user processes were organized in a tree and a superior process could control a large number of inferior processes Any inferior process could be frozen at any point in its operation and its state including contents of the registers examined the process could then be resumed transparently br An advanced software interrupt facility that allowed user processes to operate asynchronously using complex interrupt handling mechanisms br PCLSRing a mechanism providing what appeared to user processes to be quasi atomic safely interruptible system calls No process could ever observe any process including itself in the middle of executing any system call br In support of the AI Lab s robotics work ITS also supported simultaneous real time and time sharing operation br br br User environment br The environment seen by ITS users was philosophically significantly different from that provided by most operating systems at the time br br Initially there were no passwords and a user could work on ITS without logging on Logging on was considered polite though so people knew when one was connected br To deal with a rash of incidents where users sought out flaws in the system in order to crash it a novel approach was taken A command that caused the system to crash was implemented and could be run by anyone which took away all the fun and challenge of doing so It did however broadcast a message to say who was doing it br All files were editable by all users including online documentation and source code A series of informal papers and technical notes documented new commands technical issues primitive games mathematical puzzles and other topics of interest to the ITS hacker community Some were issued as more formal AI Memos including the HAKMEM compendium br All users could talk with instant messaging on another s terminal or they could use a command SHOUT to ask all active users for help br Users could see what was happening on another s terminal using a command called OS for output spy A target of OS could detect and kill it using another command called JEDGAR named after FBI Director J Edgar Hoover This facility was later disabled with a placebo command it appeared as if the remote session was killed but it was not br Tourists guest users either at MIT AI Lab terminals or over the ARPAnet were tolerated and occasionally invited to actively join the ITS community Informal policy on tourist access was later formalized in a written policy Ease of access with or without a guest account allowed interested parties to informally explore and experiment with the operating system application programs and hacker culture Working copies of documentation and source code could be freely consulted or updated by anybody on the system br System security to the extent that it existed was mostly based on de facto security by obscurity Guest hackers willing to dedicate significant time and effort to learning ITS were expected to behave respectfully and to avoid interfering with the research projects which funded the hardware and software systems There was little of exclusive value on the ITS systems except information much of which would eventually be published for free distribution and open and free sharing of knowledge was generally encouraged br The wide open ITS philosophy and collaborative community were the direct forerunner of the free and open source software open design and Wiki movements br br br Important applications developed on ITS br The EMACS Editor MACroS editor was originally written on ITS In its ITS instantiation it was a collection of TECO programs called macros On later operating systems it was written in the common language of those systems for example the C language under Unix and Zetalisp under the Lisp Machine system br GNU s info help system was originally an EMACS subsystem and then was later written as a complete standalone system for Unix like machines br Several important programming languages and systems were developed on ITS including MacLisp the precursor of Zetalisp and Common Lisp Microplanner implemented in MacLisp MDL which became the basis of Infocom s programming environment and Scheme br Among other significant and influential software subsystems developed on ITS the Macsyma symbolic algebra system started in was the first widely known mathematical computing environment It was a forerunner of Maxima MATLAB Wolfram Mathematica and many other computer algebra systems br Terry Winograd s SHRDLU program was developed in ITS The computer game Zork was also originally written on ITS br Richard Greenblatt s Mac Hack VI was the top rated chess program for years and was the first to display a graphical board representation br br br Miscellaneous br The default ITS top level command interpreter was the PDP machine language debugger DDT The usual text editor on ITS was TECO and later Emacs which was written in TECO Both DDT and TECO were implemented through simple dispatch tables on single letter commands and thus had no true syntax The ITS task manager was called PEEK br The local spelling TURIST is an artifact of six character filename and other identifier limitations which is traceable to six SIXBIT encoded characters fitting into a single bit PDP word TURIST may also have been a pun on Alan Turing a pioneer of theoretical computer science The less complimentary term LUSER was also applied to guest users especially those who repeatedly engaged in clueless or vandalous behavior br The Jargon File started as a combined effort between people on the ITS machines at MIT and at Stanford University SAIL The document described much of the terminology puns and culture of the two AI Labs and related research groups and is the direct predecessor of the Hacker s Dictionary the first compendium of hacker jargon to be issued by a major publisher MIT Press br Different implementations of ITS supported an odd array of peripherals including an automatic wire stripper devised by hacker Richard Greenblatt who needed a supply of pre stripped jumper wires of various lengths for wire wrapping computer hardware he and others were prototyping The device used a stepper motor and a formerly hand held wire stripper tool and cutter operated by solenoid all under computer control from ITS software The device was accessible by any ITS user but was disappointingly unreliable in actual use br The Xerox Graphics Printer XGP one of the first laser printers in the world was supported by ITS by The MIT AI Lab had one of these prototype continuous roll fed printers for experimentation and use by its staff By the XGP was supplemented by a Xerox Dover printer an early sheet fed laser printer Although any ITS user could access the laser printers physical access to pick up printouts was limited to staff and others who obtained access to the MIT lab to control usage of printer supplies which had to be specially ordered br CTSS and ITS file systems have a number of design elements in common Both have an M F D master file directory and one or more U F D user file directories Neither of them have nested directories sub directories Both have file names consisting of two names which are a maximum of six characters long Both support linked files br br br Original developers br Richard Greenblatt br Stewart Nelson br Tom Knight br Richard Stallman br br br See also br Time sharing system evolution br br br br br br Bibliography br br br External links br ITS System Documentation br SV An ITS system running online and open for logins br UP Public ITS system operated by the Update Computer Club at Uppsala University br KLH Ken Harrenstien s PDP emulator br instructions allowing ITS to run on the SIMH PDP emulator br Jargon File Entry br ITS bibliography