title: NeWS
id: 55519
NeWS Network extensible Window System is a discontinued windowing system developed by Sun Microsystems in the mid s Originally known as SunDew its primary authors were James Gosling and David S H Rosenthal The NeWS interpreter was based on PostScript as was the later Display PostScript although the two projects were otherwise unrelated extending it to allow interaction and multiple contexts to support windows Like PostScript NeWS could be used as a complete programming language but unlike PostScript NeWS could be used to make complete interactive programs with mouse support and a GUI br br br Design br NeWS started by implementing a PostScript interpreter running in a cooperative multitasking fashion since unlike PostScript in a printer NeWS would be displaying a number of PostScript programs at the same time on one screen It also added a complete view hierarchy based on viewports known as canvases and a synchronous event distribution system supporting events interests threads and monitors br Like the view system in most GUIs NeWS included the concept of a tree of embedded views along which events were passed For instance a mouse click would generate an event that would be passed to the object directly under the mouse pointer say a button If this object did not respond to the event the object under the button would then receive the message and so on NeWS included a complete model for these events including timers and other automatic events input queues for devices such as mice and keyboards and other functionality required for full interaction The input handling system was designed to provide strong event synchronization guarantees that were not possible with asynchronous protocols like X br To support user interface widgets NeWS expanded the original PostScript stack based language into a complete object oriented OO programming style with inheritance This eliminated the need for an external OO language to build a complete application Since all of these additions were implemented as extensions to PostScript it was possible to write simple PostScript code that would result in a running onscreen interactive program Two popular demonstration programs were an onscreen clock which required about two pages of code and a program which drew a pair of eyes that followed the cursor as it moved around the screen The eyeball program was shown at SIGGRAPH in and was the inspiration for the later well known X application xeyes br NeWS included several libraries of user interface elements widgets themselves written in NeWS These widgets ran all of their behavior in the NeWS interpreter and only required communications to an outside program or more NeWS code when the widget demanded it For example a toggle button s display routine can query the button s state pressed or not and change its display accordingly The button s PostScript code can also react to mouse clicks by changing its state from pressed to not pressed and vice versa All this can happen in the windowing server without interaction with the client program and only when the mouse is released on the button will an event be sent off for handling This was more sophisticated than the X Window System server model which can only report mouse button was clicked down here mouse is now here mouse button was released here events to a client which then has to figure out if the event is in the button switch the state and finally instruct the server to display the new state If client and server are not on the same machine these interactions must travel over the network which results in a delay in responding br br The best example of such a library is TNT The NeWS Toolkit which Sun released in Sun also shipped an earlier Lite toolkit intended for example purposes and making small programs br br br Porting br Although adoption was never widespread several companies and universities licensed NeWS and adapted it for various uses creating both commercial and non commercial ports br br SGI used a version of it named Sight to replace their proprietary MEX windowing system br Grasshopper Group created a Macintosh port called MacNeWS br Parallax extended it to be able to deal with live video br Architech Corporation ported NeWS to OS calling it NeWS br Columbia University ported it on HP series br Los Alamos National Laboratory ported it on a Cray XMP br TGV ported X NeWS on a VAXstation running VMS br Wedge Computer Inc ported it to MacOS br Whitechapel ported it to their MIPS workstations br Acorn ported it to their computers br Ameristar ported it on the Amiga br Alliant ported X NeWS on their Visualization minisupercomputers br University of Michigan ported it on Apollo workstations in monochrome mode br Pixar ported it to their Image Computer br br br Applications br The OPEN LOOK version of the FrameMaker desktop publishing program developed by Frame Technology Corp with funding mainly from Sun Microsystems and NSA was one of the few commercial products that ran on NeWS HyperLook developed by Arthur van Hoff at The Turing Institute was an interactive application design system Don Hopkins developed a NeWS version of SimCity that was built with HyperLook br A commercial drawing program Altsys Virtuoso was produced for NeWS it was a port of FreeHand with additional functionality that took advantage of the PostScript environment Unfortunately Sun announced the end of support for NeWS just as Virtuoso became ready to ship br br br Competition with X Window System br Compared to X NeWS was vastly more powerful but also slower especially for local connections The C API was very low level and difficult to use so most NeWS programs tended to be entirely written in PostScript Another factor in the popularity was that Sun charged a fee to license the NeWS source code while the MIT X code was free of cost br The first versions of NeWS emulated the X protocol by translating the calls into NeWS PostScript Speed problems plus the existence of programs that relied on the exact pixel results of X calls and the obsolescence of X forced Sun to release an X NeWS hybrid called Xnews which ran an X server in parallel with the PostScript interpreter This seriously degraded the NeWS interpreter performance and was not considered a very good X server either Sun also implemented the OPEN LOOK user interface specification in several toolkits The NeWS Toolkit TNT was an OPEN LOOK toolkit written in PostScript that ran in the NeWS server OLIT was built on the same Xt X Intrinsics base as Motif and XView used the same APIs as Sun s earlier SunView window system br After it was clear that OPEN LOOK had lost out to Motif in popularity and after Adobe acquired FrameMaker Sun stopped supporting NeWS Products based on NeWS stopped being developed br br br br br br External links br a short description of NeWS br The NeWS eyeball program br NeWS A Networked and Extensible Window System lecture by James Gosling