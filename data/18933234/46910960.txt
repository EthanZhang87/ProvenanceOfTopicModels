title: Commit (version control)
id: 46910960
In version control systems a commit is an operation which sends the latest changes of the source code to the repository making these changes part of the head revision of the repository Unlike commits in data management commits in version control systems are kept in the repository indefinitely Thus when other users do an update or a checkout from the repository they will receive the latest committed version unless they specify that they wish to retrieve a previous version of the source code in the repository Version control systems allow rolling back to previous versions easily In this context a commit within a version control system is protected as it is easily rolled back even after the commit has been applied br br br Usage br br br Git br To commit a change in git on the command line assuming git is installed the following command is run br git commit m commit message br This is also assuming that the files within the current directory have been staged as such br git add br The above command adds all of the files in the working directory to be staged for the git commit After the commit has been applied the last step is to push the commit to the given software repository in the case below named origin to the branch main br git push origin main br Also a shortcut to add all the unstaged files and make a commit at the same time is br git commit a m commit message br br br Mercurial hg br To commit a change in Mercurial on the command line assuming hg is installed the following command is used br hg commit message Commit Message br This is also assuming that the files within the current directory have been staged as such br hg add br The above command adds all of the files in the working directory to be staged for the Mercurial commit After the commit has been applied the last step is to push the commit to the given software repository to the default branch br hg push br br br See also br Commit data management br Atomic commit Revision control br br br 