title: SWI-Prolog
id: 1719280
SWI Prolog is a free implementation of the programming language Prolog commonly used for teaching and semantic web applications It has a rich set of features libraries for constraint logic programming multithreading unit testing GUI interfacing to Java ODBC and others literate programming a web server SGML RDF RDFS developer tools including an IDE with a GUI debugger and GUI profiler and extensive documentation br SWI Prolog runs on Unix Windows Macintosh and Linux platforms br SWI Prolog has been under continuous development since Its main author is Jan Wielemaker br The name SWI is derived from Sociaal Wetenschappelijke Informatica Social Science Informatics the former name of the group at the University of Amsterdam where Wielemaker was employed when he initiated the development of SWI Prolog The name of this group has changed to HCS Human Computer Studies br br br Execution model br SWI Prolog is not based on the Warren Abstract Machine execution model of Prolog br Instead it is based on an extended version of the ZIP virtual machine a minimal virtual machine for Prolog implementing a simple language consisting of only seven instructions SWI Prolog specific extensions aim at improving performance in several ways ad hoc instructions are introduced to support unification predicate invocation some frequently used built in predicates arithmetic control flow and negation as failure Prolog can easily be compiled into this language and the abstract machine code is easily decompiled back into Prolog This feature is often exploited to interleave compiled and interpreted code execution br br br Constraint logic programming br Constraint logic programming functionality came rather late in the lifetime of SWI Prolog because it lacked the basic support This changed early in when attributed variables were added to the language The Leuven CHR library was then the first CLP library to be ported to SWI Prolog We mention SWI Prolog s INCLP R library De Koninck et al which provides non linear constraints over the reals and was implemented on top of CHR Later came a port of Christian Holzbaur s CLP QR library and a finite domain CLP FD solver Finally a boolean CLP B solver was added br br br Extensions for SWI Prolog br SWI Prolog installs with a web framework based on definite clause grammars br SWI Prolog queries may be distributed over several servers and web pages through the Pengines system br br br XPCE br XPCE is a platform independent object oriented GUI toolkit for SWI Prolog Lisp and other interactive and dynamically typed languages Although XPCE was designed to be language independent it has gained popularity mostly with Prolog The development XPCE graphic toolkit started in together with SWI Prolog br It supports buttons menus sliders tabs and other basic GUI widgets XPCE is available for all platforms supported by SWI Prolog br PceEmacs is a SWI Prolog builtin editor PceEmacs is an Emacs clone implemented in Prolog and XPCE It supports proper indentation syntax highlighting full syntax checking by calling the SWI Prolog parser warning for singleton variables and finding predicate definitions based on the source information from the Prolog database br br br Interfaces br JPL is a bidirectional interface between Java and Prolog It requires both SWI Prolog and Java SDK It is installed as a part of SWI Prolog br br br See also br br Prolog br Comparison of Prolog implementations br Prolog syntax and semantics br br br br br br External links br Official website