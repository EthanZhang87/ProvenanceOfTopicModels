title: Daemon (computing)
id: 458986
In multitasking computer operating systems a daemon or is a computer program that runs as a background process rather than being under the direct control of an interactive user Traditionally the process names of a daemon end with the letter d for clarification that the process is in fact a daemon and for differentiation between a daemon and a normal computer program For example syslogd is a daemon that implements system logging facility and sshd is a daemon that serves incoming SSH connections br In a Unix environment the parent process of a daemon is often but not always the init process A daemon is usually created either by a process forking a child process and then immediately exiting thus causing init to adopt the child process or by the init process directly launching the daemon In addition a daemon launched by forking and exiting typically must perform other operations such as dissociating the process from any controlling terminal tty Such procedures are often implemented in various convenience routines such as daemon in Unix br Systems often start daemons at boot time that will respond to network requests hardware activity or other programs by performing some task Daemons such as cron may also perform defined tasks at scheduled times br br br Terminology br The term was coined by the programmers at MIT s Project MAC According to Fernando J Corbat who worked on Project MAC in his team was the first to use the term daemon inspired by Maxwell s demon an imaginary agent in physics and thermodynamics that helped to sort molecules stating We fancifully began to use the word daemon to describe background processes that worked tirelessly to perform system chores Unix systems inherited this terminology Maxwell s demon is consistent with Greek mythology s interpretation of a daemon as a supernatural being working in the background br In the general sense daemon is an older form of the word demon from the Greek In the Unix System Administration Handbook Evi Nemeth states the following about daemons br br Many people equate the word daemon with the word demon implying some kind of satanic connection between UNIX and the underworld This is an egregious misunderstanding Daemon is actually a much older form of demon daemons have no particular bias towards good or evil but rather serve to help define a person s character or personality The ancient Greeks concept of a personal daemon was similar to the modern concept of a guardian angel eudaemonia is the state of being helped or protected by a kindly spirit As a rule UNIX systems seem to be infested with both daemons and demons br A further characterization of the mythological symbolism is that a daemon is something that is not visible yet is always present and working its will In the Theages attributed to Plato Socrates describes his own personal daemon to be something like the modern concept of a moral conscience The favour of the gods has given me a marvelous gift which has never left me since my childhood It is a voice that when it makes itself heard deters me from what I am about to do and never urges me on br In modern usage in the context of computer software the word daemon is pronounced DEE m n or DAY m n br Alternative terms for daemon are service used in Windows from Windows NT onwards and later also in Linux started task IBM z OS and ghost job XDS UTS Sometimes the more general term server or server process is used particularly for daemons that operate as part of client server systems br After the term was adopted for computer use it was rationalized as a backronym for Disk And Execution MONitor br Daemons that connect to a computer network are examples of network services br br br Implementations br br br Unix like systems br In a strictly technical sense a Unix like system process is a daemon when its parent process terminates and the daemon is assigned the init process process number as its parent process and has no controlling terminal However more generally a daemon may be any background process whether a child of the init process or not br On a Unix like system the common method for a process to become a daemon when the process is started from the command line or from a startup script such as an init script or a SystemStarter script involves br br Optionally removing unnecessary variables from environment br Executing as a background task by forking and exiting in the parent half of the fork This allows daemon s parent shell or startup process to receive exit notification and continue its normal execution br Detaching from the invoking session usually accomplished by a single operation setsid br Dissociating from the controlling tty br Creating a new session and becoming the session leader of that session br Becoming a process group leader br If the daemon wants to ensure that it will not acquire a new controlling tty even by accident which happens when a session leader without a controlling tty opens a free tty it may fork and exit again This means that it is no longer a session leader in the new session and cannot acquire a controlling tty br Setting the root directory as the current working directory so that the process does not keep any directory in use that may be on a mounted file system allowing it to be unmounted br Changing the umask to to allow open creat and other operating system calls to provide their own permission masks and not to depend on the umask of the caller br Redirecting file descriptors and for the standard streams stdin stdout and stderr to dev null or a logfile and closing all the other file descriptors inherited from the parent process br If the process is started by a super server daemon such as inetd launchd or systemd the super server daemon will perform those functions for the process except for old style daemons not converted to run under systemd and specified as Type forking and multi threaded datagram servers under inetd br br br MS DOS br In the Microsoft DOS environment daemon like programs were implemented as terminate and stay resident programs TSR br br br Windows NT br On Microsoft Windows NT systems programs called Windows services perform the functions of daemons They run as processes usually do not interact with the monitor keyboard and mouse and may be launched by the operating system at boot time In Windows and later versions Windows services are configured and manually started and stopped using the Control Panel a dedicated control configuration program the Service Controller component of the Service Control Manager sc command the net start and net stop commands or the PowerShell scripting system br However any Windows application can perform the role of a daemon not just a service and some Windows daemons have the option of running as a normal process br br br Classic Mac OS and macOS br On the classic Mac OS optional features and services were provided by files loaded at startup time that patched the operating system these were known as system extensions and control panels Later versions of classic Mac OS augmented these with fully fledged faceless background applications regular applications that ran in the background To the user these were still described as regular system extensions br macOS which is a Unix system uses daemons but uses the term services to designate software that performs functions selected from the Services menu rather than using that term for daemons as Windows does br br br See also br br br br br br External links br Unix Daemon Server Programming at the Wayback Machine archived 