title: EINE and ZWEI
id: 3801489
EINE and ZWEI are two discontinued Emacs like text editors developed by Daniel Weinreb and Mike McMahon for Lisp machines in the s and s br br br History br EINE was a text editor developed in the late s In terms of features its goal was to do what Stallman s PDP original Emacs does It was an early example of what would become many Emacs like text editors Unlike the original TECO based Emacs but like Multics Emacs EINE was written in Lisp It used Lisp Machine Lisp Stallman later wrote GNU Emacs which was written in C and Emacs Lisp and extensible in Emacs Lisp EINE also made use of the window system of the Lisp machine and was the first Emacs to have a graphical user interface br In the s EINE was developed into ZWEI Innovations included programmability in Lisp Machine Lisp and a new and more flexible doubly linked list method of internally representing buffers br ZWEI would eventually become the editor library used for Symbolics Zmacs Emacs like editor Zmail mail client and Converse message client which were integrated into the Genera operating system which Symbolics developed for their Lisp machines br br br Naming br EINE is a recursive acronym for EINE Is Not Emacs coined in August It was a play on Ted Anderson s TINT TINT is not TECO Anderson would later retort with SINE is not EINE br ZWEI follows this pattern as an acronym for ZWEI Was Eine Initially br With zwei being the German word for two EINE could be re interpreted as being a reference to the German word for one in the feminine adjectival form as in eine Implementierung one implementation br br br Further reading br Weinreb Daniel L January A Real Time Display oriented Editor for the LISP Machine Undergraduate thesis MIT EECS Department br Edward Coffin October A synopsis of Dan Weinreb s undergrad thesis A Real Time Display oriented Editor for the LISP Machine Reddit br Symbolics Genera documentation Book Text Editing and Processing Archived at the Wayback Machine March br Symbolics Genera documentation Book Text Editing and Processing Archived at the Wayback Machine July br MIT CADR Lisp Machine Source code br br br br br br External links br Entry at the Emacs Wiki