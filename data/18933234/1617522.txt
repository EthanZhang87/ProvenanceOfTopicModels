title: Extensibility
id: 1617522
Extensibility is a software engineering and systems design principle that provides for future growth Extensibility is a measure of the ability to extend a system and the level of effort required to implement the extension Extensions can be through the addition of new functionality or through modification of existing functionality The principle provides for enhancements without impairing existing system functions br An extensible system is one whose internal structure and dataflow are minimally or not affected by new or modified functionality for example recompiling or changing the original source code might be unnecessary when changing a system s behavior either by the creator or other programmers Because software systems are long lived and will be modified for new features and added functionalities demanded by users extensibility enables developers to expand or add to the software s capabilities and facilitates systematic reuse Some of its approaches include facilities for allowing users own program routines to be inserted and the abilities to define new data types as well as to define new formatting markup tags br br br Extensible design br Extensible design in software engineering is to accept that not everything can be designed in advance A light software framework which allows for changes is provided instead Small commands are made to prevent losing the element of extensibility following the principle of separating work elements into comprehensible units in order to avoid traditional software development issues including low cohesion and high coupling and allow for continued development Embracing change is essential to the extensible design in which additions will be continual Each chunk of the system will be workable with any changes and the idea of change through addition is the center of the whole system design br Extensible design supports frequent re prioritization and allows functionality to be implemented in small steps upon request which are the principles advocated by the Agile methodologies and iterative development Extensibility imposes fewer and cleaner dependencies during development as well as reduced coupling and more cohesive abstractions plus well defined interfaces br br br Importance br Fickleness lies at the basis of all software because of human phenomena since software is an evolving entity which is developed and maintained by human beings yielding ongoing system changes in software specification and implementation Components of a software are often developed and deployed by unrelated parties independently Adaptable software components are necessary since components from external vendors are unlikely to fit into a specific deployment scenario off the rack taking third party users other than the manufacturer into consideration Many software systems and software product lines are derived from a base system which share a common software architecture or sometimes large parts of the functionality and implementation but are possibly equipped with different components that require an extensible base system br Building software systems that are independently extensible is an important challenge br An independently extensible system not only allows two people to independently develop extensions to the system but also allows the two extensions to be combined without a global integrity check br br br Classification of extensibility mechanisms br There are three different forms of software extensibility white box extensibility gray box extensibility and black box extensibility which are based on what artifacts and the way they are changed br br br White Box br Under this form of extensibility a software system can be extended by modifying the source code and it is the most flexible and the least restrictive form There are two sub forms of extensibility open box extensibility and glass box extensibility depending on how changes are applied br br br Open Box br Changes are performed invasively in open box extensible systems i e original source code is directly being hacked into It requires available source code and the modification permitted source code license Open box extensibility is most relevant to bug fixing internal code refactoring or production of next version of a software product br br br Glass Box br Glass box extensibility also called architecture driven frameworks allows a software system to be extended with available source code but may not allow the code to be modified Extensions have to be separated from the original system in a way that the original system is not affected One example of this form of extensibility is object oriented application frameworks which achieve extensibility typically by using inheritance and dynamic binding br br br Black Box br In black box extensibility also called data driven frameworks no details about a system s implementation are used for implementing deployments or extensions only interface specifications are provided This type of approach is more limited than the various white box approaches Black box extensions are typically achieved through system configuration applications or the use of application specific scripting languages by defining components interfaces br br br Gray Box br Gray box extensibility is a compromise between a pure white box and a pure black box approach which does not rely fully on the exposure of source code Programmers could be given the system s specialization interface which lists all available abstractions for refinement and specifications on how extensions should be developed br br br Extensibility vs reusability br Extensibility and reusability have many emphasized properties in common including low coupling modularity and high risk elements ability to construct for many different software systems which is motivated by the observation of software systems often sharing common elements Reusability together with extensibility allows a technology to be transferred to another project with less development and maintenance time as well as enhanced reliability and consistency br br br Security br Modern operating systems support extensibility through device drivers and loadable kernel modules Many modern applications support extensibility through plug ins extension languages applets etc The trend of increasing extensibility negatively affects software security br CGI is one of the primary means by which web servers provide extensibility Some people see CGI scripts as an enormous security hole br br br See also br Extensible programming br Polymorphism br Software metric br Scalability br XML br br br br br br External links br The dictionary definition of extensibility at Wiktionary