title: Initialization (programming)
id: 27420511
In computer programming initialization or initialisation is the assignment of an initial value for a data object or variable The manner in which initialization is performed depends on the programming language as well as the type storage class etc of an object to be initialized Programming constructs which perform initialization are typically called initializers and initializer lists Initialization is distinct from and preceded by declaration although the two can sometimes be conflated in practice The complement of initialization is finalization which is primarily used for objects but not variables br Initialization is done either by statically embedding the value at compile time or else by assignment at run time A section of code that performs such initialization is generally known as initialization code and may include other one time only functions such as opening files in object oriented programming initialization code may be part of a constructor class method or an initializer instance method Setting a memory location to hexadecimal zeroes is also sometimes known as clearing and is often performed by an exclusive or instruction both operands specifying the same variable at machine code level since it requires no additional memory access br br br C family of languages br br br Initializer br In C C C an initializer is an optional part of a declarator It consists of the character followed by an expression or a comma separated list of expressions placed in curly brackets braces The latter list is sometimes called the initializer list or initialization list although the term initializer list is formally reserved for initialization of class struct members in C see below br A declaration which creates a data object instead of merely describing its existence is commonly called a definition br Many find it convenient to draw a distinction between the terms declaration and definition as in the commonly seen phrase the distinction between a declaration and definition implying that a declaration merely designates a data object or function In fact according to the C standard a definition is a declaration Still the usage declarations and definitions although formally incorrect is common Although all definitions are declarations not all declarations are definitions br C examples br br C examples br br br Initializer list br In C a constructor of a class struct can have an initializer list within the definition but prior to the constructor body It is important to note that when you use an initialization list the values are not assigned to the variable They are initialized In the below example is initialized into re and im br Example br br Here the construct re im is the initializer list br Sometimes the term initializer list is also used to refer to the list of expressions in the array or struct initializer br C provides for a more powerful concept of initializer lists by means of a template called std initializer list br br br Default initialization br Data initialization may occur without explicit syntax in a program to do so For example if static variables are declared without an initializer then those of primitive data types are initialized with the value of zero of the corresponding type while static objects of class type are initialized with their default constructors br br br See also br Object lifetime br Finalizer Process related Finalization Pattern br br br 