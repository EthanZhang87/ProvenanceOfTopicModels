title: Internet Message Access Protocol
id: 14837
In computing the Internet Message Access Protocol IMAP is an Internet standard protocol used by email clients to retrieve email messages from a mail server over a TCP IP connection IMAP is defined by RFC br IMAP was designed with the goal of permitting complete management of an email box by multiple email clients therefore clients generally leave messages on the server until the user explicitly deletes them An IMAP server typically listens on port number IMAP over SSL TLS IMAPS is assigned the port number br Virtually all modern e mail clients and servers support IMAP which along with the earlier POP Post Office Protocol are the two most prevalent standard protocols for email retrieval Many webmail service providers such as Gmail and Outlook com also provide support for both IMAP and POP br br br Email protocols br The Internet Message Access Protocol is an application layer Internet protocol that allows an e mail client to access email on a remote mail server The current version is defined by RFC An IMAP server typically listens on well known port while IMAP over SSL TLS IMAPS uses br Incoming email messages are sent to an email server that stores messages in the recipient s email box The user retrieves the messages with an email client that uses one of a number of email retrieval protocols While some clients and servers preferentially use vendor specific proprietary protocols almost all support POP and IMAP for retrieving email allowing many free choice between many e mail clients such as Pegasus Mail or Mozilla Thunderbird to access these servers and allows the clients to be used with other servers br Email clients using IMAP generally leave messages on the server until the user explicitly deletes them This and other characteristics of IMAP operation allow multiple clients to manage the same mailbox Most email clients support IMAP in addition to Post Office Protocol POP to retrieve messages IMAP offers access to the mail storage Clients may store local copies of the messages but these are considered to be a temporary cache br br br History br IMAP was designed by Mark Crispin in as a remote access mailbox protocol in contrast to the widely used POP a protocol for simply retrieving the contents of a mailbox br It went through a number of iterations before the current VERSION rev IMAP as detailed below br br br Original IMAP br The original Interim Mail Access Protocol was implemented as a Xerox Lisp Machine client and a TOPS server br No copies of the original interim protocol specification or its software exist Although some of its commands and responses were similar to IMAP the interim protocol lacked command response tagging and thus its syntax was incompatible with all other versions of IMAP br br br IMAP br The interim protocol was quickly replaced by the Interactive Mail Access Protocol IMAP defined in RFC in and later updated by RFC in IMAP introduced the command response tagging and was the first publicly distributed version br br br IMAP br IMAP is an extremely rare variant of IMAP It was published as RFC in It was written specifically as a counter proposal to RFC which itself proposed modifications to IMAP IMAP was never accepted by the marketplace The IESG reclassified RFC Interactive Mail Access Protocol Version as a Historic protocol in The IMAP Working Group used RFC IMAP rather than RFC IMAP as its starting point br br br IMAP bis br With the advent of MIME IMAP was extended to support MIME body structures and add mailbox management functionality create delete rename message upload that was absent from IMAP This experimental revision was called IMAP bis its specification was never published in non draft form An internet draft of IMAP bis was published by the IETF IMAP Working Group in October This draft was based upon the following earlier specifications unpublished IMAP bis TXT document RFC and RFC IMAP The IMAP bis TXT draft documented the state of extensions to IMAP as of December Early versions of Pine were widely distributed with IMAP bis support Pine and later supports IMAP rev br br br IMAP br An IMAP Working Group formed in the IETF in the early s took over responsibility for the IMAP bis design The IMAP WG decided to rename IMAP bis to IMAP to avoid confusion br br br Advantages over POP br br br Connected and disconnected modes br When using POP clients typically connect to the e mail server briefly only as long as it takes to download new messages When using IMAP clients often stay connected as long as the user interface is active and download message content on demand For users with many or large messages this IMAP usage pattern can result in faster response times br br br Reporting of external changes br After successful authentication the POP protocol provides a completely static view of the current state of the mailbox and does not provide a mechanism to show any external changes in state during the session In contrast the IMAP protocol provides a dynamic view and requires that external changes in state including newly arrived messages as well as changes made to the mailbox by other concurrently connected clients are detected and appropriate responses are sent between commands as well as during an IDLE command as described in RFC See also RFC section which specifically cites simultaneous access to the same mailbox by multiple agents br br br Access to MIME message parts and partial fetch br Usually all Internet e mail is transmitted in MIME format allowing messages to have a tree structure where the leaf nodes are any of a variety of single part content types and the non leaf nodes are any of a variety of multipart types The IMAP protocol allows clients to retrieve any of the individual MIME parts separately and also to retrieve portions of either individual parts or the entire message These mechanisms allow clients to retrieve the text portion of a message without retrieving attached files or to stream content as it is being fetched br br br Message state information br Through the use of flags defined in the IMAP protocol clients can keep track of message state for example whether or not the message has been read replied to or deleted These flags are stored on the server so different clients accessing the same mailbox at different times can detect state changes made by other clients POP provides no mechanism for clients to store such state information on the server so if a single user accesses a mailbox with two different POP clients at different times state information such as whether a message has been accessed cannot be synchronized between the clients The IMAP protocol supports both predefined system flags and client defined keywords System flags indicate state information such as whether a message has been read Keywords which are not supported by all IMAP servers allow messages to be given one or more tags whose meaning is up to the client IMAP keywords should not be confused with proprietary labels of web based e mail services which are sometimes translated into IMAP folders by the corresponding proprietary servers br br br Multiple mailboxes on the server br IMAP clients can create rename and delete mailboxes usually presented to the user as folders on the server and copy messages between mailboxes Multiple mailbox support also allows servers to provide access to shared and public folders The IMAP Access Control List ACL Extension RFC may be used to regulate access rights br br br Server side searches br IMAP provides a mechanism for a client to ask the server to search for messages meeting a variety of criteria This mechanism avoids requiring clients to download every message in the mailbox in order to perform these searches br br br Built in extension mechanism br Reflecting the experience of earlier Internet protocols IMAP defines an explicit mechanism by which it may be extended Many IMAP extensions to the base protocol have been proposed and are in common use IMAP bis did not have an extension mechanism and POP now has one defined by RFC br br br Server push notifications br IMAP IDLE provides a way for the mail server to notify connected clients that there were changes to a mailbox for example because a new mail has arrived POP provides no comparable feature and email clients need to periodically connect to the POP server to check for new mail br br br Disadvantages br While IMAP remedies many of the shortcomings of POP this inherently introduces additional complexity Much of this complexity e g multiple clients accessing the same mailbox at the same time is compensated for by server side workarounds such as Maildir or database backends br The IMAP specification has been criticised for being insufficiently strict and allowing behaviours that effectively negate its usefulness For instance the specification states that each message stored on the server has a unique id to allow the clients to identify messages they have already seen between sessions However the specification also allows these UIDs to be invalidated with almost no restrictions practically defeating their purpose br From an administrative and resource point of view the IMAP protocol can be viewed as an early implementation of cloud computing as the intent and purpose of IMAP is to maintain your mailbox structure content folder structure individual message state etc on the mail server whereas with POP this is all maintained on the user s local device Thus IMAP requires far more server side resources incurring a significantly higher cost per mailbox br Unless the mail storage indexing and searching algorithms on the server are carefully implemented a client can potentially consume large amounts of server resources when searching massive mailboxes br IMAP clients need to maintain a TCP IP connection to the IMAP server in order to be notified of the arrival of new mail Notification of mail arrival is done through in band signaling which contributes to the complexity of client side IMAP protocol handling somewhat A private proposal push IMAP would extend IMAP to implement push e mail by sending the entire message instead of just a notification However push IMAP has not been generally accepted and current IETF work has addressed the problem in other ways see the Lemonade Profile for more information br Unlike some proprietary protocols which combine sending and retrieval operations sending a message and saving a copy in a server side folder with a base level IMAP client requires transmitting the message content twice once to SMTP for delivery and a second time to IMAP to store in a sent mail folder This is addressed by a set of extensions defined by the IETF Lemonade Profile for mobile devices URLAUTH RFC and CATENATE RFC in IMAP and BURL RFC in SMTP SUBMISSION In addition to this Courier Mail Server offers a non standard method of sending using IMAP by copying an outgoing message to a dedicated outbox folder br br br Security br To cryptographically protect IMAP connections between the client and server IMAPS on TCP port can be used which utilizes SSL TLS As of January TLS is the recommended mechanism br Alternatively STARTTLS can be used to encrypt the connection when connecting to port after initially communicating over plaintext br br br Dialog example br This is an example IMAP connection as taken from RFC section br br C open connection br S OK IMAP rev Service Ready br C a login mrc secret br S a OK LOGIN completed br C a select inbox br S EXISTS br S FLAGS Answered Flagged Deleted Seen Draft br S RECENT br S OK UNSEEN Message is the first unseen message br S OK UIDVALIDITY UIDs valid br S a OK READ WRITE SELECT completed br C a fetch full br S FETCH FLAGS Seen INTERNALDATE Jul br RFC SIZE ENVELOPE Wed Jul PDT br IMAP rev WG mtg summary and minutes br Terry Gray NIL gray cac washington edu br Terry Gray NIL gray cac washington edu br Terry Gray NIL gray cac washington edu br NIL NIL imap cac washington edu br NIL NIL minutes CNRI Reston VA US br John Klensin NIL KLENSIN MIT EDU NIL NIL br B cac washington edu br BODY TEXT PLAIN CHARSET US ASCII NIL NIL BIT br br S a OK FETCH completed br C a fetch body header br S FETCH BODY HEADER br S Date Wed Jul PDT br S From Terry Gray gray cac washington edu br S Subject IMAP rev WG mtg summary and minutes br S To imap cac washington edu br S Cc minutes CNRI Reston VA US John Klensin KLENSIN MIT EDU br S Message Id B cac washington edu br S MIME Version br S Content Type TEXT PLAIN CHARSET US ASCII br S br S br S a OK FETCH completed br C a store flags deleted br S FETCH FLAGS Seen Deleted br S a OK FLAGS completed br C a logout br S BYE IMAP rev server terminating connection br S a OK LOGOUT completed br br br See also br List of mail server software br Comparison of email clients br Comparison of mail servers br IMAP IDLE br JSON Meta Application Protocol JMAP br Post Office Protocol POP br Push IMAP br Simple Mail Access Protocol br Simple Mail Transfer Protocol br Webmail br br br br br br Further reading br Crispin Mark Ten Commandments of How to Write an IMAP client University of Washington Archived from the original on Retrieved br Heinlein P Hartleben P The Book of IMAP Building a Mail Server with Courier and Cyrus No Starch Press ISBN br Hughes L Internet e mail Protocols Standards and Implementation Artech House Publishers ISBN br Johnson K Internet E mail Protocols A Developer s Guide Addison Wesley Professional ISBN br Loshin P Essential E mail Standards RFCs and Protocols Made Practical Programming Internet Mail O Reilly ISBN br br br External links br br IMAP Protocol Mailing List br RFC Specification of IMAP version revision br RFC IMAP implementation suggestions RFC br RFC IMAP IDLE command