title: NoSQL
id: 23968131
NoSQL originally referring to non SQL or non relational is an approach to database design that focuses on providing a mechanism for storage and retrieval of data that is modeled in means other than the tabular relations used in relational databases Instead of the typical tabular structure of a relational database NoSQL databases house data within one data structure Since this non relational database design does not require a schema it offers rapid scalability to manage large and typically unstructured data sets NoSQL systems are also sometimes called Not only SQL to emphasize that they may support SQL like query languages or sit alongside SQL databases in polyglot persistent architectures br Non relational databases have existed since the late s but the name NoSQL was only coined in the early s triggered by the needs of Web companies NoSQL databases are increasingly used in big data and real time web applications br Motivations for this approach include simplicity of design simpler horizontal scaling to clusters of machines which is a problem for relational databases finer control over availability and limiting the object relational impedance mismatch The data structures used by NoSQL databases e g key value pair wide column graph or document are different from those used by default in relational databases making some operations faster in NoSQL The particular suitability of a given NoSQL database depends on the problem it must solve Sometimes the data structures used by NoSQL databases are also viewed as more flexible than relational database tables br Many NoSQL stores compromise consistency in the sense of the CAP theorem in favor of availability partition tolerance and speed Barriers to the greater adoption of NoSQL stores include the use of low level query languages instead of SQL for instance lack of ability to perform ad hoc joins across tables lack of standardized interfaces and huge previous investments in existing relational databases Most NoSQL stores lack true ACID transactions although a few databases have made them central to their designs br Instead most NoSQL databases offer a concept of eventual consistency in which database changes are propagated to all nodes eventually typically within milliseconds so queries for data might not return updated data immediately or might result in reading data that is not accurate a problem known as stale read Additionally some NoSQL systems may exhibit lost writes and other forms of data loss Some NoSQL systems provide concepts such as write ahead logging to avoid data loss For distributed transaction processing across multiple databases data consistency is an even bigger challenge that is difficult for both NoSQL and relational databases Relational databases do not allow referential integrity constraints to span databases Few systems maintain both ACID transactions and X Open XA standards for distributed transaction processing Interactive relational databases share conformational relay analysis techniques as a common feature Limitations within the interface environment are overcome using semantic virtualization protocols such that NoSQL services are accessible to most operating systems br br br History br The term NoSQL was used by Carlo Strozzi in to name his lightweight Strozzi NoSQL open source relational database that did not expose the standard Structured Query Language SQL interface but was still relational His NoSQL RDBMS is distinct from the around general concept of NoSQL databases Strozzi suggests that because the current NoSQL movement departs from the relational model altogether it should therefore have been called more appropriately NoREL referring to not relational br Johan Oskarsson then a developer at Last fm reintroduced the term NoSQL in early when he organized an event to discuss open source distributed non relational databases The name attempted to label the emergence of an increasing number of non relational distributed data stores including open source clones of Google s Bigtable MapReduce and Amazon s DynamoDB br br br Types and examples br There are various ways to classify NoSQL databases with different categories and subcategories some of which overlap What follows is a non exhaustive classification by data model with examples br br br Key value store br br Key value KV stores use the associative array also called a map or dictionary as their fundamental data model In this model data is represented as a collection of key value pairs such that each possible key appears at most once in the collection br The key value model is one of the simplest non trivial data models and richer data models are often implemented as an extension of it The key value model can be extended to a discretely ordered model that maintains keys in lexicographic order This extension is computationally powerful in that it can efficiently retrieve selective key ranges br Key value stores can use consistency models ranging from eventual consistency to serializability Some databases support ordering of keys There are various hardware implementations and some users store data in memory RAM while others on solid state drives SSD or rotating disks aka hard disk drive HDD br br br Document store br br The central concept of a document store is that of a document While the details of this definition differ among document oriented databases they all assume that documents encapsulate and encode data or information in some standard formats or encodings Encodings in use include XML YAML and JSON and binary forms like BSON Documents are addressed in the database via a unique key that represents that document Another defining characteristic of a document oriented database is an API or query language to retrieve documents based on their contents br Different implementations offer different ways of organizing and or grouping documents br br Collections br Tags br Non visible metadata br Directory hierarchies br Compared to relational databases collections could be considered analogous to tables and documents analogous to records But they are different every record in a table has the same sequence of fields while documents in a collection may have fields that are completely different br br br Graph br br Graph databases are designed for data whose relations are well represented as a graph consisting of elements connected by a finite number of relations Examples of data include social relations public transport links road maps network topologies etc br br Graph databases and their query language br br br Performance br The performance of NoSQL databases is usually evaluated using the metric of throughput which is measured as operations second Performance evaluation must pay attention to the right benchmarks such as production configurations parameters of the databases anticipated data volume and concurrent user workloads br Ben Scofield rated different categories of NoSQL databases as follows br br Performance and scalability comparisons are most commonly done using the YCSB benchmark br br br Handling relational data br Since most NoSQL databases lack ability for joins in queries the database schema generally needs to be designed differently There are three main techniques for handling relational data in a NoSQL database See table Join and ACID Support for NoSQL databases that support joins br br br Multiple queries br Instead of retrieving all the data with one query it is common to do several queries to get the desired data NoSQL queries are often faster than traditional SQL queries so the cost of additional queries may be acceptable If an excessive number of queries would be necessary one of the other two approaches is more appropriate br br br Caching replication and non normalized data br Instead of only storing foreign keys it is common to store actual foreign values along with the model s data For example each blog comment might include the username in addition to a user id thus providing easy access to the username without requiring another lookup When a username changes however this will now need to be changed in many places in the database Thus this approach works better when reads are much more common than writes br br br Nesting data br With document databases like MongoDB it is common to put more data in a smaller number of collections For example in a blogging application one might choose to store comments within the blog post document so that with a single retrieval one gets all the comments Thus in this approach a single document contains all the data you need for a specific task br br br ACID and join support br A database is marked as supporting ACID properties Atomicity Consistency Isolation Durability or join operations if the documentation for the database makes that claim However this doesn t necessarily mean that the capability is fully supported in a manner similar to most SQL databases br br br See also br CAP theorem br Comparison of object database management systems br Comparison of structured storage software br C br Database scalability br Distributed cache br Faceted search br MultiValue database br Multi model database br Schema agnostic databases br Triplestore br Vector database br br br br br br Further reading br Sadalage Pramod Fowler Martin NoSQL Distilled A Brief Guide to the Emerging World of Polyglot Persistence Addison Wesley ISBN br McCreary Dan Kelly Ann Making Sense of NoSQL A guide for managers and the rest of us Manning ISBN br Wiese Lena Advanced Data Management for SQL NoSQL Cloud and Distributed Databases DeGruyter Oldenbourg ISBN br Strauch Christof NoSQL Databases PDF br Moniruzzaman A B Hossain S A NoSQL Database New Era of Databases for Big data Analytics Classification Characteristics and Comparison arXiv cs DB br Orend Kai Analysis and Classification of NoSQL Databases and Evaluation of their Ability to Replace an Object relational Persistence Layer CiteSeerX br Krishnan Ganesh Kulkarni Sarang Dadbhawala Dharmesh Kirit Method and system for versioned sharing consolidating and reporting information br br br External links br Strauch Christof NoSQL whitepaper PDF Stuttgart Hochschule der Medien br Edlich Stefan NoSQL database List br Neubauer Peter Graph Databases NOSQL and Neo j br Bushik Sergey A vendor independent comparison of NoSQL databases Cassandra HBase MongoDB Riak NetworkWorld br Zicari Roberto V NoSQL Data Stores Articles Papers Presentations odbms org 