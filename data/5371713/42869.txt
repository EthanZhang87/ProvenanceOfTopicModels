title: Jakarta EE
id: 42869
Jakarta EE formerly Java Platform Enterprise Edition Java EE and Java Platform Enterprise Edition J EE is a set of specifications extending Java SE with specifications for enterprise features such as distributed computing and web services Jakarta EE applications are run on reference runtimes which can be microservices or application servers which handle transactions security scalability concurrency and management of the components they are deploying br Jakarta EE is defined by its specification The specification defines APIs application programming interface and their interactions As with other Java Community Process specifications providers must meet certain conformance requirements in order to declare their products as Jakarta EE compliant br Examples of contexts in which Jakarta EE referencing runtimes are used are e commerce accounting banking information systems br br br History br The platform was known as Java Platform Enterprise Edition or J EE from version until the name was changed to Java Platform Enterprise Edition or Java EE in version br Java EE was maintained by Oracle under the Java Community Process On September Oracle Corporation announced that it would submit Java EE to the Eclipse Foundation The Eclipse top level project has been named Eclipse Enterprise for Java EE J The Eclipse Foundation could not agree with Oracle over the use of javax and Java trademarks Oracle owns the trademark for the name Java and the platform was renamed from Java EE to Jakarta EE The name refers to the largest city on the island of Java and also the capital of Indonesia Jakarta The name should not be confused with the former Jakarta Project which fostered a number of current and former Java projects at the Apache Software Foundation br br br Specifications br Jakarta EE includes several specifications that serve different purposes like generating web pages reading and writing from a database in a transactional way managing distributed queues br The Jakarta EE APIs include several technologies that extend the functionality of the base Java SE APIs such as Jakarta Enterprise Beans connectors servlets Jakarta Server Pages and several web service technologies br br br Web specifications br Jakarta Servlet defines how to manage HTTP requests in a synchronous or asynchronous way It is low level and other Jakarta EE specifications rely on it br Jakarta WebSocket API specification that defines a set of APIs to service WebSocket connections br Jakarta Faces a technology for constructing user interfaces out of components br Jakarta Expression Language EL is a simple language originally designed to satisfy the specific needs of web application developers It is used specifically in Jakarta Faces to bind components to backing beans and in Contexts and Dependency Injection to named beans but can be used throughout the entire platform br br br Web service specifications br Jakarta RESTful Web Services provides support in creating web services according to the Representational State Transfer REST architectural pattern br Jakarta JSON Processing is a set of specifications to manage information encoded in JSON format br Jakarta JSON Binding provides specifications to convert JSON information into or from Java classes br Jakarta XML Binding allows mapping XML into Java objects br Jakarta XML Web Services can be used to create SOAP web services br br br Enterprise specifications br Jakarta Activation JAF specifies an architecture to extend component Beans by providing data typing and bindings of such types br Jakarta Contexts and Dependency Injection CDI is a specification to provide a dependency injection container br Jakarta Enterprise Beans EJB specification defines a set of lightweight APIs that an object container the EJB container will support in order to provide transactions using JTA remote procedure calls using RMI or RMI IIOP concurrency control dependency injection and access control for business objects This package contains the Jakarta Enterprise Beans classes and interfaces that define the contracts between the enterprise bean and its clients and between the enterprise bean and the ejb container br Jakarta Persistence JPA are specifications about object relational mapping between relation database tables and Java classes br Jakarta Transactions JTA contains the interfaces and annotations to interact with the transaction support offered by Jakarta EE Even though this API abstracts from the really low level details the interfaces are also considered somewhat low level and the average application developer in Jakarta EE is either assumed to be relying on transparent handling of transactions by the higher level EJB abstractions or using the annotations provided by this API in combination with CDI managed beans br Jakarta Messaging JMS provides a common way for Java programs to create send receive and read an enterprise messaging system s messages br br br Other specifications br Jakarta Validation This package contains the annotations and interfaces for the declarative validation support offered by the Jakarta Validation API Jakarta Validation provides a unified way to provide constraints on beans e g Jakarta Persistence model classes that can be enforced cross layer In Jakarta EE Jakarta Persistence honors bean validation constraints in the persistence layer while JSF does so in the view layer br Jakarta Batch provides the means for batch processing in applications to run long running background tasks that possibly involve a large volume of data and which may need to be periodically executed br Jakarta Connectors is a Java based tool for connecting application servers and enterprise information systems EIS as part of enterprise application integration EAI This is a low level API aimed at vendors that the average application developer typically does not come in contact with br br br Web profile br In an attempt to limit the footprint of web containers both in physical and in conceptual terms the web profile was created a subset of the Jakarta EE specifications The Jakarta EE web profile comprises the following br br br Certified referencing runtimes br Although by definition all Jakarta EE implementations provide the same base level of technologies namely the Jakarta EE spec and the associated APIs they can differ considerably with respect to extra features like connectors clustering fault tolerance high availability security etc installed size memory footprint startup time etc br br br Jakarta EE br br br Java EE br br br Code sample br The code sample shown below demonstrates how various technologies in Java EE are used together to build a web form for editing a user br In Jakarta EE a web UI can be built using Jakarta Servlet Jakarta Server Pages JSP or Jakarta Faces JSF with Facelets The example below uses Faces and Facelets Not explicitly shown is that the input components use the Jakarta EE Bean Validation API under the covers to validate constraints br br br Example Backing Bean class br To assist the view Jakarta EE uses a concept called a Backing Bean The example below uses Contexts and Dependency Injection CDI and Jakarta Enterprise Beans EJB br br br Example Data Access Object class br To implement business logic Jakarta Enterprise Beans EJB is the dedicated technology in Jakarta EE For the actual persistence JDBC or Jakarta Persistence JPA can be used The example below uses EJB and JPA Not explicitly shown is that JTA is used under the covers by EJB to control transactional behavior br br br Example Entity class br For defining entity model classes Jakarta EE provides the Jakarta Persistence JPA and for expressing constraints on those entities it provides the Bean Validation API The example below uses both these technologies br br br See also br br Canig framework br Deployment descriptor br Java BluePrints br Java Research License br Sun Community Source License br Sun Java System Portal Server br Web container br J ME br br br br br br External links br br Official website br Jakarta EE Compatible Products Enterprise Java Application and Web Servers Eclipse Foundation br The Jakarta EE Tutorial br First Cup of Jakarta EE Tutorial An Introduction to Jakarta EE br Java Platform Enterprise Edition Java EE Oracle Technology Network br Jakarta EE official YouTube channel