title: Java Management Extensions
id: 541158
Java Management Extensions JMX is a Java technology that supplies tools for managing and monitoring applications system objects devices such as printers and service oriented networks Those resources are represented by objects called MBeans for Managed Bean In the API classes can be dynamically loaded and instantiated br Managing and monitoring applications can be designed and developed using the Java Dynamic Management Kit br JSR of the Java Community Process defined JMX and JMX was being developed under JSR but this JSR was subsequently withdrawn The JMX Remote API for remote management and monitoring is specified by JSR An extension of the JMX Remote API for Web Services was being developed under JSR br Adopted early on by the J EE community JMX has been a part of J SE since version JMX is a trademark of Oracle Corporation br br br Architecture br br JMX uses a three level architecture br br The Probe level also called the Instrumentation level contains the probes called MBeans instrumenting the resources br The Agent level or MBeanServer the core of JMX It acts as an intermediary between the MBean and the applications br The Remote Management level enables remote applications to access the MBeanServer through connectors and adaptors A connector provides full remote access to the MBeanServer API using various communication RMI IIOP JMS WS while an adaptor adapts the API to another protocol SNMP or to Web based GUI HTML HTTP WML HTTP br Applications can be generic consoles such as JConsole and MC J or domain specific monitoring applications External applications can interact with the MBeans through the use of JMX connectors and protocol adapters Connectors serve to connect an agent with a remote JMX enabled management application This form of communication involves a connector in the JMX agent and a connector client in the management application br The Java Platform Standard Edition ships with one connector the RMI connector which uses the Java Remote Method Protocol that is part of the Java remote method invocation API This is the connector which most management applications use br Protocol adapters provide a management view of the JMX agent through a given protocol Management applications that connect to a protocol adapter are usually specific to the given protocol br br br Managed beans br A managed bean sometimes simply referred to as an MBean is a type of JavaBean created with dependency injection Managed Beans are particularly used in the Java Management Extensions technology but with Java EE the specification provides for a more detailed meaning of a managed bean br The MBean represents a resource running in the Java virtual machine such as an application or a Java EE technical service transactional monitor JDBC driver etc They can be used for collecting statistics on concerns like performance resources usage or problems pull for getting and setting application configurations or properties push pull and notifying events like faults or state changes push br Java EE provides that a managed bean is a bean that is implemented by a Java class which is called its bean class A top level Java class is a managed bean if it is defined to be a managed bean by any other Java EE technology specification for example the JavaServer Faces technology specification or if it meets all of the following conditions br br It is not a non static inner class br It is a concrete class or is annotated Decorator br It is not annotated with an EJB component defining annotation or declared as an EJB bean class in ejb jar xml br No special declaration such as an annotation is required to define a managed bean br A MBean can notify the MBeanServer of its internal changes for the attributes by implementing the javax management NotificationEmitter The application interested in the MBean s changes registers a listener javax management NotificationListener to the MBeanServer Note that JMX does not guarantee that the listeners will receive all notifications br br br Types br There are two basic types of MBean br br Standard MBeans implement a business interface containing setters and getters for the attributes and the operations i e methods br Dynamic MBeans implement the javax management DynamicMBean interface that provides a way to list the attributes and operations and to get and set the attribute values br Additional types are Open MBeans Model MBeans and Monitor MBeans Open MBeans are dynamic MBeans that rely on the basic data types They are self explanatory and more user friendly Model MBeans are dynamic MBeans that can be configured during runtime A generic MBean class is also provided for dynamically configuring the resources during program runtime br A MXBean Platform MBean is a special type of MBean that reifies Java virtual machine subsystems such as garbage collection JIT compilation memory pools multi threading etc br A MLet Management applet is a utility MBean to load instantiate and register MBeans in a MBeanServer from an XML description The format of the XML descriptor is br br MLET CODE class OBJECT serfile br ARCHIVE archiveList br CODEBASE codebaseURL br NAME objectName br VERSION version br br arglist br MLET br br br Support br JMX is supported at various levels by different vendors br br JMX is supported by Java application servers such as OpenCloud Rhino Application Server JBoss JOnAS WebSphere Application Server WebLogic SAP NetWeaver Application Server Oracle Application Server g and Sun Java System Application Server br JMX is supported by the UnboundID Directory Server Directory Proxy Server and Synchronization Server br Systems management tools that support the protocol include Empirix OneSight GroundWork Monitor Hyperic HP OpenView IBM Director ITRS Geneos Nimsoft NMS OpenNMS Zabbix Zenoss Core and Zyrion SolarWinds Uptime Infrastructure Monitor and LogicMonitor br JMX is also supported by servlet containers such as Apache Tomcat Jetty web server br MX J is Open Source JMX for Enterprise Computing br jManage Archived at the Wayback Machine is an open source enterprise grade JMX Console with Web and command line interfaces br MC J is an open source visual console for connecting to servers supporting JMX br snmpAdaptor j is an open source providing a simple access to MBeans via the SNMP protocol br jvmtop is a lightweight open source JMX monitoring tool for the command line br Prometheus can ingest JMX data via the JMX exporter which exposes metrics in Prometheus format br Jolokia is a j ee application which exposes JMX over HTTP br br br See also br Jini br Network management br Simple Network Management Protocol br br br br br br Further reading br br br Articles br Enabling Component Architectures with JMX by Marc Fleury and Juha Lindfors br Introducing A New Vendor Neutral J EE Management API by Andreas Schaefer br Java in the management sphere by Max Goff br Oct br Nov br Dec br JMX JBoss The microkernel design br Manage your JMX enabled applications with jManage by Rakesh Kalra Jan br Managing J EE Systems with JMX and JUnit Archived at the Wayback Machine by Lucas McGregor br Sun Java Overview of Monitoring and Management br The Java EE Tutorial About managed beans br br br Books br Benjamin G Sullins Mark B Whipple JMX in Action You will also get your first JMX application up and running Manning Publications Co ISBN br J Steven Perry Java Management Extensions O Reilly ISBN br Jeff Hanson Connecting JMX Clients and Servers Understanding the Java Management Extensions APress L P ISBN br Marc Fleury Juha Lindfors JMX Managing J EE with Java Management Extensions Sams Publishing ISBN br br br External links br JMX JMX part of Java br JMX at JBoss com br JMX on www oracle com br JSR JMX br JSR JMX and 