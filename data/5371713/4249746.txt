title: Oxygene (programming language)
id: 4249746
Oxygene formerly known as Chrome is a programming language developed by RemObjects Software for Microsoft s Common Language Infrastructure the Java Platform and Cocoa Oxygene is based on Delphi s Object Pascal but also has influences from C Eiffel Java F and other languages br Compared to the now deprecated Delphi NET Oxygene does not emphasize total backward compatibility but is designed to be a reinvention of the language be a good citizen on the managed development platforms and leverage all the features and technologies provided by the NET and Java runtimes br Oxygene is a commercial product and offers full integration into Microsoft s Visual Studio IDE on Windows as well as its own IDE called Fire for use on macOS Oxygene is one of six languages supported by the underlying Elements Compiler toolchain next to C Swift Java Go and Mercury based on Visual Basic NET br From to RemObjects Software licensed its compiler and IDE technology to Embarcadero to be used in their Embarcadero Prism product Starting in the Fall of Oxygene became available in two separate editions with the second edition adding support for the Java and Android runtimes Starting with the release of XE Embarcadero Prism is no longer part of the RAD Studio SKU Numerous support and upgrade paths for Prism customers exist to migrate to Oxygene As of there is only one edition of Oxygene which allows development on Windows or macOS and which can create executables for Windows Linux WebAssembly NET iOS Android Java and macOS br br br The language br The Oxygene language has its origins in Object Pascal in general and Delphi in particular but was designed to reflect the guidelines of NET programming and to create fully CLR compliant assemblies Therefore some minor language features known from Object Pascal Delphi have been dropped or revised while a slew of new and more modern features such as Generics or Sequences and Queries have been added to the language br Oxygene is an object oriented language which means it uses classes which can hold data and execute code to design programs Classes are prototypes for objects like the idea of an apple is the prototype for the apple one can actually buy in a shop It is known that an apple has a colour and that it can be peeled those are the data and executable code for the apple class br Oxygene provides language level support for some features of parallel programming The goal is to use all cores or processors of a computer to improve performance To reach this goal tasks have to be distributed among several threads The NET Framework s ThreadPool class offered a way to efficiently work with several threads The Task Parallel Library TPL was introduced in NET to provide more features for parallel programming br Operators can be overloaded in Oxygene using the class operator syntax br br Note that for operator overloading each operator has a name that has to be used in the operator overloading syntax because for example would not be a valid method name in Oxygene br br br Program structure br Oxygene does not use Units like Delphi does but uses NET namespaces to organize and group types A namespace can span multiple files and assemblies but one file can only contain types of one namespace This namespace is defined at the very top of the file br br namespace ConsoleApplication br br Oxygene files are separated into an interface and an implementation section which is the structure known from Delphi The interface section follows the declaration of the namespace It contains the uses clause which in Oxygene imports types from other namespaces br br Imported namespaces have to be in the project itself or in referenced assemblies Unlike in C in Oxygene alias names cannot be defined for namespaces only for single type names see below br Following the uses clause a file contains type declarations like they are known from Delphi br br As in C the Main method is the entry point for every program It can have a parameter args Array of String for passing command line arguments to the program br More types can be declared without repeating the type keyword br The implementation of the declared methods is placed in the implementation section br br Files are always ended with end br br br Types br As a NET language Oxygene uses the NET type system There are value types like structs and reference types like arrays or classes br Although it does not introduce own pre defined types Oxygene offers more pascalish generic names for some of them so that for example the System Int can be used as Integer and Boolean System Boolean Char System Char Real System Double join the family of pascal typenames too The struct character of these types which is part of NET is fully preserved br As in all NET languages types in Oxygene have a visibility In Oxygene the default visibility is assembly which is equivalent to the internal visibility in C The other possible type visibility is public br br The visibility can be set for every type defined classes interfaces records br An alias name can be defined for types which can be used locally or in other Oxygene assemblies br br Public type aliases won t be visible for other languages br br br Records br Records are what NET structs are called in Oxygene They are declared just like classes but with the record keyword br br As they re just NET structs records can have fields methods and properties but do not have inheritance and cannot implement interfaces br br br Interfaces br Interfaces are a very important concept in the NET world the framework itself makes heavy use of them Interfaces are the specification of a small set of methods properties and events a class has to implement when implementing the interface For example the interface IEnumerable T specifies the GetEnumerator method which is used to iterate over sequences br Interfaces are declared just like classes br br Please notice that for properties the getter and setter are not explicitly specified br br br Delegates br Delegates define signatures for methods so that these methods can be passed in parameters e g callbacks or stored in variables etc They re the type safe NET equivalent to function pointers They re also used in events When assigning a method to a delegate one has to use the operator so the compiler knows that one doesn t want to call the method but just assign it br Oxygene can create anonymous delegates for example methods can be passed to the Invoke method of a control without declaring the delegate br br An anonymous delegate with the signature of the method DoSomething will be created by the compiler br Oxygene supports polymorphic delegates which means that delegates which have parameters of descending types are assignment compatible Assume two classes MyClass and MyClassEx class MyClass then in the following code BlubbEx is assignment compatible to Blubb br br Fields can be used to delegate the implementation of an interface if the type they re of implements this interface br br In this example the compiler will create public methods and properties in MyClass which call the methods properties of fSomeImplementor to implement the members of IMyInterface This can be used to provide mixin like functionality br br br Anonymous methods br Anonymous methods are implemented inside other methods They are not accessible outside of the method unless stored inside a delegate field Anonymous methods can use the local variables of the method they re implemented in and the fields of the class they belong to br Anonymous methods are especially useful when working with code that is supposed to be executed in a GUI thread which is done in NET by passing a method do the Invoke method Control Invoke in WinForms Dispatcher Invoke in WPF br br Anonymous methods can have parameters too br br Both source codes use anonymous delegates br br br Property notification br Property notification is used mainly for data binding when the GUI has to know when the value of a property changes The NET framework provides the interfaces INotifyPropertyChanged and INotifyPropertyChanging in NET for this purpose These interfaces define events which have to be fired when a property is changed was changed br Oxygene provides the notify modifier which can be used on properties If this modifier is used the compiler will add the interfaces to the class implement them and create code to raise the events when the property changes was changed br br The modifier can be used on properties which have a setter method The code to raise the events will then be added to this method during compile time br br br Code examples br br br Hello World br br br Generic container br br br Generic method br br Program output br br Type System Int br a b br a b br Type System String br a abc b def br a def b abc br Type System Double br a b br a b br br br Differences between Delphi and Oxygene br unit Replaced with the namespace keyword Since Oxygene doesn t compile per file but per project it does not depend on the name of the file Instead the unit or namespace keyword is used to denote the default namespace that all types are defined in for that file br procedure and function method is the preferred keyword though procedure and function still work br overload In Oxygene all methods are overloaded by default so no special keyword is needed for this br Create This constructor call has been replaced by the new keyword It can still be enabled in the project options for legacy reasons br string Characters in strings are zero based and read only Strings can have nil values so testing against empty string is not always sufficient br br br Criticism br Some people would like to port their Win Delphi code to Oxygene without making major changes This is not possible because while Oxygene looks like Delphi there are enough changes so as to make it incompatible for a simple recompile While the name gives it the appearance of another version of Delphi that is not completely true br On top of the language difference the Visual Component Library framework is not available in Oxygene This makes porting even more difficult because classic Delphi code relies heavily on the VCL br br br See also br br C br Object Pascal br Embarcadero Delphi br Free Pascal br Eiffel br Java br br br br br br External links br Official website