title: Enterprise application integration
id: 842555
Enterprise application integration EAI is the use of software and computer systems architectural principles to integrate a set of enterprise computer applications br br br Overview br Enterprise application integration is an integration framework composed of a collection of technologies and services which form a middleware or middleware framework to enable integration of systems and applications across an enterprise br Many types of business software such as supply chain management applications ERP systems CRM applications for managing customers business intelligence applications payroll and human resources systems typically cannot communicate with one another in order to share data or business rules For this reason such applications are sometimes referred to as islands of automation or information silos This lack of communication leads to inefficiencies wherein identical data are stored in multiple locations or straightforward processes are unable to be automated br Enterprise application integration is the process of linking such applications within a single organization together in order to simplify and automate business processes to the greatest extent possible while at the same time avoiding having to make sweeping changes to the existing applications or data structures Applications can be linked either at the back end via APIs or seldom the front end GUI br In the words of research firm Gartner EAI is the unrestricted sharing of data and business processes among any connected application or data sources in the enterprise br The various systems that need to be linked together may reside on different operating systems use different database solutions or computer languages or different date and time formats or could be legacy systems that are no longer supported by the vendor who originally created them In some cases such systems are dubbed stovepipe systems because they consist of components that have been jammed together in a way that makes it very hard to modify them in any way br br br Improving connectivity br If integration is applied without following a structured EAI approach point to point connections grow across an organization Dependencies are added on an impromptu basis resulting in a complex structure that is difficult to maintain This is commonly referred to as spaghetti an allusion to the programming equivalent of spaghetti code br For example the number of connections needed to have fully meshed point to point connections with n points is given by br br br br br br br br br br br n br br br br br br br br br br br br br br n br br n br br br br br br br br br br br displaystyle tbinom n tfrac n n br br see binomial coefficient Thus for ten applications to be fully integrated point to point br br br br br br br br br br br br br br br br br br br br displaystyle tfrac times br br point to point connections are needed following a quadratic growth pattern br However the number of connections within organizations does not necessarily grow according to the square of the number of points In general the number of connections to any point is only limited by the number of other points in an organization but can be significantly smaller in principle EAI can also increase coupling between systems and therefore increase management overhead and costs br EAI is not just about sharing data between applications but also focuses on sharing both business data and business processes A middleware analyst attending to EAI will often look at the system of systems br br br Purposes br EAI can be used for different purposes br br Data integration Ensures that information in multiple systems is kept consistent This is also known as enterprise information integration EII br Vendor independence Extracts business policies or rules from applications and implements them in the EAI system so that even if one of the business applications is replaced with a different vendor s application the business rules do not have to be re implemented br Common facade An EAI system can front end a cluster of applications providing a single consistent access interface to these applications and shielding users from having to learn to use different software packages br br br Patterns br This section describes common design patterns for implementing EAI including integration access and lifetime patterns These are abstract patterns and can be implemented in many different ways There are many other patterns commonly used in the industry ranging from high level abstract design patterns to highly specific implementation patterns br br br Integration patterns br EAI systems implement two patterns br br Mediation intra communication br Here the EAI system acts as the go between or broker between multiple applications Whenever an interesting event occurs in an application for instance new information is created or a new transaction completed an integration module in the EAI system is notified The module then propagates the changes to other relevant applications br Federation inter communication br In this case the EAI system acts as the overarching facade across multiple applications All event calls from the outside world to any of the applications are front ended by the EAI system The EAI system is configured to expose only the relevant information and interfaces of the underlying applications to the outside world and performs all interactions with the underlying applications on behalf of the requester br Both patterns are often used concurrently The same EAI system could be keeping multiple applications in sync mediation while servicing requests from external users against these applications federation br br br Access patterns br EAI supports both asynchronous fire and forget and synchronous access patterns the former being typical in the mediation case and the latter in the federation case br br br Lifetime patterns br An integration operation could be short lived e g keeping data in sync across two applications could be completed within a second or long lived e g one of the steps could involve the EAI system interacting with a human work flow application for approval of a loan that takes hours or days to complete br br br Topologies br There are two major topologies hub and spoke and bus Each has its own advantages and disadvantages In the hub and spoke model the EAI system is at the center the hub and interacts with the applications via the spokes In the bus model the EAI system is the bus or is implemented as a resident module in an already existing message bus or message oriented middleware br Most large enterprises use zoned networks to create a layered defense against network oriented threats For example an enterprise typically has a credit card processing PCI compliant zone a non PCI zone a data zone a DMZ zone to proxy external user access and an IWZ zone to proxy internal user access Applications need to integrate across multiple zones The Hub and spoke model would work better in this case br br br Technologies br Multiple technologies are used in implementing each of the components of the EAI system br br Bus hub br This is usually implemented by enhancing standard middleware products application server message bus or implemented as a stand alone program i e does not use any middleware acting as its own middleware br Application connectivity br The bus hub connects to applications through a set of adapters also referred to as connectors These are programs that know how to interact with an underlying business application The adapter performs one way communication unidirectional performing requests from the hub against the application and notifying the hub when an event of interest occurs in the application a new record inserted a transaction completed etc Adapters can be specific to an application e g built against the application vendor s client libraries or specific to a class of applications e g can interact with any application through a standard communication protocol such as SOAP SMTP or Action Message Format AMF The adapter could reside in the same process space as the bus hub or execute in a remote location and interact with the hub bus through industry standard protocols such as message queues web services or even use a proprietary protocol In the Java world standards such as JCA allow adapters to be created in a vendor neutral manner br Data format and transformation br To avoid every adapter having to convert data to from every other application s formats EAI systems usually stipulate an application independent or common data format The EAI system usually provides a data transformation service as well to help convert between application specific and common formats This is done in two steps the adapter converts information from the application s format to the bus s common format Then semantic transformations are applied to this converting zip codes to city names splitting merging objects from one application into objects in the other applications and so on br Integration modules br An EAI system could be participating in multiple concurrent integration operations at any given time each type of integration being processed by a different integration module Integration modules subscribe to events of specific types and process notifications that they receive when these events occur These modules could be implemented in different ways on Java based EAI systems these could be web applications or EJBs or even POJOs that conform to the EAI system s specifications br Support for transactions br When used for process integration the EAI system also provides transactional consistency across applications by executing all integration operations across all applications in a single overarching distributed transaction using two phase commit protocols or compensating transactions br br br Communication architectures br Currently there are many variations of thought on what constitutes the best infrastructure component model and standards structure for Enterprise Application Integration There seems to be a consensus that four components are essential for a modern enterprise application integration architecture br br A centralized broker that handles security access and communication This can be accomplished through integration servers like the School Interoperability Framework SIF Zone Integration Servers or through similar software like the enterprise service bus ESB model that acts as a services manager br An independent data model based on a standard data structure also known as a canonical data model It appears that XML and the use of XML style sheets have become the de facto and in some cases de jure standard for this uniform business language br A connector or agent model where each vendor application or interface can build a single component that can speak natively to that application and communicate with the centralized broker br A system model that defines the APIs data flow and rules of engagement to the system such that components can be built to interface with it in a standardized way br Although other approaches like connecting at the database or user interface level have been explored they have not been found to scale or be able to adjust Individual applications can publish messages to the centralized broker and subscribe to receive certain messages from that broker Each application only requires one connection to the broker This central control approach can be extremely scalable and highly evolvable br Enterprise Application Integration is related to middleware technologies such as message oriented middleware MOM and data representation technologies such as XML or JSON Other EAI technologies involve using web services as part of service oriented architecture as a means of integration Enterprise Application Integration tends to be data centric In the near future it will come to include content integration and business processes br br br Implementation pitfalls br In it was reported that of all EAI projects fail Most of these failures are not due to the software itself or technical difficulties but due to management issues Integration Consortium European Chairman Steve Craggs has outlined the seven main pitfalls undertaken by companies using EAI systems and explains solutions to these problems br br Constant change The very nature of EAI is dynamic and requires dynamic project managers to manage their implementation br Shortage of EAI experts EAI requires knowledge of many issues and technical aspects br Competing standards Within the EAI field the paradox is that EAI standards themselves are not universal br EAI is a tool paradigm EAI is not a tool but rather a system and should be implemented as such br Building interfaces is an art Engineering the solution is not sufficient Solutions need to be negotiated with user departments to reach a common consensus on the final outcome A lack of consensus on interface designs leads to excessive effort to map between various systems data requirements br Loss of detail Information that seemed unimportant at an earlier stage may become crucial later br Accountability Since so many departments have many conflicting requirements there should be clear accountability for the system s final structure br Other potential problems may arise in these areas br br Lack of centralized co ordination of EAI work br Emerging Requirements EAI implementations should be extensible and modular to allow for future changes br Protectionism The applications whose data is being integrated often belong to different departments that have technical cultural and political reasons for not wanting to share their data with other departments br br br See also br Enterprise architecture framework br Strategies for Enterprise Application Integration br Business semantics management br Data integration br Enterprise information integration br Enterprise integration br Enterprise Integration Patterns br Enterprise service bus br Generalised Enterprise Reference Architecture and Methodology br Integration appliance br Integration competency center br Integration platform br System integration br br br Initiatives and organizations br Health Level br Open Knowledge Initiative br OSS through Java br Schools Interoperability Framework SIF br br br 