title: Java version history
id: 7771171
The Java language has undergone several changes since JDK as well as numerous additions of classes and packages to the standard library Since J SE the evolution of the Java language has been governed by the Java Community Process JCP which uses Java Specification Requests JSRs to propose and specify additions and changes to the Java platform The language is specified by the Java Language Specification JLS changes to the JLS are managed under JSR In September Mark Reinhold chief Architect of the Java Platform proposed to change the release train to one feature release every six months rather than the then current two year schedule This proposal took effect for all following versions and is still the current release schedule br In addition to the language changes other changes have been made to the Java Class Library over the years which has grown from a few hundred classes in JDK to over three thousand in J SE Entire new APIs such as Swing and Java D have been introduced and many of the original JDK classes and methods have been deprecated and very few APIs have been removed at least one for threading in Java Some programs allow the conversion of Java programs from one version of the Java platform to an older one for example Java backported to see Java backporting tools br Regarding Oracle Java SE Support Roadmap version is the latest one and versions and are the currently supported long term support LTS versions where Oracle Customers will receive Oracle Premier Support Oracle continues to release no cost public Java updates for development and personal use indefinitely Oracle also continues to release no cost public Java LTS updates for all users including commercial and production use until September br In the case of OpenJDK both commercial long term support and free software updates are available from multiple organizations in the broader community br Java was released on March br br br Release table br br br JDK br br The first version was released on January The first stable version JDK is called Java br br br JDK br br Major additions in the release on February included br br extensive retooling of the Abstract Window Toolkit AWT event model br inner classes added to the language br JavaBeans br Java Database Connectivity JDBC br Java remote method invocation RMI and serialization br reflection which supported Introspection only no modification at runtime was possible The ability to modify objects reflectively was added in J SE by introducing the AccessibleObject class and its subclasses such as the Field class br Just in time compilation JIT on Microsoft Windows platforms produced for JavaSoft by Symantec br Internationalization and Unicode support originating from Taligent br br br J SE br br The release on December and subsequent releases through J SE were rebranded retrospectively Java and the version name J SE Java Platform Standard Edition replaced JDK to distinguish the base platform from J EE Java Platform Enterprise Edition and J ME Java Platform Micro Edition This was a very significant release of Java as it tripled the size of the Java platform to classes in packages Major additions included br br strictfp keyword by JVM an obsolete keyword should not be used in new code br The Swing graphical API was integrated into the core classes br Sun s JVM was equipped with a JIT compiler for the first time br Java plug in br Java IDL an IDL implementation for CORBA interoperability br Collections framework br br br J SE br br The most notable changes in the May release were br br HotSpot JVM included the HotSpot JVM was first released in April for the J SE JVM br RMI was modified to support optional compatibility with CORBA br Java Naming and Directory Interface JNDI included in core libraries previously available as an extension br Java Platform Debugger Architecture JPDA br JavaSound br Synthetic proxy classes br Java is the last release of Java to officially support Microsoft Windows br br br J SE br br The February release was the first release of the Java platform developed under the Java Community Process as JSR Major changes included br br Language changes br assert keyword specified in JSR br Library improvements br Regular expressions modeled after Perl regular expressions br Exception chaining allows an exception to encapsulate original lower level exception br Internet Protocol version IPv support br Non blocking I O named NIO specified in JSR br Logging API specified in JSR br Image I O API for reading and writing images in formats like JPEG and PNG br Integrated XML parser and XSLT processor JAXP specified in JSR and JSR br Integrated security and cryptography extensions JCE JSSE JAAS br Java Web Start included Java Web Start was first released in March for J SE specified in JSR br Preferences API java util prefs br Public support and security updates for Java ended in October Paid security updates for Oracle customers ended in February br br br Java SE br br The release on September was originally numbered which is still used as the internal version number The number was changed to better reflect the level of maturity stability scalability and security of the J SE This version was developed under JSR br Java SE entered its end of public updates period on April updates are no longer available to the public as of November Updates were available to paid Oracle customers until May br Tiger added a number of significant new language features br br Generics provides compile time static type safety for collections and eliminates the need for most typecasts type conversion specified by JSR br Metadata also called annotations allows language constructs such as classes and methods to be tagged with additional data which can then be processed by metadata aware utilities specified by JSR br Autoboxing unboxing automatic conversions between primitive types such as int and primitive wrapper classes such as Integer specified by JSR br Enumerations the enum keyword creates a typesafe ordered list of values such as Day MONDAY Day TUESDAY etc previously this could only be achieved by non typesafe constant integers or manually constructed classes typesafe enum pattern specified by JSR br Varargs the last parameter of a method can now be declared using a type name followed by three dots e g void drawtext String lines in the calling code any number of parameters of that type can be used and they are then placed in an array to be passed to the method or alternatively the calling code can pass an array of that type br Enhanced for each loop the for loop syntax is extended with special syntax for iterating over each member of either an array or any Iterable such as the standard Collection classes specified by JSR br Improved semantics of execution for multi threaded Java programs the new Java memory model addresses issues of complexity effectiveness and performance of previous specifications br Static imports br There were also the following improvements to the standard libraries br br Automatic stub generation for RMI objects br Swing New skinnable look and feel called synth br The concurrency utilities in package java util concurrent br Scanner class for parsing data from various input streams and buffers br Java is the last release of Java to officially support Microsoft Windows and Windows ME while Windows Vista was the newest version of Windows that Java SE was supported on prior to Java going end of life in October of br Java Update is the last release of Java to work on Windows with Internet Explorer installed and Windows NT br Java was first available on Apple Mac OS X Tiger and was the default version of Java installed on Apple Mac OS X Leopard br Public support and security updates for Java ended in November Paid security updates for Oracle customers ended in April br br br Versioning change br This version introduced a new versioning system for the Java language although the old versioning system continued to be used for developer libraries br br Both version numbers and are used to identify this release of the Java Platform Standard Edition Version is the product version while is the developer version The number is used to better reflect the level of maturity stability scalability and security of the J SE br This correspondence continued through later releases Java JDK Java JDK and so on br br br Java SE br br As of the version released on December Sun replaced the name J SE with Java SE and dropped the from the version number Internal numbering for developers remains br This version was developed under JSR br During the development phase new builds including enhancements and bug fixes were released approximately weekly Beta versions were released in February and June leading up to a final release that occurred on December br Major changes included in this version br br Support for older Win x versions dropped unofficially Java Update was the last release of Java shown to work on these versions of Windows This is believed to be due to the major changes in Update br Scripting Language Support JSR Generic API for tight integration with scripting languages and built in Mozilla JavaScript Rhino integration br Dramatic performance improvements for the core platform and Swing br Improved Web Service support through JAX WS JSR br JDBC support JSR br Java Compiler API JSR an API allowing a Java program to select and invoke a Java Compiler programmatically br Upgrade of JAXB to version Including integration of a StAX parser br Support for pluggable annotations JSR br Many GUI improvements such as integration of SwingWorker in the API table sorting and filtering and true Swing double buffering eliminating the gray area effect br JVM improvements include synchronization and compiler performance optimizations new algorithms and upgrades to existing garbage collection algorithms and application start up performance br Java can be installed to Mac OS X Leopard running on bit Core Duo and higher processor machines Java is also supported by both bit and bit machines running Mac OS X Snow Leopard br Java reached the end of its supported life in February at which time all public updates including security updates were scheduled to be stopped Oracle released two more updates to Java in March and April which patched some security vulnerabilities br br br Java updates br After Java release Sun and later Oracle released several updates which while not changing any public API enhanced end user usability or fixed bugs br br br Java SE br br Java was a major update that launched on July and was made available for developers on July The development period was organized into thirteen milestones on June the last of the thirteen milestones was finished On average builds which generally included enhancements and bug fixes were released per milestone The feature list at the OpenJDK project lists many of the changes br Additions in Java include br br JVM support for dynamic languages with the new invokedynamic bytecode under JSR following the prototyping work currently done on the Multi Language Virtual Machine br Compressed bit pointers available in Java with XX UseCompressedOops br These small language changes grouped under a project named Coin br Strings in switch br Automatic resource management in try statement aka try with resources statement br Improved type inference for generic instance creation aka the diamond operator br Simplified varargs method declaration br Binary integer literals br Allowing underscores in numeric literals br Catching multiple exception types and rethrowing exceptions with improved type checking br Concurrency utilities under JSR br New file I O library defined by JSR adding support for multiple file systems file metadata and symbolic links The new packages are java nio file java nio file attribute and java nio file spi br Timsort is used to sort collections and arrays of objects instead of merge sort br Library level support for elliptic curve cryptography algorithms br An XRender pipeline for Java D which improves handling of features specific to modern GPUs br New platform APIs for the graphics features originally implemented in version u as unsupported APIs br Enhanced library level support for new network protocols including SCTP and Sockets Direct Protocol br Upstream updates to XML and Unicode br Java deployment rule sets br Lambda Java s implementation of lambda functions Jigsaw Java s implementation of modules and part of Coin were dropped from Java and released as part of Java except for Jigsaw which was released in Java br Java was the default version to download on java com from April until Java was released br br br Java updates br Oracle issued public updates to the Java family on a quarterly basis until April when the product reached the end of its public availability Further updates for JDK which continued until July are only made available to customers with a support contract br br br Java SE br br Java was released on March and included some features that were planned for Java but later deferred br Work on features was organized in terms of JDK Enhancement Proposals JEPs br br JSR JEP Language level support for lambda expressions officially lambda expressions unofficially closures under Project Lambda and default methods virtual extension methods which can be used to add methods to interfaces without breaking existing implementations There was an ongoing debate in the Java community on whether to add support for lambda expressions Sun later declared that lambda expressions would be included in Java and asked for community input to refine the feature Supporting lambda expressions also enables functional style operations on streams of elements such as MapReduce inspired transformations on collections Default methods can be used by an author of an API to add new methods to an interface without breaking the old code using it Although it was not their primary intent default methods can also be used for multiple inheritance of behavior but not state br JEP Project Nashorn a JavaScript runtime which can run JavaScript code embedded within applications br JEP Annotation on Java types br Unsigned integer arithmetic br JEP Repeating annotations br JEP Date and time API br JEP Statically linked JNI libraries br JEP Launch JavaFX applications direct launching of JavaFX application JARs br JEP Remove the permanent generation br Java is not supported on Windows XP but as of JDK update it can still be installed and run under Windows XP Previous updates of JDK could be run under XP by downloading archived zip format file and unzipping it for the executable The last version of Java could run on XP is update br From October Java was the default version to download and then again the download replacing Java from the official website Oracle will continue to provide Public Updates and auto updates of Java SE Indefinitely for Personal Users br br br Java updates br br br Java SE br br Java SE was made available on September due to controversial acceptance of the current implementation of Project Jigsaw by Java Executive Committee which led Oracle to fix some open issues and concerns and to refine some critical technical questions In the last days of June Java Community Process expressed nearly unanimous consensus on the proposed Module System scheme br br JSR Modularization of the JDK under Project Jigsaw Java Platform Module System br JavaDB was removed from JDK br JEP Variable handles define a standard means to invoke the equivalents of various java util concurrent atomic and sun misc Unsafe operations br JEP Milling Project Coin allow SafeVarargs on private instance methods Allow effectively final variables to be used as resources in the try with resources statement Allow diamond with anonymous classes if the argument type of the inferred type is denotable Complete the removal begun in Java SE of underscore from the set of legal identifier names Support for private methods in interfaces br JEP jshell The Java Shell Read Eval Print Loop JShell is a REPL command line interface for the Java language br JEP Compact Strings br JEP HiDPI graphics automatic scaling and sizing br JEP More concurrency updates it includes a Java implementation of Reactive Streams including a new Flow class that included the interfaces previously provided by Reactive Streams br JEP XML catalogs br JEP jlink The Java Linker create a tool that can assemble and optimize a set of modules and their dependencies into a custom run time image It effectively allows to produce a fully usable executable including the JVM to run it br JEP Ahead of Time Compilation ahead of time compilation provided by GraalVM br The first Java release candidate was released on August The first stable release of Java was on September br br br History br At JavaOne Oracle discussed features they hoped to release for Java in Java should include better support for multi gigabyte heaps better native code integration a different default garbage collector G for shorter response times and a self tuning JVM In early the release of Java was rescheduled for March and later again postponed four more months to July br br br Java updates br br br Java SE br br OpenJDK was released on March with twelve new features confirmed Among these features were br br JEP Local Variable Type Inference br JEP Consolidate the JDK Forest into a Single Repository br JEP Garbage Collector Interface br JEP Parallel Full GC for G br JEP Application Class Data Sharing br JEP Thread Local Handshakes br JEP Remove the Native Header Generation Tool javah br JEP Additional Unicode Language Tag Extensions br JEP Heap Allocation on Alternative Memory Devices br JEP Experimental Java Based JIT Compiler br JEP Root Certificates br JEP Time Based Release Versioning br The first of these JEP Local Variable Type Inference allows the var keyword to be used for local variables with the actual type calculated by the compiler So we can do br br br Java updates br br br Java SE br br JDK was released on September and the version is currently open for bug fixes It offers LTS or Long Term Support Among others Java includes a number of new features such as br br JEP Nest Based Access Control br JEP Dynamic Class File Constants br JEP Improve Aarch Intrinsics br JEP Epsilon A No Op Garbage Collector br JEP Remove the Java EE and CORBA Modules br JEP HTTP Client Standard br JEP Local Variable Syntax for Lambda Parameters br JEP Key Agreement with Curve and Curve br JEP Unicode br JEP Flight Recorder br JEP ChaCha and Poly Cryptographic Algorithms br JEP Launch Single File Source Code Programs br JEP Low Overhead Heap Profiling br JEP Transport Layer Security TLS br JEP ZGC A Scalable Low Latency Garbage Collector Experimental br JEP Deprecate the Nashorn JavaScript Engine br JEP Deprecate the Pack Tools and API br A number of features from previous releases were dropped in particular Java applets and Java Web Start are no longer available JavaFX Java EE and CORBA modules have been removed from JDK br br br Java updates br br br Java SE br br JDK was released on March Among others Java includes a number of new features such as br br JEP Shenandoah A Low Pause Time Garbage Collector Experimental br JEP Microbenchmark Suite br JEP Switch Expressions Preview br JEP JVM Constants API br JEP One AArch Port Not Two br JEP Default CDS Archives br JEP Abortable Mixed Collections for G br JEP Promptly Return Unused Committed Memory from G br The preview feature JEP extends the switch statement so it can also be used as an expression and adds a new form of case label where the right hand side is an expression No break statement is needed For complex expressions a yield statement can be used This becomes standard in Java SE br br br Java updates br br br Java SE br br JDK was released on September Java includes the following new features as well as hundreds of smaller enhancements and thousands of bug fixes br br JEP Dynamic CDS Archives br JEP ZGC Uncommit Unused Memory br JEP Reimplement the Legacy Socket API br JEP Switch Expressions Preview br JEP Text Blocks Preview br JEP Text Blocks allows multiline string literals br br br Java updates br br br Java SE br br JDK was released on March Java includes the following new features as well as hundreds of smaller enhancements and thousands of bug fixes br br JEP Pattern Matching for instanceof Preview br JEP Packaging Tool Incubator br JEP NUMA Aware Memory Allocation for G br JEP JFR Event Streaming br JEP Non Volatile Mapped Byte Buffers br JEP Helpful NullPointerExceptions br JEP Records Preview br JEP Switch Expressions Standard br JEP Deprecate the Solaris and SPARC Ports br JEP Remove the Concurrent Mark Sweep CMS Garbage Collector br JEP ZGC on macOS br JEP ZGC on Windows br JEP Deprecate the ParallelScavenge SerialOld GC Combination br JEP Remove the Pack Tools and API br JEP Text Blocks Second Preview br JEP Foreign Memory Access API Incubator br JEP Pattern Matching for instanceof simplifies the common case of an instanceof test being immediately followed by cast replacing br br with br br JEP Records allows easy creation of simple immutable Tuple like classes br br br Java updates br br br Java SE br br JDK was released on September Java adds e g support for multi line string literals aka Text Blocks The Shenandoah and Z garbage collectors latter sometimes abbreviated ZGC are now ready for use in production i e no longer marked experimental Support for Oracle s Solaris operating system and SPARC CPUs is dropped while still available in e g Java The Nashorn JavaScript Engine is removed Also removed some root CA certificates br br JEP Edwards Curve Digital Signature Algorithm EdDSA br JEP Sealed Classes Preview br JEP Hidden Classes br JEP Remove the Nashorn JavaScript Engine br JEP Reimplement the Legacy DatagramSocket API br JEP Disable and Deprecate Biased Locking br JEP Pattern Matching for instanceof Second Preview br JEP ZGC A Scalable Low Latency Garbage Collector br JEP Text Blocks br JEP Shenandoah A Low Pause Time Garbage Collector br JEP Remove the Solaris and SPARC Ports br JEP Foreign Memory Access API Second Incubator br JEP Records Second Preview br JEP Deprecate RMI Activation for Removal br JEP Sealed Classes adds sealed classes and interfaces that restrict which other classes or interfaces may extend or implement them Only those classes specified in a permits clause may extend the class or interface br br Together with records sealed classes are sum types They work well with other recent features like records switch expressions and pattern matching for instance of They all form part of a system for Pattern matching in Java first discussed by Gavin Bierman and Brian Goetz in September br br br Java updates br br br Java SE br br JDK was released on March Java removes Ahead of Time compilation and Graal JIT options The Java implementation itself was and is still written in C while as of Java more recent C but still not e g C or C is allowed The code was also moved to GitHub dropping Mercurial as the source control system br br JEP Vector API Incubator br JEP Enable C Language Features br JEP Migrate from Mercurial to Git br JEP Migrate to GitHub br JEP ZGC Concurrent Thread Stack Processing br JEP Unix Domain Socket Channels br JEP Alpine Linux Port not yet stable br JEP Elastic Metaspace br JEP Windows AArch Port br JEP Foreign Linker API Incubator br JEP Warnings for Value Based Classes br JEP Packaging Tool br JEP Foreign Memory Access API Third Incubator br JEP Pattern Matching for instanceof br JEP Records br JEP Strongly Encapsulate JDK Internals by Default br JEP Sealed Classes Second Preview br br br Java updates br br br Java SE br br JDK was released in September Java is the nd long term support LTS release since switching to the new month release cadence the first being Java br br JEP Restore Always Strict Floating Point Semantics br JEP Enhanced Pseudo Random Number Generators br JEP New macOS Rendering Pipeline br JEP macOS AArch Port br JEP Deprecate the Applet API for Removal br JEP Strongly Encapsulate JDK Internals br JEP Pattern Matching for switch Preview br JEP Remove RMI Activation br JEP Sealed Classes br JEP Remove the Experimental AOT and JIT Compiler br JEP Deprecate the Security Manager for Removal br JEP Foreign Function Memory API Incubator br JEP Vector API Second Incubator br JEP Context Specific Deserialization Filters br JEP extends the pattern matching syntax used in instanceof operations to switch statements and expressions It allows cases to be selected based on the type of the argument null cases and refining patterns br br br Java updates br br br Java SE br br JDK was released on March br br JEP UTF by Default br JEP Simple Web Server br JEP Code Snippets in Java API Documentation br JEP Reimplement Core Reflection with Method Handles br JEP Vector API Third Incubator br JEP Internet Address Resolution SPI br JEP Foreign Function Memory API Second Incubator br JEP Pattern Matching for switch Second Preview br JEP Deprecate Finalization for Removal br br br Java updates br br br Java SE br br JDK was released on September br br JEP Record Patterns Preview br JEP Linux RISC V Port br JEP Foreign Function Memory API Preview br JEP Virtual Threads Preview br JEP Vector API Fourth Incubator br JEP Pattern Matching for switch Third Preview br JEP Structured Concurrency Incubator br JEP allows record patterns extending the pattern matching capabilities of instanceof operators and switch expressions to include record patterns that explicitly refer to the components of the record br br Such patterns can include nested patterns where the components of records are themselves records allowing patterns to match more object graphs br br br Java updates br br br Java SE br br Java was released on March All JEPs were either incubators or previews br br JEP Scoped Values Incubator br JEP Record Patterns Second Preview br JEP Pattern Matching for switch Fourth Preview br JEP Foreign Function Memory API Second Preview br JEP Virtual Threads Second Preview br JEP Structured Concurrency Second Incubator br JEP Vector API Fifth Incubator br br br Java updates br br br Java SE br br Java was released on September There are eight JEPs that are not in preview or incubating compared to Java which only had previewing and incubating JEPs Java introduces features first previewed in Java pattern matching for switch statements and Java record patterns The bit version of Java for Windows on x has been deprecated for removal br br JEP String Templates Preview br JEP Sequenced Collections br JEP Generational ZGC br JEP Record Patterns br JEP Pattern Matching for switch br JEP Foreign Function Memory API Third Preview br JEP Unnamed Patterns and Variables Preview br JEP Virtual Threads br JEP Unnamed Classes and Instance Main Methods Preview br JEP Scoped Values Preview br JEP Vector API Sixth Incubator br JEP Deprecate the Windows bit x Port for Removal br JEP Prepare to Disallow the Dynamic Loading of Agents br JEP Key Encapsulation Mechanism API br JEP Structured Concurrency Preview br JEP previewing unnamed classes allows for a barebones Main class without boilerplate code br instead of br br br Java updates br br br Java SE br br Java was released on March br br JEP Region Pinning for G br JEP Statements before super Preview br JEP Foreign Function Memory API br JEP Unnamed Variables Patterns br JEP Class File API Preview br JEP Launch Multi File Source Code Programs br JEP String Templates Second Preview br JEP Vector API Seventh Incubator br JEP Stream Gatherers Preview br JEP Structured Concurrency Second Preview br JEP Implicitly Declared Classes and Instance Main Methods Second Preview br JEP Scoped Values Second Preview br At least one API has been removed from Java i e a very rarely used API for threading was removed from Java br br br Java SE br br As of January the specification for Java has not yet been finalized Java is scheduled for release in September br br br Future features br Project Valhalla Value classes whose objects lack identity but can in certain cases get an improved memory layout with less indirection or have their allocation optimized away entirely br Project Panama br Improved interoperability with native code to enable Java source code to call functions and use data types from other languages in a way that is easier and has better performance than today this part of Project Panama is getting stabilized in Java under JEP Foreign Function Memory API br Vector API a portable and relatively low level abstraction layer for SIMD programming Its stabilization is dependent on Project Valhalla br Project Lilliput Reduce the size of Java object headers First down to bits and then down to bits br Reducing startup time and warm up time time to peak performance in JIT mode br Project CRaC enables making snapshots of whole JVM together with the running application and restoring it with necessary adjustments reopening files sockets etc br Project Leyden among other things will allow partial or in the long term full AOT compiling reducing overall dynamism by adopting so called closed world constraints to reduce dynamic compiling overhead br Project Babylon aims to extend the Java language s reach to alternative programming models with an enhancement to its reflective programming abilities called code reflection i e reflection over code itself The stated main goal is to run Java code on GPUs with SQL and other programming models as secondary targets br br br Implementations br The officially supported Java platform first developed at Sun and now stewarded by Oracle is Java SE Releases are based on the OpenJDK project a free and open source project with an open development model Other Java implementations exist however in part due to Java s early history as proprietary software In contrast some implementations were created to offer some benefits over the standard implementation often the result of some area of academic or corporate sponsored research Many Linux distributions include builds of OpenJDK through the IcedTea project started by Red Hat which provides a more straightforward build and integration environment br Visual J and the Microsoft Java Virtual Machine were created as incompatible implementations After the Sun v Microsoft lawsuit Microsoft abandoned it and began work on the NET platform In Microsoft started distributing compatible Microsoft Build of OpenJDK for Java first then also for Java Their builds support not only Windows but also Linux and macOS br Other proprietary Java implementations are available such as Azul s Zing Azul offers certified open source OpenJDK builds under the Zulu moniker br Prior to the release of OpenJDK while Sun s implementation was still proprietary the GNU Classpath project was created to provide a free and open source implementation of the Java platform Since the release of JDK when OpenJDK became the official reference implementation the original motivation for the GNU Classpath project almost completely disappeared and its last release was in br The Apache Harmony project was started shortly before the release of OpenJDK After Sun s initial source code release the Harmony project continued working to provide an implementation under a lax license in contrast to the protective license chosen for OpenJDK Google later developed Android and released it under a lax license Android incorporated parts of the Harmony project supplemented with Google s own Dalvik virtual machine and ART Apache Harmony has since been retired and Google has switched its Harmony components with equivalent ones from OpenJDK br Both Jikes and Jikes RVM are open source research projects that IBM developed br Several other implementations exist that started as proprietary software but are now open source IBM initially developed OpenJ as the proprietary J but has since relicensed the project and donated it to the Eclipse Foundation JRockit is a proprietary implementation that was acquired by Oracle and incorporated into subsequent OpenJDK versions br br br br br br External links br Official Java SE Downloads br Sun Java Supported versions and EOL br Downloads archive for older version of Java br JDK Releases br The Java Version Almanac