title: Maxine Virtual Machine
id: 30552285
The Maxine virtual machine is an open source virtual machine that is developed at the University of Manchester It was formerly developed by Sun Microsystems Laboratories since renamed Oracle Labs The emphasis in Maxine s software architecture is on modular design and code reuse for flexibility configurability and productivity for industrial and academic virtual machine researchers It is one of a growing number of Java virtual machines written entirely in Java in a meta circular style Examples include Squawk and Jikes RVM br br br Architecture br The Maxine VM is characterized internally by aggressive use of advanced language features in Java and by modular subsystems coordinated through Java interfaces by the absence of an interpreter and by a tightly coupled debugger and visualization tool for VM development br br br Compatibility br Maxine is plug compatible with an unmodified Java Development Kit JDK Maxine can be developed built and run in standard Java integrated development environments IDEs including NetBeans Eclipse and IntelliJ IDEA br br br Systems programming in Java br A secondary goal of the project is to develop methods and tools for systems programming in Java Compiler extensions configured in VM source code using Java annotations allow use with no performance penalty of low level operations otherwise disallowed in Java These extensions provided the foundation for the Graal compiler br br br The Maxine Inspector br Specialized debugging support for the Maxine VM is provided by the Maxine Inspector a companion tool that acts as a combined object class and method browser and as a machine and bytecode level debugger br The Inspector runs out of process needs no active VM support and leverages code shared with the VM for specialized developer services that exploit detailed knowledge of memory layout and VM design br Notable services include br br multiple mode views of code source bytecode disassembled machine code with multi mode breakpoints and stepping br thread stack register and thread local variable inspection br flexible low level memory visualization with dynamic interpretation and linking of memory values e g as code locations object references br dynamic visualization of object fields and metadata br boot image configuration details and br specialized algorithm specific support for debugging during GC br br br History br Maxine was created by Bernd Mathiske at Sun Labs in early He led its development among a growing team until late when he left Sun Microsystems and handed the project over to Doug Simon who had been the first engineer to join it Doug Simon continued in this role throughout the acquisition of Sun by Oracle Corporation br The static heap inspection version of the Maxine Inspector was created by Bernd Mathiske in Michael Van De Vanter assumed development of the Inspector in adding dynamic support as the VM became executable and continued to evolve throughout the acquisition of Sun by Oracle Corporation br Oracle continued development of Maxine until the release of Maxine The University of Manchester is developing Maxine as of release br br br See also br br List of Java virtual machines br Squawk virtual machine br Jikes RVM br br br br br br Notes br br br Bibliography br Kotselidis Christos Clarkson James Rodchenko Andrey Nisbet Andy Mawer John Luj n Mikel Heterogeneous Managed Runtime Systems Proceedings of the th ACM SIGPLAN SIGOPS International Conference on Virtual Execution Environments VEE pp doi ISBN br Wimmer Christian Haupt Michael Van De Vanter Michael L Jordan Mick Dayn s Laurent Simon Douglas January Maxine An approachable virtual machine for and in java ACM Transactions on Architecture and Code Optimization art doi ISSN br br br External links br Official website br Maxine VM project at Read the Docs