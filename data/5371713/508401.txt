title: Apache Groovy
id: 508401
Apache Groovy is a Java syntax compatible object oriented programming language for the Java platform It is both a static and dynamic language with features similar to those of Python Ruby and Smalltalk It can be used as both a programming language and a scripting language for the Java Platform is compiled to Java virtual machine JVM bytecode and interoperates seamlessly with other Java code and libraries Groovy uses a curly bracket syntax similar to Java s Groovy supports closures multiline strings and expressions embedded in strings Much of Groovy s power lies in its AST transformations triggered through annotations br Groovy was released on January and Groovy in July Since version Groovy can be compiled statically offering type inference and performance near that of Java Groovy was the last major release under Pivotal Software s sponsorship which ended in March Groovy has since changed its governance structure to a Project Management Committee in the Apache Software Foundation br br br History br James Strachan first talked about the development of Groovy on his blog in August In March Groovy was submitted to the JCP as JSR and accepted by ballot Several versions were released between and After the Java Community Process JCP standardization effort began the version numbering changed and a version called was released on January After various betas and release candidates numbered on December Groovy Final was released and immediately renumbered as Groovy to reflect the many changes made br In Groovy won the first prize at JAX innovation award In Grails a Groovy web framework won the second prize at JAX innovation award br In November SpringSource acquired the Groovy and Grails company G One In August VMware acquired SpringSource br In April after eight years of inactivity the Spec Lead changed the status of JSR to dormant br Strachan had left the project silently a year before the Groovy release in In Oct Strachan stated I still love groovy jenkins pipelines are so groovy java go typescript and kotlin br On July Groovy was released which among other new features added static compiling and static type checking br When the Pivotal Software joint venture was spun off by EMC Corporation EMC and VMware in April Groovy and Grails formed part of its product portfolio Pivotal ceased sponsoring Groovy and Grails from April br That same month Groovy changed its governance structure from a Codehaus repository to a Project Management Committee PMC in the Apache Software Foundation via its incubator br Groovy graduated from Apache s incubator and became a top level project in November br On February Groovy was released Version was released on January br br br Features br Most valid Java files are also valid Groovy files Although the two languages are similar Groovy code can be more compact because it does not need all the elements that Java needs This makes it possible for Java programmers to learn Groovy gradually by starting with familiar Java syntax before acquiring more Groovy programming idioms br Groovy features not available in Java include both static and dynamic typing with the keyword def operator overloading native syntax for lists and associative arrays maps native support for regular expressions polymorphic iteration string interpolation added helper methods and the safe navigation operator to check automatically for null pointers for example variable method or variable field br Since version Groovy also supports modularity being able to ship only the needed jars according to the project needs thus reducing the size of Groovy s library type checking static compiling Project Coin syntax enhancements multicatch blocks and ongoing performance enhancements using the invokedynamic instruction introduced in Java br Groovy provides native support for various markup languages such as XML and HTML accomplished via an inline Document Object Model DOM syntax This feature enables the definition and manipulation of many types of heterogeneous data assets with a uniform and concise syntax and programming methodology br Unlike Java a Groovy source code file can be executed as an uncompiled script if it contains code outside any class definition if it is a class with a main method or if it is a Runnable or GroovyTestCase A Groovy script is fully parsed compiled and generated before executing similar to Python and Ruby This occurs under the hood and the compiled version is not saved as an artifact of the process br br br GroovyBeans properties br GroovyBeans are Groovy s version of JavaBeans Groovy implicitly generates getters and setters In the following code setColor String color and getColor are implicitly generated The last two lines which appear to access color directly are actually calling the implicitly generated methods br br Groovy offers simple consistent syntax for handling lists and maps reminiscent of Java s array syntax br br br Prototype extension br Groovy offers support for prototype extension through ExpandoMetaClass Extension Modules only in Groovy Objective C like Categories and DelegatingMetaClass br ExpandoMetaClass offers a domain specific language DSL to express the changes in the class easily similar to Ruby s open class concept br br Groovy s changes in code through prototyping are not visible in Java since each attribute method invocation in Groovy goes through the metaclass registry The changed code can only be accessed from Java by going to the metaclass registry br Groovy also allows overriding methods as getProperty propertyMissing among others enabling the developer to intercept calls to an object and specify an action for them in a simplified aspect oriented way The following code enables the class java lang String to respond to the hex property br br The Grails framework uses metaprogramming extensively to enable GORM dynamic finders like User findByName Josh and others br br br Dot and parentheses br Groovy s syntax permits omitting parentheses and dots in some situations The following groovy code br br can be written as br br enabling the development of domain specific languages DSLs that look like plain English br br br Functional programming br Although Groovy is mostly an object oriented language it also offers functional programming features br br br Closures br According to Groovy s documentation Closures in Groovy work similar to a method pointer enabling code to be written and run in a later point in time Groovy s closures support free variables i e variables that have not been explicitly passed as a parameter to it but exist in its declaration context partial application that it terms currying delegation implicit typed and untyped parameters br When working on Collections of a determined type the closure passed to an operation on the collection can be inferred br br A group of expressions can be written in a closure block without reference to an implementation and the responding object can be assigned at a later point using delegation br br br Curry br Usually called partial application this Groovy feature allows closures parameters to be set to a default parameter in any of their arguments creating a new closure with the bound value Supplying one argument to the curry method will fix argument one Supplying N arguments will fix arguments N br br Curry can also be used in the reverse direction fixing the last N arguments using rcurry br br Groovy also supports lazy evaluation reduce fold infinite structures and immutability among others br br br JSON and XML processing br On JavaScript Object Notation JSON and XML processing Groovy employs the Builder pattern making the production of the data structure less verbose For example the following XML br br can be generated via the following Groovy code br br and also can be processed in a streaming way through StreamingMarkupBuilder To change the implementation to JSON the MarkupBuilder can be swapped to JsonBuilder br To parse it and search for a functional language Groovy s findAll method can serve br br br String interpolation br In Groovy strings can be interpolated with variables and expressions by using GStrings br br GStrings containing variables and expressions must be declared using double quotes br A complex expression must be enclosed in curly brackets This prevents parts of it from being interpreted as belonging to the surrounding string instead of to the expression br br Expression evaluation can be deferred by employing arrow syntax br br br Abstract syntax tree transformation br According to Groovy s own documentation When the Groovy compiler compiles Groovy scripts and classes at some point in the process the source code will end up being represented in memory in the form of a Concrete Syntax Tree then transformed into an Abstract Syntax Tree The purpose of AST Transformations is to let developers hook into the compilation process to be able to modify the AST before it is turned into bytecode that will be run by the JVM AST Transformations provides Groovy with improved compile time metaprogramming capabilities allowing powerful flexibility at the language level without a runtime performance penalty br Examples of ASTs in Groovy are br br Category and Mixin transformation br Immutable AST Macro br Newify transformation br Singleton transformation br among others br The testing framework Spock uses AST transformations to allow the programmer to write tests in a syntax not supported by Groovy but the relevant code is then manipulated in the AST to valid code An example of such a test is br br br Traits br According to Groovy s documentation Traits are a structural construct of the language that allows composition of behaviors runtime implementation of interfaces behavior overriding and compatibility with static type checking compilation br Traits can be seen as interfaces carrying both default implementations and state A trait is defined using the trait keyword br br Then it can be used like a normal interface using the keyword implements br br Traits allow a wide range of abilities from simple composition to testing br br br Adoption br Notable examples of Groovy adoption include br br Adaptavist ScriptRunner embeds a Groovy implementation to automate and extend Atlassian tools in use by more than organisations around the world br Apache OFBiz the open source enterprise resource planning ERP system uses Groovy br Eucalyptus a cloud management system uses a significant amount of Groovy br Gradle is a popular build automation tool using Groovy br LinkedIn uses Groovy and Grails for some of their subsystems br LogicMonitor a cloud based monitoring platform uses Groovy in script based data sources br Jenkins a platform for continuous integration With version Jenkins includes a Pipeline plugin that allows for build instructions to be written in Groovy br Liferay uses groovy in their kaleo workflow br Sky com uses Groovy and Grails to serve massive online media content br SmartThings an open platform for smart homes and the consumer Internet of Things uses a security oriented subset of Groovy br SoapUI provides Groovy as a language for webservice tests development br Survata a market research startup uses Groovy and Grails br The European Patent Office EPO developed a dataflow programming language in Groovy to leverage similarities in the processes for communicating with each individual country s patent office and transform them into a single universal process br Though Groovy can be integrated into any JVM environment the JBoss Seam framework provides Groovy besides Java as a development language out of the box br vCalc com uses Groovy for all of the user defined mathematics in its math crowd sourcing engine br Wired com uses Groovy and Grails for the Product Reviews standalone section of the website br XWiki SAS uses Groovy as scripting language in their collaborative open source product br br br IDE support br Many integrated development environments IDEs and text editors support Groovy br br Android Studio IDE used for making Android apps br Atom editor br Eclipse through Groovy Eclipse br Emacs using the groovy emacs mode project s groovy mode br IntelliJ IDEA Community Edition Grails Griffon in the Ultimate Edition only br JDeveloper for use with Oracle ADF br jEdit an advanced text editor for the Java platform br Kate an advanced text editor for KDE supports Groovy and over other file formats br NetBeans since version br Notepad an advanced text editor for Microsoft Windows br Sublime Text a cross platform text editor br TextMate br Visual Studio Code br UltraEdit general purpose program editor br br br Dialects br There is one alternative implementation of Groovy br br Grooscript converts Groovy code to JavaScript code Although Grooscript has some limitations compared to Apache Groovy it can use domain classes in both the server and the client Plugin support for Grails version is provided as well as online code conversions br br br See also br br Comparison of programming languages br Griffon framework a desktop framework br Project Zero br Spock testing framework br br br br br br Citations br br br Sources br br br External links br Official website br Groovy at Curlie