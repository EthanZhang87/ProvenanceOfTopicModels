title: Clojure
id: 16561990
Clojure like closure is a dynamic and functional dialect of the Lisp programming language on the Java platform br Like most other Lisps Clojure s syntax is built on S expressions that are first parsed into data structures by a reader before being compiled Clojure s reader supports literal syntax for maps sets and vectors along with lists and these are compiled to the mentioned structures directly Clojure treats code as data and has a Lisp macro system Clojure is a Lisp and is not intended to be code compatible with other dialects of Lisp since it uses its own set of data structures incompatible with other Lisps br Clojure advocates immutability and immutable data structures and encourages programmers to be explicit about managing identity and its states This focus on programming with immutable values and explicit progression of time constructs is intended to facilitate developing more robust especially concurrent programs that are simple and fast While its type system is entirely dynamic recent efforts have also sought the implementation of a dependent type system br The language was created by Rich Hickey in the mid s originally for the Java platform the language has since been ported to other platforms such as the Common Language Runtime NET Hickey continues to lead development of the language as its benevolent dictator for life br br br History br br Rich Hickey is the creator of the Clojure language Before Clojure he developed dotLisp a similar project based on the NET platform and three earlier attempts to provide interoperability between Lisp and Java a Java foreign language interface for Common Lisp jfli A Foreign Object Interface for Lisp FOIL and a Lisp friendly interface to Java Servlets Lisplets br Hickey spent about two and a half years working on Clojure before releasing it publicly in October much of that time working exclusively on Clojure with no outside funding At the end of this time Hickey sent an email announcing the language to some friends in the Common Lisp community br Clojure s name according to Hickey is a word play on the programming concept closure incorporating the letters C L and J for C Lisp and Java respectively three languages which had a major influence on Clojure s design br br br Design br Rich Hickey developed Clojure because he wanted a modern Lisp for functional programming symbiotic with the established Java platform and designed for concurrency He has also stressed the importance of simplicity in programming language design and software architecture advocating for loose coupling polymorphism via protocols and type classes instead of inheritance stateless functions that are namespaced instead of methods or replacing syntax with data br Clojure s approach to state is characterized by the concept of identities which are represented as a series of immutable states over time Since states are immutable values any number of workers can operate on them in parallel and concurrency becomes a question of managing changes from one state to another For this purpose Clojure provides several mutable reference types each having well defined semantics for the transition between states br Clojure runs on the Java platform and as a result integrates with Java and fully supports calling Java code from Clojure and Clojure code can be called from Java too The community uses tools such as Clojure command line interface CLI or Leiningen for project automation providing support for Maven integration These tools handle project package management and dependencies and are configured using Clojure syntax br As a Lisp dialect Clojure supports functions as first class objects a read eval print loop REPL and a macro system Clojure s Lisp macro system is very similar to that of Common Lisp with the exception that Clojure s version of the backquote termed syntax quote qualifies symbols with their namespace This helps prevent unintended name capture as binding to namespace qualified names is forbidden It is possible to force a capturing macro expansion but it must be done explicitly Clojure does not allow user defined reader macros but the reader supports a more constrained form of syntactic extension Clojure supports multimethods and for interface like abstractions has a protocol based polymorphism and data type system using records providing high performance and dynamic polymorphism designed to avoid the expression problem br Clojure has support for lazy sequences and encourages the principle of immutability and persistent data structures As a functional language emphasis is placed on recursion and higher order functions instead of side effect based looping Automatic tail call optimization is not supported as the JVM does not support it natively it is possible to do so explicitly by using the recur keyword For parallel and concurrent programming Clojure provides software transactional memory a reactive agent system and channel based concurrent programming br Clojure introduced reader conditionals by allowing the embedding of Clojure ClojureScript and ClojureCLR code in the same namespace Transducers were added as a method for composing transformations Transducers enable higher order functions such as map and fold to generalize over any source of input data While traditionally these functions operate on sequences transducers allow them to work on channels and let the user define their own models for transduction br br br Extensible Data Notation br Extensible Data Notation or edn is a subset of the Clojure language intended as a data transfer format It can be used to serialize and deserialize Clojure data structures and Clojure itself uses a superset of edn to represent programs br edn is used in a similar way to JSON or XML but has a relatively large list of built in elements shown here with examples br br booleans true false br strings foo bar br characters c tab br symbols name br keywords key br integers br floating point numbers br lists a b br vectors a b br maps a foo bar four br sets a b br nil nil a null like value br In addition to those elements it supports extensibility through the use of tags which consist of the character followed by a symbol When encountering a tag the reader passes the value of the next element to the corresponding handler which returns a data value For example this could be a tagged element myapp Person first Fred last Mertz whose interpretation will depend on the appropriate handler of the reader br This definition of extension elements in terms of the others avoids relying on either convention or context to convey elements not included in the base set br br br Alternative platforms br The primary platform of Clojure is Java but other target implementations exist The most notable of these is ClojureScript which compiles to ECMAScript and ClojureCLR a full port on the NET platform interoperable with its ecosystem br Other implementations of Clojure on different platforms include br br Babashka Native Clojure scripting language leveraging GraalVM native image and Small Clojure Interpreter br CljPerl Clojure on Perl br ClojureDart Extend Clojure s reach to mobile desktop apps by porting Clojure to Dart and Flutter br Clojerl Clojure on BEAM the Erlang virtual machine br basilisp A Clojure compatible ish Lisp dialect targeting Python br ClojureRS Clojure on Rust br Ferret compiles to self contained C that can run on microcontrollers br jank Native Clojure hosted in C on an LLVM based JIT br Joker an interpreter and linter written in Go br Las r a subset of Clojure that runs on the ActionScript Virtual Machine the Adobe Flash Player platform br Pixie Clojure inspired Lisp dialect written in RPython br Rouge Clojure on YARV in Ruby br br br Tools br Tooling for Clojure development has seen significant improvement over the years The following is a list of some popular IDEs and text editors with plug ins that add support for programming in Clojure br br Emacs with CIDER br IntelliJ IDEA with Cursive a free license is available for non commercial use br Sublime Text with Clojure Sublimed or Tutkain br Vim with fireplace vim vim elin or Conjure Neovim only br Visual Studio Code with Calva or Clover br IDE agnostic using the Language Server Protocol for static analysis and or linting clj kondo or clojure lsp br In addition to the tools provided by the community the official Clojure command line interface CLI tools have also become available on Linux macOS and Windows since Clojure br br br Development br The development process is restricted to the Clojure core team though issues are publicly visible at the Clojure JIRA project page Anyone can ask questions or submit issues and ideas at ask clojure org If it s determined that a new issue warrants a JIRA ticket a core team member will triage it and add it JIRA issues are processed by a team of screeners and finally approved by Rich Hickey br br br Impact br With continued interest in functional programming Clojure s adoption by software developers using the Java platform has continued to increase The language has also been recommended by software developers such as Brian Goetz Eric Evans James Gosling Paul Graham and Robert C Martin ThoughtWorks while assessing functional programming languages for their Technology Radar described Clojure as a simple elegant implementation of Lisp on the JVM in and promoted its status to ADOPT in br In the JVM Ecosystem Report which was claimed to be the largest survey ever of Java developers that was prepared in collaboration by Snyk and Java Magazine ranked Clojure as the nd most used programming language on the JVM for main applications Clojure is used in industry by firms such as Apple Atlassian Funding Circle Netflix Nubank Puppet and Walmart as well as government agencies such as NASA It has also been used for creative computing including visual art music games and poetry br In the edition of Stack Overflow Developer Survey Clojure was the fourth most admired in the category of programming and scripting languages with of the respondents who have worked with it last year saying they would like to continue using it In the desired category however it was marked as such by only of the surveyed whereas the highest scoring JavaScript was desired by of the developers participating in the survey It could possibly be attributed to limited professional opportunities for Clojure developers with just over search results for Clojure developer at the U S section of Indeed as of May br br br Release history br br br See also br br List of JVM languages br List of CLI languages br Comparison of programming languages br br br br br br Further reading br br br External links br Official website