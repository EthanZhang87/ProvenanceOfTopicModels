title: Hibernate (framework)
id: 1329800
Hibernate ORM or simply Hibernate is an object relational mapping tool for the Java programming language It provides a framework for mapping an object oriented domain model to a relational database Hibernate handles object relational impedance mismatch problems by replacing direct persistent database accesses with high level object handling functions br Hibernate is free software that is distributed under the GNU Lesser General Public License br Hibernate s primary feature is mapping from Java classes to database tables and mapping from Java data types to SQL data types Hibernate also provides data query and retrieval facilities It generates SQL calls and relieves the developer from the manual handling and object conversion of the result set br br br Mapping br The mapping of Java classes to database tables is implemented by the configuration of an XML file or by using Java Annotations When using an XML file Hibernate can generate skeleton source code for the persistence classes This is auxiliary when annotations are used Hibernate can use the XML file or the Java annotations to maintain the database schema br There are provided facilities to arrange one to many and many to many relationships between classes In addition to managing associations between objects Hibernate can also manage reflexive associations wherein an object has a one to many relationship with other instances of the class type br Hibernate supports the mapping of custom value types This makes the following scenarios possible br br Overriding the default SQL type when mapping a column to a property br Mapping Java Enums to columns as though they were regular properties br Mapping a single property to multiple columns br Definition br Objects in an object oriented application follow OOP principles while objects in the back end follow database normalization principles resulting in different representation requirements This problem is called object relational impedance mismatch Mapping is a way of resolving the object relational impedance mismatch problem br Mapping informs the ORM tool of what Java class object to store in which database table br br br Hibernate Query Language HQL br Hibernate provides a SQL inspired language called Hibernate Query Language HQL for writing SQL like queries against Hibernate s data objects Criteria Queries are provided as an object oriented alternative to HQL Criteria Query is used to modify the objects and provide the restriction for the objects br HQL Hibernate Query Language is the object oriented version of SQL It generates database independent queries so that there is no need to write database specific queries Without this capability changing the database would require individual SQL queries to be changed as well leading to maintenance issues br br br Persistence br Hibernate provides transparent persistence for Plain Old Java Objects POJOs The only strict requirement for a persistent class is a no argument constructor though not necessarily public Proper behavior in some applications also requires special attention to the equals Object obj and hashCode methods in the Object classes Hibernate recommends providing an identifier attribute and this is planned to be a mandatory requirement in a future release br Collections of data objects are typically stored in Java collection classes such as implementations of the Set and List interfaces Java generics introduced in Java are also supported Hibernate can be configured to lazy load associated collections Lazy loading is the default as of Hibernate br Related objects can be configured to cascade operations from one object to the other For example a parent Album class object can be configured to cascade its save and delete operations to its child Track class objects br br br Integration br Hibernate can be used both in standalone Java applications and in Java EE applications using servlets EJB session beans and JBI service components It can also be included as a feature in other programming languages For example Adobe integrated Hibernate into version of ColdFusion which runs on J EE app servers with an abstraction layer of new functions and syntax added into CFML br br br Entities and components br In Hibernate jargon an entity is a stand alone object in Hibernate s persistent mechanism which can be manipulated independently of other objects In contrast a component is subordinate to an entity and can be manipulated only with respect to that entity For example an Album object may represent an entity but the Tracks object associated with the Album objects would represent a component of the Album entity if it is assumed that Tracks can only be saved or retrieved from the database through the Album object Unlike J EE Hibernate can switch databases br br br History br Hibernate was started in by Gavin King with colleagues from Cirrus Technologies as an alternative to using EJB style entity beans The original goal was to offer better persistence capabilities than those offered by EJB by simplifying the complexities and supplementing certain missing features br In early the Hibernate development team began Hibernate releases which offered many significant improvements over the first release br JBoss Inc now part of Red Hat later hired the lead Hibernate developers in order to further its development br In Hibernate version was released Key features included a new Interceptor Callback architecture user defined filters and JDK Annotations Java s metadata feature As of Hibernate version and up was a certified implementation of the Java Persistence API specification via a wrapper for the Core module which provides conformity with the JSR standard br In Dec Hibernate Core Final was released This includes new features such as multi tenancy support introduction of ServiceRegistry a major change in how Hibernate builds and manages services better session opening from SessionFactory improved integration via org hibernate integrator spi Integrator and auto discovery internationalization support message codes in logging and a more distinction between the API SPI or implementation classes br In December Hibernate ORM Final was released br In Mar Hibernate ORM Final was released br In December Hibernate ORM Final was released It features Java Persistence API br In September Hibernate ORM Final was released It has improved bootstrapping hibernate java hibernate spatial Karaf support br In November Hibernate ORM Final was released This is the final release of the series br In October Hibernate ORM Final was released It featured Java Persistence API inheritance caching br In December Hibernate ORM Final was released br In October Hibernate ORM Final was released br br br Application programming interface br The Hibernate API is provided in the Java package org hibernate br br br org hibernate SessionFactory interface br The org hibernate SessionFactory interface is the native equivalent version of the JPA s standard EntityManagerFactory br br br org hibernate Session interface br The org hibernate Session interface represents a Hibernate session i e the main point of the manipulation performed on the database entities The latter activities include among the other things managing the persistence state transient persisted detached of the objects fetching the persisted ones from the database and the management of the transaction demarcation br A Session is intended to last as long as the logical transaction on the database Due to the latter feature Session implementations are not expected to be thread safe nor to be used by multiple clients br br br Software components br The Hibernate software includes the following components br br Hibernate ORM known as Hibernate Core before release the base software for an object relational mapping solution for Java environments br Hibernate Annotations merged into Hibernate Core ORM since version metadata that governs the transformation of data between the object oriented model and the relational database model according to the JSR Java Persistence API JPA br Hibernate EntityManager merged into Hibernate Core ORM since version together with Hibernate Annotations a wrapper that implements a JSR Java Persistence API JPA persistence solution br Hibernate Envers auditing and versioning of persistent classes br Hibernate OGM Object Grid Mapper an extension to store data in a NoSQL store br Hibernate Shards horizontal partitioning for multiple relational databases br While Hibernate Shards is not compatible with x releases of Hibernate Core some of the Shards capability was integrated into Core in the release br Hibernate Search integrates the full text library functionality from Apache Lucene in the Hibernate and JPA model br Hibernate Tools a set of tools implemented as a suite of Eclipse plugins and Ant tasks included in JBoss Developer Studio br Hibernate Validator the reference implementation of JSR Bean Validation br Hibernate Metamodel Generator an annotation processor that creates JSR Java Persistence API JPA static metamodel classes using the JSR Pluggable Annotation Processing API br NHibernate an object relational mapping solution for the NET Framework br br br See also br br List of JBoss software br List of object relational mapping software br NHibernate br Serialization br Service Data Object br MySQL br Apache Cassandra br Spring Framework br MyBatis br br br br br br Bibliography br br br External links br Official website br Hibernate on GitHub