title: MyBatis
id: 29946710
MyBatis is a Java persistence framework that couples objects with stored procedures or SQL statements using an XML descriptor or annotations br MyBatis is free software that is distributed under the Apache License br MyBatis is a fork of iBATIS and is maintained by a team that includes the original creators of iBATIS br br br Feature summary br Unlike ORM frameworks MyBatis does not map Java objects to database tables but Java methods to SQL statements br MyBatis lets you use all your database functionality like stored procedures views queries of any complexity and vendor proprietary features It is often a good choice for legacy or de normalized databases or to obtain full control of SQL execution br It simplifies coding compared to JDBC SQL statements are executed with a single line br MyBatis provides a mapping engine that maps SQL results to object trees in a declarative way br SQL statements can be built dynamically by using a built in language with XML like syntax or with Apache Velocity using the Velocity integration plugin br MyBatis integrates with Spring Framework and Google Guice This feature allows one to build business code free of dependencies br MyBatis supports declarative data caching A statement can be marked as cacheable so any data retrieved from the database will be stored in a cache and future executions of that statement will retrieve the cached data instead hitting the database MyBatis provides a default cache implementation based on a Java HashMap and default connectors for integrating with OSCache Ehcache Hazelcast and Memcached It provides an API to plug other cache implementations br br br Usage br SQL statements are stored in XML files or annotations Below depicts a MyBatis mapper that consists of a Java interface with some MyBatis annotations br br The sentence is executed as follows br br SQL statements and mappings can also be externalized to an XML file as follows br br Statements can also be executed using the MyBatis API br br For details please refer to the User Guide available at MyBatis site See external links br br br Spring integration br MyBatis integrates with Spring Framework This module allows MyBatis to participate in Spring transactions It will also build MyBatis mappers and sessions and inject them into other beans br The following sample shows a basic XML configuration that sets up a mapper and injects it into a BlogService bean br br Calling MyBatis is now just calling a bean br br br Velocity language br The Velocity language driver lets you use Apache Velocity to generate your dynamic SQL queries on the fly br br br MyBatis Generator br MyBatis provides a code generator MyBatis Generator will introspect a database table or many tables and generate MyBatis artifacts needed to perform CRUD operations Create Retrieve Update Delete br An Eclipse plugin is available br It will preserve any custom code in case of regeneration but only if you use the Eclipse plugin br br br MyBatis Migrations br MyBatis Migrations is a Java command line tool that keeps track of database schema changes managing DDL files known as migrations br Migrations allows to query the current status of the database apply schema changes and also undo them It also helps to detect and solve concurrent database schema changes made by different developers br br br History br MyBatis project is a subsidiary of iBATIS and maintained by a team which includes the original creators of iBATIS br The project was created on May when Apache iBATIS was published and the team announced that the development will continue under a new name and a new home at Google Code br br br See also br Hibernate br Speedment br Java Database Connectivity JDBC br Java Persistence API br EclipseLink br Ebean br jOOQ br Apache Cayenne br IBM PureQuery br nHydrate br Apache OpenJPA br ActiveJPA br br br br br br External links br Official website