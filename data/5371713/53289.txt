title: File Transfer Protocol
id: 53289
The File Transfer Protocol FTP is a standard communication protocol used for the transfer of computer files from a server to a client on a computer network FTP is built on a client server model architecture using separate control and data connections between the client and the server FTP users may authenticate themselves with a plain text sign in protocol normally in the form of a username and password but can connect anonymously if the server is configured to allow it For secure transmission that protects the username and password and encrypts the content FTP is often secured with SSL TLS FTPS or replaced with SSH File Transfer Protocol SFTP br The first FTP client applications were command line programs developed before operating systems had graphical user interfaces and are still shipped with most Windows Unix and Linux operating systems Many dedicated FTP clients and automation utilities have since been developed for desktops servers mobile devices and hardware and FTP has been incorporated into productivity applications such as HTML editors and file managers br An FTP client used to be commonly integrated in web browsers where file servers are browsed with the URI prefix ftp In FTP support was dropped by Google Chrome and Firefox two major web browser vendors due to it being superseded by the more secure SFTP and FTPS although neither of them have implemented the newer protocols br br br History of FTP servers br The original specification for the File Transfer Protocol was written by Abhay Bhushan and published as RFC on April Until FTP ran on NCP the predecessor of TCP IP The protocol was later replaced by a TCP IP version RFC June and RFC October the current specification Several proposed standards amend RFC for example RFC February enables Firewall Friendly FTP passive mode RFC June proposes security extensions RFC September adds support for IPv and defines a new type of passive mode br br br Protocol overview br br br Communication and data transfer br br FTP may run in active or passive mode which determines how the data connection is established This sense of mode is different from that of the MODE command in the FTP protocol br br In active mode the client starts listening for incoming data connections from the server on port M It sends the FTP command PORT M to inform the server on which port it is listening The server then initiates a data channel to the client from its port the FTP server data port br In situations where the client is behind a firewall and unable to accept incoming TCP connections passive mode may be used In this mode the client uses the control connection to send a PASV command to the server and then receives a server IP address and server port number from the server which the client then uses to open a data connection from an arbitrary client port to the server IP address and server port number received br Both modes were updated in September to support IPv Further changes were introduced to the passive mode at that time updating it to extended passive mode br The server responds over the control connection with three digit status codes in ASCII with an optional text message For example or OK means that the last command was successful The numbers represent the code for the response and the optional text represents a human readable explanation or request e g Need account for storing file An ongoing transfer of file data over the data connection can be aborted using an interrupt message sent over the control connection br FTP needs two ports one for sending and one for receiving because it was originally designed to operate on top of Network Control Protocol NCP which was a simplex protocol that utilized two port addresses establishing two connections for two way communications An odd and an even port were reserved for each application layer application or protocol The standardization of TCP and UDP reduced the need for the use of two simplex ports for each application down to one duplex port but the FTP protocol was never altered to only use one port and continued using two for backwards compatibility br br br NAT and firewall traversal br FTP normally transfers data by having the server connect back to the client after the PORT command is sent by the client This is problematic for both NATs and firewalls which do not allow connections from the Internet towards internal hosts For NATs an additional complication is that the representation of the IP addresses and port number in the PORT command refer to the internal host s IP address and port rather than the public IP address and port of the NAT br There are two approaches to solve this problem One is that the FTP client and FTP server use the PASV command which causes the data connection to be established from the FTP client to the server This is widely used by modern FTP clients Another approach is for the NAT to alter the values of the PORT command using an application level gateway for this purpose br br br Data types br While transferring data over the network five data types are defined br br ASCII TYPE A Used for text Data is converted if needed from the sending host s character representation to bit ASCII before transmission and again if necessary to the receiving host s character representation including newlines As a consequence this mode is inappropriate for files that contain data other than ASCII br Image TYPE I commonly called Binary mode The sending machine sends each file byte by byte and the recipient stores the bytestream as it receives it Image mode support has been recommended for all implementations of FTP br EBCDIC TYPE E Used for plain text between hosts using the EBCDIC character set br Local TYPE L n Designed to support file transfer between machines which do not use bit bytes e g bit systems such as DEC PDP s For example TYPE L would be used to transfer data in bit bytes or TYPE L to transfer bit words Most contemporary FTP clients servers only support L which is equivalent to I br Unicode text files using UTF TYPE U defined in an expired Internet Draft which never became an RFC though it has been implemented by several FTP clients servers br Note these data types are commonly called modes although ambiguously that word is also used to refer to active vs passive communication mode see above and the modes set by the FTP protocol MODE command see below br For text files TYPE A and TYPE E three different format control options are provided to control how the file would be printed br br Non print TYPE A N and TYPE E N the file does not contain any carriage control characters intended for a printer br Telnet TYPE A T and TYPE E T the file contains Telnet or in other words ASCII C carriage control characters CR LF etc br ASA TYPE A A and TYPE E A the file contains ASA carriage control characters br These formats were mainly relevant to line printers most contemporary FTP clients servers only support the default format control of N br br br File structures br File organization is specified using the STRU command The following file structures are defined in section of RFC br br F or FILE structure stream oriented Files are viewed as an arbitrary sequence of bytes characters or words This is the usual file structure on Unix systems and other systems such as CP M MS DOS and Microsoft Windows Section br R or RECORD structure record oriented Files are viewed as divided into records which may be fixed or variable length This file organization is common on mainframe and midrange systems such as MVS VM CMS OS and VMS which support record oriented filesystems br P or PAGE structure page oriented Files are divided into pages which may either contain data or metadata each page may also have a header giving various attributes This file structure was specifically designed for TENEX systems and is generally not supported on other platforms RFC section recommends that this structure not be implemented br Most contemporary FTP clients and servers only support STRU F STRU R is still in use in mainframe and minicomputer file transfer applications br br br Data transfer modes br Data transfer can be done in any of three modes br br Stream mode MODE S Data is sent as a continuous stream relieving FTP from doing any processing Rather all processing is left up to TCP No End of file indicator is needed unless the data is divided into records br Block mode MODE B Designed primarily for transferring record oriented files STRU R although can also be used to transfer stream oriented STRU F text files FTP puts each record or line of data into several blocks block header byte count and data field and then passes it on to TCP br Compressed mode MODE C Extends MODE B with data compression using run length encoding br Most contemporary FTP clients and servers do not implement MODE B or MODE C FTP clients and servers for mainframe and minicomputer operating systems are the exception to that br Some FTP software also implements a DEFLATE based compressed mode sometimes called Mode Z after the command that enables it This mode was described in an Internet Draft but not standardized br GridFTP defines additional modes MODE E and MODE X as extensions of MODE B br br br Additional commands br More recent implementations of FTP support the Modify Fact Modification Time MFMT command which allows a client to adjust that file attribute remotely enabling the preservation of that attribute when uploading files br To retrieve a remote file timestamp there s MDTM command Some servers and clients support nonstandard syntax of the MDTM command with two arguments that works the same way as MFMT br br br Login br br FTP login uses normal username and password scheme for granting access The username is sent to the server using the USER command and the password is sent using the PASS command This sequence is unencrypted on the wire so may be vulnerable to a network sniffing attack If the information provided by the client is accepted by the server the server will send a greeting to the client and the session will commence If the server supports it users may log in without providing login credentials but the same server may authorize only limited access for such sessions br br br Anonymous FTP br A host that provides an FTP service may provide anonymous FTP access Users typically log into the service with an anonymous lower case and case sensitive in some FTP servers account when prompted for user name Although users are commonly asked to send their email address instead of a password no verification is actually performed on the supplied data Many FTP hosts whose purpose is to provide software updates will allow anonymous logins br br br Differences from HTTP br br HTTP essentially fixes the bugs in FTP that made it inconvenient to use for many small ephemeral transfers as are typical in web pages br FTP has a stateful control connection which maintains a current working directory and other flags and each transfer requires a secondary connection through which the data are transferred In passive mode this secondary connection is from client to server whereas in the default active mode this connection is from server to client This apparent role reversal when in active mode and random port numbers for all transfers is why firewalls and NAT gateways have such a hard time with FTP HTTP is stateless and multiplexes control and data over a single connection from client to server on well known port numbers which trivially passes through NAT gateways and is simple for firewalls to manage br Setting up an FTP control connection is quite slow due to the round trip delays of sending all of the required commands and awaiting responses so it is customary to bring up a control connection and hold it open for multiple file transfers rather than drop and re establish the session afresh each time In contrast HTTP originally dropped the connection after each transfer because doing so was so cheap While HTTP has subsequently gained the ability to reuse the TCP connection for multiple transfers the conceptual model is still of independent requests rather than a session br When FTP is transferring over the data connection the control connection is idle If the transfer takes too long the firewall or NAT may decide that the control connection is dead and stop tracking it effectively breaking the connection and confusing the download The single HTTP connection is only idle between requests and it is normal and expected for such connections to be dropped after a time out br br br Software support br br br File managers br Many file managers tend to have FTP access implemented such as File Explorer formerly Windows Explorer on Microsoft Windows This client is only recommended for small file transfers from a server due to limitations compared to dedicated client software It does not support SFTP br Both the native file managers for KDE on Linux Dolphin and Konqueror support FTP as well as SFTP br br On Android the My Files file manager on Samsung Galaxy has a built in FTP and SFTP client br br br Web browser br For a long time most common web browsers were able to retrieve files hosted on FTP servers although not all of them had support for protocol extensions such as FTPS When an FTP rather than an HTTP URL is supplied the accessible contents on the remote server are presented in a manner that is similar to that used for other web content br Google Chrome removed FTP support entirely in Chrome also affecting other Chromium based browsers such as Microsoft Edge Firefox disabled FTP support by default with Firefox dropping support entirely br FireFTP is a discontinued browser extension that was designed as a full featured FTP client to be run within Firefox but when Firefox dropped support for FTP the extension developer recommended using Waterfox Some browsers such as the text based Lynx still support FTP br br br Syntax br FTP URL syntax is described in RFC taking the form ftp user password host port url path the bracketed parts are optional br For example the URL ftp public ftp servers example com mydirectory myfile txt represents the file myfile txt from the directory mydirectory on the server public ftp servers example com as an FTP resource The URL ftp user secretpassword private ftp servers example com mydirectory myfile txt adds a specification of the username and password that must be used to access this resource br More details on specifying a username and password may be found in the browsers documentation e g Firefox and Internet Explorer By default most web browsers use passive PASV mode which more easily traverses end user firewalls br Some variation has existed in how different browsers treat path resolution in cases where there is a non root home directory for a user br br br Download manager br Most common download managers can receive files hosted on FTP servers while some of them also give the interface to retrieve the files hosted on FTP servers DownloadStudio allows not only download a file from FTP server but also view the list of files on a FTP server br br br Other br LibreOffice declared its FTP support deprecated from release this was later removed in release br br br Security br FTP was not designed to be a secure protocol and has many security weaknesses In May the authors of RFC listed a vulnerability to the following problems br br Brute force attack br FTP bounce attack br Packet capture br Port stealing guessing the next open port and usurping a legitimate connection br Spoofing attack br Username enumeration br DoS or DDoS br FTP does not encrypt its traffic all transmissions are in clear text and usernames passwords commands and data can be read by anyone able to perform packet capture sniffing on the network This problem is common to many of the Internet Protocol specifications such as SMTP Telnet POP and IMAP that were designed prior to the creation of encryption mechanisms such as TLS or SSL br Common solutions to this problem include br br Using the secure versions of the insecure protocols e g FTPS instead of FTP and TelnetS instead of Telnet br Using a different more secure protocol that can handle the job e g SSH File Transfer Protocol or Secure Copy Protocol br Using a secure tunnel such as Secure Shell SSH or virtual private network VPN br br br FTP over SSH br FTP over SSH is the practice of tunneling a normal FTP session over a Secure Shell connection Because FTP uses multiple TCP connections unusual for a TCP IP protocol that is still in use it is particularly difficult to tunnel over SSH With many SSH clients attempting to set up a tunnel for the control channel the initial client to server connection on port will protect only that channel when data is transferred the FTP software at either end sets up new TCP connections data channels and thus have no confidentiality or integrity protection br Otherwise it is necessary for the SSH client software to have specific knowledge of the FTP protocol to monitor and rewrite FTP control channel messages and autonomously open new packet forwardings for FTP data channels Software packages that support this mode include br br Tectia ConnectSecure Win Linux Unix of SSH Communications Security s software suite br FTP over SSH should not be confused with SSH File Transfer Protocol SFTP br br br Derivatives br br br FTPS br br Explicit FTPS is an extension to the FTP standard that allows clients to request FTP sessions to be encrypted This is done by sending the AUTH TLS command The server has the option of allowing or denying connections that do not request TLS This protocol extension is defined in RFC Implicit FTPS is an outdated standard for FTP that required the use of a SSL or TLS connection It was specified to use different ports than plain FTP br br br SSH File Transfer Protocol br br The SSH file transfer protocol chronologically the second of the two protocols abbreviated SFTP transfers files and has a similar command set for users but uses the Secure Shell protocol SSH to transfer files Unlike FTP it encrypts both commands and data preventing passwords and sensitive information from being transmitted openly over the network It cannot interoperate with FTP software though some FTP client software offers support for the SSH file transfer protocol as well br br br Trivial File Transfer Protocol br br Trivial File Transfer Protocol TFTP is a simple lock step FTP that allows a client to get a file from or put a file onto a remote host One of its primary uses is in the early stages of booting from a local area network because TFTP is very simple to implement TFTP lacks security and most of the advanced features offered by more robust file transfer protocols such as File Transfer Protocol TFTP was first standardized in and the current specification for the protocol can be found in RFC br br br Simple File Transfer Protocol br Simple File Transfer Protocol the first protocol abbreviated SFTP as defined by RFC was proposed as an unsecured file transfer protocol with a level of complexity intermediate between TFTP and FTP It was never widely accepted on the Internet and is now assigned Historic status by the IETF It runs through port and often receives the initialism of SFTP It has a command set of commands and support three types of data transmission ASCII binary and continuous For systems with a word size that is a multiple of bits the implementation of binary and continuous is the same The protocol also supports login with user ID and password hierarchical folders and file management including rename delete upload download download with overwrite and download with append br br br FTP commands br br br FTP reply codes br br Below is a summary of FTP reply codes that may be returned by an FTP server These codes have been standardized in RFC by the IETF The reply code is a three digit value The first digit is used to indicate one of three possible outcomes success failure or to indicate an error or incomplete reply br br yz Success reply br yz or yz Failure reply br yz or yz Error or Incomplete reply br The second digit defines the kind of error br br x z Syntax These replies refer to syntax errors br x z Information Replies to requests for information br x z Connections Replies referring to the control and data connections br x z Authentication and accounting Replies for the login process and accounting procedures br x z Not defined br x z File system These replies relay status codes from the server file system br The third digit of the reply code is used to provide additional detail for each of the categories defined by the second digit br br br See also br br br br br br Further reading br RFC CWD Command of FTP July br RFC Standard File Transfer Protocol FTP J Postel J Reynolds October br RFC Informational Firewall Friendly FTP February br RFC Informational How to Use Anonymous FTP May br RFC FTP Operation Over Big Address Records FOOBAR June br RFC Uniform Resource Locators URL December br RFC Proposed Standard FTP Security Extensions October br RFC Proposed Standard Feature negotiation mechanism for the File Transfer Protocol August br RFC Proposed Standard Extensions for IPv NAT and Extended passive mode September br RFC Informational FTP Security Considerations May br RFC Proposed Standard Internationalization of the File Transfer Protocol July br RFC Proposed Standard Extensions to FTP P Hethmon March br RFC Proposed Standard FTP Command and Extension Registry March br RFC Proposed Standard File Transfer Protocol HOST Command for Virtual Hosts March br IANA FTP Commands and Extensions registry The official registry of FTP Commands and Extensions br br br External links br Communication Networks File Transfer Protocol at Wikibooks br FTP Server Online Tester Authentication encryption mode and connectivity br Anonymous FTP Servers by Country Code TLD Offbeat Internet Public Access FTP www jumpjet info Archived from the original on March Retrieved January 