title: Parsec (parser)
id: 44477327
Parsec is a library for writing parsers in Haskell It is based on higher order parser combinators so a complicated parser can be made out of many smaller ones It has been reimplemented in many other languages including br Erlang br Elixir br OCaml Racket and br F br as well as imperative languages such as br C and br Java br Because a parser combinator based program is generally slower than a parser generator based program Parsec is normally used for small domain specific languages while Happy is used for compilers such as GHC br Other Haskell parser combinator libraries that have been derived from Parsec include Megaparsec and Attoparsec br Parsec is free software released under the BSD Clause license br br br Example br Parsers written in Parsec start with simpler parsers such as ones that recognize certain strings and combine them to build a parser with more complicated behavior For example digit parses a digit and string parses a specific string like hello br br Parser combinator libraries like Parsec provide utility functions to run the parsers on real values A parser to recognize a single digit from a string can be split into two functions one to create the parser and a main function that calls one of these utility functions parse in this case to run the parser We define a Parser type to make the type signature of parser easier to read If we wanted to alter this program say to read either the string hello or the string goodbye we could use the operator provided by the Alternative typeclass to combine two parsers into a single parser that tries either br br br br br br External links br Parsec on the Haskell wiki br Parsec on Hackage