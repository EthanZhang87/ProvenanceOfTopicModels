title: Template Haskell
id: 514178
Template Haskell is an experimental language extension to the Haskell programming language implemented in the Glasgow Haskell Compiler version and later In early incarnations it was also known as Template Meta Haskell br It allows compile time metaprogramming and generative programming by means of manipulating abstract syntax trees and splicing results back into a program The abstract syntax is represented using ordinary Haskell data types and the manipulations are performed using ordinary Haskell functions br Quasi quote brackets and are used to get the abstract syntax tree for the enclosed expression and splice brackets and are used to convert from abstract syntax tree into code br As of GHC Template Haskell provides support for user defined quasi quoters which allows users to write parsers which can generate Haskell code from an arbitrary syntax This syntax is also enforced at compile time For example using a custom quasi quoter for regular expressions could look like this br br br Example br A common idiom is to quasi quote an expression perform some transformation on the expression and splice the result back into the program It could be written as br br br br br br External links br Template Haskell Wiki Page