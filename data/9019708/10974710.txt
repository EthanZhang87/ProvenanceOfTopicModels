title: Xmonad
id: 10974710
xmonad is a dynamic window manager tiling for the X Window System noted for being written in the functional programming language Haskell br br br Window manager br Begun in March version was announced in April as lines of Haskell which have since grown to lines xmonad is a tiling window manager akin to dwm larswm and StumpWM It arranges windows in a non overlapping pattern and enables managing windows without using the mouse xmonad is packaged and distributed on a wide range of Unix like operating systems such as a large number of Linux distributions and Berkeley Software Distribution BSD systems br While originally a clone of dwm derivative in areas such as default keybindings xmonad now supports features not available to dwm users such as per workspace layout tiling reflection state preservation layout mirroring GNOME support and per screen status bars it can be customised by modifying an external configuration file and reloaded while running xmonad features have begun to influence other tiling window managers dwm has borrowed urgency hooks from xmonad has also included Xinerama support for multihead displays with release and patches exist to reimplement xmonad s Fibonacci layout br br br Haskell project br br In the man page stated By utilising the expressivity of a modern functional language with a rich static type system xmonad provides a complete featureful window manager with an emphasis on correctness and robustness Internal properties of the window manager are checked using a combination of static guarantees provided by the type system and type based automated testing A benefit of this is that the code is simple to understand and easy to modify br Since xmonad s inception when its small code size of lines of code was advertised it has grown to ca lines in br Extensions to the core system including emulation of other window managers and unusual layout algorithms such as window tiling based on the Fibonacci spiral have been implemented by the active community and are available as a library br Along with obviating the need for a mouse the xmonad developers make heavy use of semi formal methods and program derivation for improving reliability and enabling a total line of code count less than as of version window manager properties such as the behavior of window focus are checked through use of QuickCheck This emphasis makes xmonad unusual in a number of ways besides being the first window manager written in Haskell it is also the first to use the zipper data structure for automatically managing focus and its core has been proven to be safe with respect to pattern matches contributing further to reliability The developers write br br xmonad is a tiling window manager for the X Window system implemented configured and dynamically extensible in Haskell This demonstration presents the case that software dominated by side effects can be developed with the precision and efficiency we expect from Haskell by utilising purely functional data structures an expressive type system extended static checking and property based testing In addition we describe the use of Haskell as an application configuration and extension language br The code is separated into side effect free code and a thin wrapper for the side effects According to Alejandro Serrano Mena there are two ways of implementing domain specific languages for actions in Haskell applications and libraries developing a combinator library or rolling your own monad with xmonad being a successful example of the latter br xmonad was regarded as one of the most well known Haskell projects in a functional programming book br br br Reception br Linux Magazine included xmonad in a list of My Top Resources of In How To Geek described xmonad as having good but complex ability to be configured and it was included in a list of eight desktop environments for Linux Lifehacker wrote that the basic operations of xmonad s user interface can be taught using a small set of instructions A high level of customisation and speed were noted by Network World and in MakeUseOf xmonad was reviewed positively compared to Openbox br In Ars Technica said xmonad and Awesome had more advanced tiling ability than Cinnamon In it was described as powerful with application as a windows manager for big data while in an article on opensource com on the other hand dwm was chosen over xmonad A TechRadar review of the Best Linux desktop of said If there s one desktop environment that stands out from all the others we have here it s this one br Due to the small number of lines of code of the Xmonad application the use of the purely functional programming language Haskell and recorded use of a rigorous testing procedure it is sometimes used as a baseline application in other research projects This has included re implementation of xmonad using the Coq proof assistant a determination xmonad is an imperative program and studies of package management relating to the NixOS linux distribution br br br See also br br Comparison of X window managers br Formal verification br br br br br br Works cited br br br Further reading br Lunduke Bryan Half a Decade of Linux y Shenanigans Bryan Lunduke p ISBN According to Bryan Lunduke xmonad is an unknown desktop environment written in an unknown programming language adding Are xmonad and Haskell failures Are they dead No Because they are unique They are customizable They are alive and kicking and awesome br Tucker Ronnie November Full Circle Magazine The Independent Magazine for the Ubuntu Linux Community Full Circle Full Circle Team via Google Books the use of xmonad and other lightweight window managers br br br External links br br Official website br Taste of Haskell O Reilly Open Source Convention OSCON presentation by Simon Peyton Jones on Haskell using xmonad as an example br First half of talk on YouTube video br Second half of talk on YouTube video 