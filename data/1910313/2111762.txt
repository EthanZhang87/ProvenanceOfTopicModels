title: Codebase
id: 2111762
In software development a codebase or code base is a collection of source code used to build a particular software system application or software component Typically a codebase includes only human written source code system files thus a codebase usually does not include source code files generated by tools generated files or binary library files object files as they can be built from the human written source code However it generally does include configuration and property files as they are the data necessary for the build br A codebase is typically stored in a source control repository in a version control system A source code repository is a place where large amounts of source code are kept either publicly or privately Source code repositories are used most basically for backups and versioning and on multi developer projects to handle various source code versions and to provide aid in resolving conflicts that arise from developers submitting overlapping modifications br Subversion Git and Mercurial are examples of popular tools used to handle this workflow which are common in open source projects br For smaller projects its code may be kept as a non managed set of files even the Linux kernel was maintained as a set of files for many years br br br Distinct and monolithic codebases br Multiple projects can have separate distinct codebases or can have a single shared or monolithic codebase This is particularly the case for related projects such as those developed within the same company In more detail a monolithic codebase typically entails a single repository all the code in one place and often a common build system or common libraries Whether the codebase is shared or split does not depend on the system architecture and actual build results thus a monolithic codebase which is related to the actual development does not entail a monolithic system which is related to software architecture or a single monolithic binary As a result a monolithic codebase may and for large codebases often will consist of separate components instead of carrying only a single system or single binary a distributed codebase with multiple components can be used to build a single monolithic system or even a single binary For example the Linux kernel is architecturally a single monolithic kernel but it consists of separate binaries loadable components and is developed in multiple distributed repositories br There are both advantages and disadvantages to a monolithic codebase when it is compared to a distributed codebase Most simply a monolithic codebase simplifies integration changes to different components or refactoring of code between components can be done easily and atomically and allows operations across the entire codebase but requires a larger repository and makes it easier to introduce wide ranging technical debt A separate codebase or a distributed codebase keeps individual repositories smaller and more manageable enforcing at the same time separation between components but it also requires integration between codebases or with the main repository and complicates changes that span multiple codebases br In terms of standards referring to multiple codebases as distinct declares that there are independent implementations without shared source code and that historically these implementations did not evolve from a common project This may be a way of demonstrating interoperability by showing two independent pieces of software that implement a given standard br br br Examples br Some notably large codebases include br br Google monolithic billion files million source code files billion lines of source code million commits in total TB total size January br Facebook monolithic GB repo GB including history hundreds of thousands of files br Linux kernel distributed over million lines of code as of and kernel version br br br See also br br br 