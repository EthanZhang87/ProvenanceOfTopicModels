title: Game engine
id: 170581
A game engine is a software framework primarily designed for the development of video games and generally includes relevant libraries and support programs such as a level editor The engine terminology is akin to the term software engine used more widely in the software industry br Game engine can also refer to the development software supporting this framework typically a suite of tools and features for developing games br Developers can use game engines to construct games for video game consoles and other types of computers The core functionality typically provided by a game engine may include a rendering engine renderer for D or D graphics a physics engine or collision detection and collision response sound scripting animation artificial intelligence networking streaming memory management threading localization support scene graph and video support for cinematics Game engine implementers often economize on the process of game development by reusing adapting in large part the same game engine to produce different games or to aid in porting games to multiple platforms br br br Purpose br br In many cases game engines provide a suite of visual development tools in addition to reusable software components These tools are generally provided in an integrated development environment to enable simplified rapid development of games in a data driven manner Game engine developers often attempt to preempt implementer needs by developing robust software suites which include many elements a game developer may need to build a game Most game engine suites provide facilities that ease development such as graphics sound physics and artificial intelligence AI functions These game engines are sometimes called middleware because as with the business sense of the term they provide a flexible and reusable software platform which provides all the core functionality needed right out of the box to develop a game application while reducing costs complexities and time to market all critical factors in the highly competitive video game industry br Like other types of middleware game engines usually provide platform abstraction allowing the same game to run on various platforms including game consoles and personal computers with few if any changes made to the game source code Often programmers design game engines with a component based architecture that allows specific systems in the engine to be replaced or extended with more specialized and often more expensive game middleware components Some game engines comprise a series of loosely connected game middleware components that can be selectively combined to create a custom engine instead of the more common approach of extending or customizing a flexible integrated product However achieved extensibility remains a high priority for game engines due to the wide variety of uses for which they are applied Despite the specificity of the name game engine end users often re purpose game engines for other kinds of interactive applications with real time graphical requirements such as marketing demos architectural visualizations training simulations and modeling environments br Some game engines only provide real time D rendering capabilities instead of the wide range of functionality needed by games These engines rely upon the game developer to implement the rest of this functionality or to assemble it from other game middleware components These types of engines are generally referred to as a graphics engine rendering engine or D engine instead of the more encompassing term game engine This terminology is inconsistently used as many full featured D game engines are referred to simply as D engines Examples of graphics engines include Crystal Space Genesis D Irrlicht OGRE RealmForge Truevision D and Vision Engine Modern game or graphics engines generally provide a scene graph an object oriented representation of the D game world which often simplifies game design and can be used for more efficient rendering of vast virtual worlds br As technology ages the components of an engine may become outdated or insufficient for the requirements of a given project Since the complexity of programming an entirely new engine may result in unwanted delays or necessitate that a project restart from the beginning an engine development team may elect to update their existing engine with newer functionality or components br br br History br br Before game engines games were typically written as singular entities a game for the Atari for example had to be designed from the bottom up to make optimal use of the display hardware this core display routine is today called the kernel by developers of games for older systems Other platforms had more leeway but even when the display was not a concern memory constraints usually sabotaged attempts to create the data heavy design that an engine needs Even on more accommodating platforms very little could be reused between games The rapid advance of arcade hardware which was the leading edge of the market at the time meant that most of the code would have to be thrown out afterwards anyway as later generations of games would use completely different game designs that took advantage of extra resources Thus most game designs through the s were designed through a hard coded rule set with a small number of levels and graphics data Since the golden age of arcade video games it became common for video game companies to develop in house game engines for use with first party software br A notable example of an in house game engine on home consoles in the mid s was the smooth side scrolling engine developed by Shigeru Miyamoto s team at Nintendo for the Nintendo Entertainment System NES The engine they had developed for the side scrolling racing game Excitebike was later employed for the scrolling platformer Super Mario Bros This had the effect of allowing Mario to smoothly accelerate from a walk to a run rather than move at a constant speed like in earlier platformers br While third party game engines were not common up until the rise of D computer graphics in the s there were several D game creation systems produced in the s for independent video game development These include Pinball Construction Set ASCII s War Game Construction Kit Thunder Force Construction Adventure Construction Set Garry Kitchen s GameMaker Wargame Construction Set Shoot Em Up Construction Kit Arcade Game Construction Kit and most popularly ASCII s RPG Maker engines from onward Klik Play is another legacy offering that is still available br The term game engine arose in the mid s especially in connection with D games such as first person shooters with a first person shooter engine Epic games founded by developer Tim Sweeney debuted Unreal Engine in the year br Such was the popularity of Id Software s Doom and Quake games that rather than work from scratch other developers licensed the core portions of the software and designed their own graphics characters weapons and levels the game content or game assets Separation of game specific rules and data from basic concepts like collision detection and game entity meant that teams could grow and specialize br Later games such as id Software s Quake III Arena and Epic Games s Unreal were designed with this approach in mind with the engine and content developed separately The practice of licensing such technology has proved to be a useful auxiliary revenue stream for some game developers as one license for a high end commercial game engine can range from US to millions of dollars and the number of licensees can reach several dozen companies as seen with the Unreal Engine At the very least reusable engines make developing game sequels faster and easier which is a valuable advantage in the competitive video game industry While there was a strong rivalry between Epic and id around since then Epic s Unreal Engine has been far more popular than id Tech and its successor id Tech br Modern game engines are some of the most complex applications written often featuring dozens of finely tuned systems interacting to ensure a precisely controlled user experience The continued evolution of game engines has created a strong separation between rendering scripting artwork and level design It is now common for example for a typical game development team to have several times as many artists as actual programmers br First person shooter games remain the predominant users of third party game engines but they are now also being used in other genres For example the role playing video game The Elder Scrolls III Morrowind and the MMORPG Dark Age of Camelot are based on the Gamebryo engine and the MMORPG Lineage II is based on the Unreal Engine Game engines are used for games originally developed for home consoles as well for example the RenderWare engine is used in the Grand Theft Auto and Burnout franchises br Threading is taking on more importance due to modern multi core systems e g Cell and increased demands in realism Typical threads involve rendering streaming audio and physics Racing games have typically been at the forefront of threading with the physics engine running in a separate thread long before other core subsystems were moved partly because rendering and related tasks need updating at only Hz For example on PlayStation physics ran in Need For Speed at Hz versus Forza Motorsport at Hz br Although the term was first used in the s there are a few earlier systems in the s that are also considered to be game engines such as Sierra s Adventure Game Interpreter AGI and SCI systems LucasArts SCUMM system and Incentive Software s Freescape engine in Unlike most modern game engines these game engines were never used in any third party products except for the SCUMM system which was licensed to and used by Humongous Entertainment br As game engine technology matures and becomes more user friendly the application of game engines has broadened in scope They are now being used for serious games visualization training medical and military simulation applications with the CryEngine being one example To facilitate this accessibility new hardware platforms are now being targeted by game engines including mobile phones e g Android phones iPhone and web browsers e g WebGL Shockwave Flash Trinigy s WebVision Silverlight Unity Web Player O D and pure DHTML br Additionally more game engines are being built upon higher level languages such as Java and C NET e g TorqueX and Visual D NET Python Panda D or Lua Script Leadwerks As most D rich games are now mostly GPU limited i e limited by the power of the graphics card the potential slowdown due to translation overheads of higher level languages becomes negligible while the productivity gains offered by these languages work to the game engine developers benefit These recent trends are being propelled by companies such as Microsoft to support indie game development Microsoft developed XNA as the SDK of choice for all video games released on Xbox and related products This includes the Xbox Live Indie Games channel designed specifically for smaller developers who do not have the extensive resources necessary to box games for sale on retail shelves It is becoming easier and cheaper than ever to develop game engines for platforms that support managed frameworks br br br Game engines as an industry br Producers of game engines decide how they allow users to utilize their products Just as gaming is an industry so are the engines they are built off The major game engines come at varying prices whether it be in the form of subscription fees or license payments Unity and the Unreal Engine are currently the two most popular choices for game developers Although the differences among the different game engines blur as they build their own tools on top of them different game developers may be too used to a system to change or attracted by the huge benefits of such engines regardless of pay walls br br br Game middleware br In the broader sense of the term game engines themselves can be described as middleware In the context of video games however the term middleware is often used to refer to subsystems of functionality within a game engine Some game middleware does only one thing but does it more convincingly or more efficiently than general purpose middleware br The four most widely used middleware packages that provide subsystems of functionality include RAD Game Tools Bink Firelight FMOD Havok and Scaleform GFx RAD Game Tools develops Bink for basic video rendering along with Miles audio and Granny D rendering Firelight FMOD is a low cost robust audio library and toolset Havok provides a robust physics simulation system along with a suite of animation and behavior applications Scaleform provides GFx for high performance Flash UI and high quality video playback and an Input Method Editor IME add on for in game Asian chat support br Other middleware is used for performance optimisation for example Simplygon helps to optimise and generate level of detail meshes and Umbra adds occlusion culling optimisations to d graphics br Some middleware contains full source code others just provide an API reference for a compiled binary library Some middleware programs can be licensed either way usually for a higher fee for full source code br br br See also br D computer graphics br Authoring system br Game physics br List of first person shooter engines br List of game engines br List of game middleware br Virtual studio br br br br br br External links br Media related to Game engines at Wikimedia Commons