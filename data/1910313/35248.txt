title: 2D computer graphics
id: 35248
 D computer graphics is the computer based generation of digital images mostly from two dimensional models such as D geometric models text and digital images and by techniques specific to them It may refer to the branch of computer science that comprises such techniques or to the models themselves br br D computer graphics are mainly used in applications that were originally developed upon traditional printing and drawing technologies such as typography cartography technical drawing advertising etc In those applications the two dimensional image is not just a representation of a real world object but an independent artifact with added semantic value two dimensional models are therefore preferred because they give more direct control of the image than D computer graphics whose approach is more akin to photography than to typography br In many domains such as desktop publishing engineering and business a description of a document based on D computer graphics techniques can be much smaller than the corresponding digital image often by a factor of or more This representation is also more flexible since it can be rendered at different resolutions to suit different output devices For these reasons documents and illustrations are often stored or transmitted as D graphic files br D computer graphics started in the s based on vector graphics devices These were largely supplanted by raster based devices in the following decades The PostScript language and the X Window System protocol were landmark developments in the field br D graphics models may combine geometric models also called vector graphics digital images also called raster graphics text to be typeset defined by content font style and size color position and orientation mathematical functions and equations and more These components can be modified and manipulated by two dimensional geometric transformations such as translation rotation and scaling br In object oriented graphics the image is described indirectly by an object endowed with a self rendering method a procedure that assigns colors to the image pixels by an arbitrary algorithm Complex models can be built by combining simpler objects in the paradigms of object oriented programming br br br Background geometry br br In Euclidean geometry a translation geometry moves every point a constant distance in a specified direction A translation can be described as a rigid motion other rigid motions include rotations and reflections A translation can also be interpreted as the addition of a constant vector to every point or as shifting the origin of the coordinate system A translation operator is an operator br br br br br T br br br br br br br br br displaystyle T mathbf delta br br such that br br br br br T br br br br br br br f br br br v br br br br f br br br v br br br br br br br br br br displaystyle T mathbf delta f mathbf v f mathbf v mathbf delta br br br If v is a fixed vector then the translation Tv will work as Tv p p v br If T is a translation then the image of a subset A under the function T is the translation of A by T The translation of A by Tv is often written A v br In a Euclidean space any translation is an isometry The set of all translations forms the translation group T which is isomorphic to the space itself and a normal subgroup of Euclidean group E n The quotient group of E n by T is isomorphic to the orthogonal group O n br br E n T O n br br br Translation br Since a translation is an affine transformation but not a linear transformation homogeneous coordinates are normally used to represent the translation operator by a matrix and thus to make it linear Thus we write the dimensional vector w wx wy wz using homogeneous coordinates as w wx wy wz br To translate an object by a vector v each homogeneous vector p written in homogeneous coordinates would need to be multiplied by this translation matrix br br br br br br T br br br v br br br br br br br br br br br br br br br br br br br br br v br br x br br br br br br br br br br br br br br br br br v br br y br br br br br br br br br br br br br br br br br v br br z br br br br br br br br br br br br br br br br br br br br br br br br br displaystyle T mathbf v begin bmatrix v x v y v z end bmatrix br br br As shown below the multiplication will give the expected result br br br br br br T br br br v br br br br br p br br br br br br br br br br br br br br br br br br br v br br x br br br br br br br br br br br br br br br br br v br br y br br br br br br br br br br br br br br br br br v br br z br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br p br br x br br br br br br br br p br br y br br br br br br br br p br br z br br br br br br br br br br br br br br br br br br br br br br p br br x br br br br br v br br x br br br br br br br br p br br y br br br br br v br br y br br br br br br br br p br br z br br br br br v br br z br br br br br br br br br br br br br br br br p br br br br v br br br br displaystyle T mathbf v mathbf p begin bmatrix v x v y v z end bmatrix begin bmatrix p x p y p z end bmatrix begin bmatrix p x v x p y v y p z v z end bmatrix mathbf p mathbf v br br br The inverse of a translation matrix can be obtained by reversing the direction of the vector br br br br br br T br br br v br br br br br br br br br br T br br br br v br br br br br br br br displaystyle T mathbf v T mathbf v br br br Similarly the product of translation matrices is given by adding the vectors br br br br br br T br br br u br br br br br T br br br v br br br br br br T br br br u br br br br v br br br br br br br br displaystyle T mathbf u T mathbf v T mathbf u mathbf v br br br Because addition of vectors is commutative multiplication of translation matrices is therefore also commutative unlike multiplication of arbitrary matrices br br br Rotation br In linear algebra a rotation matrix is a matrix that is used to perform a rotation in Euclidean space br br br br br R br br br br br br br br cos br br br br br br sin br br br br br br br sin br br br br br cos br br br br br br br br br br br displaystyle R begin bmatrix cos theta sin theta sin theta cos theta end bmatrix br br br rotates points in the xy Cartesian plane counterclockwise through an angle about the origin of the Cartesian coordinate system To perform the rotation using a rotation matrix R the position of each point must be represented by a column vector v containing the coordinates of the point A rotated vector is obtained by using the matrix multiplication Rv Since matrix multiplication has no effect on the zero vector i e on the coordinates of the origin rotation matrices can only be used to describe rotations about the origin of the coordinate system br Rotation matrices provide a simple algebraic description of such rotations and are used extensively for computations in geometry physics and computer graphics In dimensional space a rotation can be simply described by an angle of rotation but it can be also represented by the entries of a rotation matrix with rows and columns In dimensional space every rotation can be interpreted as a rotation by a given angle about a single fixed axis of rotation see Euler s rotation theorem and hence it can be simply described by an angle and a vector with entries However it can also be represented by the entries of a rotation matrix with rows and columns The notion of rotation is not commonly used in dimensions higher than there is a notion of a rotational displacement which can be represented by a matrix but no associated single axis or angle br Rotation matrices are square matrices with real entries More specifically they can be characterized as orthogonal matrices with determinant br br br br br br R br br T br br br br br R br br br br br br br det br R br br br br br br displaystyle R T R det R br br br The set of all such matrices of size n forms a group known as the special orthogonal group SO n br br br In two dimensions br br In two dimensions every rotation matrix has the following form br br br br br R br br br br br br br br br br br cos br br br br br br sin br br br br br br br sin br br br br br cos br br br br br br br br br br br displaystyle R theta begin bmatrix cos theta sin theta sin theta cos theta end bmatrix br br br This rotates column vectors by means of the following matrix multiplication br br br br br br br br br br br br x br br br br br br br br y br br br br br br br br br br br br br br br br cos br br br br br br sin br br br br br br br sin br br br br br cos br br br br br br br br br br br br br br br x br br br br br y br br br br br br br br br displaystyle begin bmatrix x y end bmatrix begin bmatrix cos theta sin theta sin theta cos theta end bmatrix begin bmatrix x y end bmatrix br br br So the coordinates x y of the point x y after rotation are br br br br br br x br br br br x br cos br br br br y br sin br br br br br br displaystyle x x cos theta y sin theta br br br br br br br br y br br br br x br sin br br br br y br cos br br br br br br displaystyle y x sin theta y cos theta br br br The direction of vector rotation is counterclockwise if is positive e g and clockwise if is negative e g br br br br br R br br br br br br br br br br br br cos br br br br br sin br br br br br br br br sin br br br br br cos br br br br br br br br br br br br displaystyle R theta begin bmatrix cos theta sin theta sin theta cos theta end bmatrix br br br br br Non standard orientation of the coordinate system br br If a standard right handed Cartesian coordinate system is used with the x axis to the right and the y axis up the rotation R is counterclockwise If a left handed Cartesian coordinate system is used with x directed to the right but y directed down R is clockwise Such non standard orientations are rarely used in mathematics but are common in D computer graphics which often have the origin in the top left corner and the y axis down the screen or page br See below for other alternative conventions which may change the sense of the rotation produced by a rotation matrix br br br Common rotations br Particularly useful are the matrices for and rotations br br br br br R br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br displaystyle R circ begin bmatrix pt end bmatrix br br counterclockwise rotation br br br br br R br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br displaystyle R circ begin bmatrix pt end bmatrix br br rotation in either direction a half turn br br br br br R br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br displaystyle R circ begin bmatrix pt end bmatrix br br counterclockwise rotation the same as a clockwise rotation br br br Scaling br br In Euclidean geometry uniform scaling isotropic scaling homogeneous dilation homothety is a linear transformation that enlarges increases or shrinks diminishes objects by a scale factor that is the same in all directions The result of uniform scaling is similar in the geometric sense to the original A scale factor of is normally allowed so that congruent shapes are also classed as similar Some school text books specifically exclude this possibility just as some exclude squares from being rectangles or circles from being ellipses br More general is scaling with a separate scale factor for each axis direction Non uniform scaling anisotropic scaling inhomogeneous dilation is obtained when at least one of the scaling factors is different from the others a special case is directional scaling or stretching in one direction Non uniform scaling changes the shape of the object e g a square may change into a rectangle or into a parallelogram if the sides of the square are not parallel to the scaling axes the angles between lines parallel to the axes are preserved but not all angles br A scaling can be represented by a scaling matrix To scale an object by a vector v vx vy vz each point p px py pz would need to be multiplied with this scaling matrix br br br br br br S br br v br br br br br br br br br br br v br br x br br br br br br br br br br br br br br br br br v br br y br br br br br br br br br br br br br br br br br v br br z br br br br br br br br br br br br displaystyle S v begin bmatrix v x v y v z end bmatrix br br br As shown below the multiplication will give the expected result br br br br br br S br br v br br br p br br br br br br br br br v br br x br br br br br br br br br br br br br br br br br v br br y br br br br br br br br br br br br br br br br br v br br z br br br br br br br br br br br br br br br br p br br x br br br br br br br br p br br y br br br br br br br br p br br z br br br br br br br br br br br br br br br br br v br br x br br br br p br br x br br br br br br br br v br br y br br br br p br br y br br br br br br br br v br br z br br br br p br br z br br br br br br br br br br br br displaystyle S v p begin bmatrix v x v y v z end bmatrix begin bmatrix p x p y p z end bmatrix begin bmatrix v x p x v y p y v z p z end bmatrix br br br Such a scaling changes the diameter of an object by a factor between the scale factors the area by a factor between the smallest and the largest product of two scale factors and the volume by the product of all three br The scaling is uniform if and only if the scaling factors are equal vx vy vz If all except one of the scale factors are equal to we have directional scaling br In the case where vx vy vz k the scaling is also called an enlargement or dilation by a factor k increasing the area by a factor of k and the volume by a factor of k br Scaling in the most general sense is any affine transformation with a diagonalizable matrix It includes the case that the three directions of scaling are not perpendicular It includes also the case that one or more scale factors are equal to zero projection and the case of one or more negative scale factors The latter corresponds to a combination of scaling proper and a kind of reflection along lines in a particular direction we take the reflection in the point of intersection with a plane that need not be perpendicular therefore it is more general than ordinary reflection in the plane br br br Using homogeneous coordinates br In projective geometry often used in computer graphics points are represented using homogeneous coordinates To scale an object by a vector v vx vy vz each homogeneous coordinate vector p px py pz would need to be multiplied with this projective transformation matrix br br br br br br S br br v br br br br br br br br br br br v br br x br br br br br br br br br br br br br br br br br br br br v br br y br br br br br br br br br br br br br br br br br br br br v br br z br br br br br br br br br br br br br br br br br br br br br br br br br br br br br displaystyle S v begin bmatrix v x v y v z end bmatrix br br br As shown below the multiplication will give the expected result br br br br br br S br br v br br br p br br br br br br br br br v br br x br br br br br br br br br br br br br br br br br br br br v br br y br br br br br br br br br br br br br br br br br br br br v br br z br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br p br br x br br br br br br br br p br br y br br br br br br br br p br br z br br br br br br br br br br br br br br br br br br br br br br v br br x br br br br p br br x br br br br br br br br v br br y br br br br p br br y br br br br br br br br v br br z br br br br p br br z br br br br br br br br br br br br br br br br br displaystyle S v p begin bmatrix v x v y v z end bmatrix begin bmatrix p x p y p z end bmatrix begin bmatrix v x p x v y p y v z p z end bmatrix br br br Since the last component of a homogeneous coordinate can be viewed as the denominator of the other three components a uniform scaling by a common factor s uniform scaling can be accomplished by using this scaling matrix br br br br br br S br br v br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br s br br br br br br br br br br br br displaystyle S v begin bmatrix frac s end bmatrix br br br For each vector p px py pz we would have br br br br br br S br br v br br br p br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br br s br br br br br br br br br br br br br br br br p br br x br br br br br br br br p br br y br br br br br br br br p br br z br br br br br br br br br br br br br br br br br br br br br br p br br x br br br br br br br br p br br y br br br br br br br br p br br z br br br br br br br br br br s br br br br br br br br br br br displaystyle S v p begin bmatrix frac s end bmatrix begin bmatrix p x p y p z end bmatrix begin bmatrix p x p y p z frac s end bmatrix br br br which would be homogenized to br br br br br br br br br br br s br br p br br x br br br br br br br s br br p br br y br br br br br br br s br br p br br z br br br br br br br br br br br br br br br br br displaystyle begin bmatrix sp x sp y sp z end bmatrix br br br br Techniques br br br Direct painting br A convenient way to create a complex image is to start with a blank canvas raster map an array of pixels also known as a bitmap filled with some uniform background color and then draw paint or paste simple patches of color onto it in an appropriate order In particular the canvas may be the frame buffer for a computer display br Some programs will set the pixel colors directly but most will rely on some D graphics library or the machine s graphics card which usually implement the following operations br br paste a given image at a specified offset onto the canvas br write a string of characters with a specified font at a given position and angle br paint a simple geometric shape such as a triangle defined by three corners or a circle with given center and radius br draw a line segment arc or simple curve with a virtual pen of given width br br br Extended color models br Text shapes and lines are rendered with a client specified color Many libraries and cards provide color gradients which are handy for the generation of smoothly varying backgrounds shadow effects etc See also Gouraud shading The pixel colors can also be taken from a texture e g a digital image thus emulating rub on screentones and the fabled checker paint which used to be available only in cartoons br Painting a pixel with a given color usually replaces its previous color However many systems support painting with transparent and translucent colors which only modify the previous pixel values br The two colors may also be combined in more complex ways e g by computing their bitwise exclusive or This technique is known as inverting color or color inversion and is often used in graphical user interfaces for highlighting rubber band drawing and other volatile painting since re painting the same shapes with the same color will restore the original pixel values br br br Layers br br The models used in D computer graphics usually do not provide for three dimensional shapes or three dimensional optical phenomena such as lighting shadows reflection refraction etc However they usually can model multiple layers conceptually of ink paper or film opaque translucent or transparent stacked in a specific order The ordering is usually defined by a single number the layer s depth or distance from the viewer br Layered models are sometimes called D computer graphics They make it possible to mimic traditional drafting and printing techniques based on film and paper such as cutting and pasting and allow the user to edit any layer without affecting the others For these reasons they are used in most graphics editors Layered models also allow better spatial anti aliasing of complex drawings and provide a sound model for certain techniques such as mitered joints and the even odd rule br Layered models are also used to allow the user to suppress unwanted information when viewing or printing a document e g roads or railways from a map certain process layers from an integrated circuit diagram or hand annotations from a business letter br In a layer based model the target image is produced by painting or pasting each layer in order of decreasing depth on the virtual canvas Conceptually each layer is first rendered on its own yielding a digital image with the desired resolution which is then painted over the canvas pixel by pixel Fully transparent parts of a layer need not be rendered of course The rendering and painting may be done in parallel i e each layer pixel may be painted on the canvas as soon as it is produced by the rendering procedure br Layers that consist of complex geometric objects such as text or polylines may be broken down into simpler elements characters or line segments respectively which are then painted as separate layers in some order However this solution may create undesirable aliasing artifacts wherever two elements overlap the same pixel br See also Portable Document Format Layers br br br Hardware br br Modern computer graphics card displays almost overwhelmingly use raster techniques dividing the screen into a rectangular grid of pixels due to the relatively low cost of raster based video hardware as compared with vector graphic hardware Most graphic hardware has internal support for blitting operations or sprite drawing A co processor dedicated to blitting is known as a Blitter chip br Classic D graphics chips and graphics processing units of the late s to s used in bit to early bit arcade games video game consoles and home computers include br br Atari Inc s TIA ANTIC CTIA and GTIA br Capcom s CPS A and CPS B br Commodore s OCS br MOS Technology s VIC and VIC II br Hudson Soft s Cynthia and HuC br NEC s PD and PD br Ricoh s PPU and S PPU br Sega s VDP Super Scaler and br Texas Instruments TMS br Yamaha s V V and YM VDP br br br Software br Many graphical user interfaces GUIs including macOS Microsoft Windows or the X Window System are primarily based on D graphical concepts Such software provides a visual environment for interacting with the computer and commonly includes some form of window manager to aid the user in conceptually distinguishing between different applications br The user interface within individual software applications is typically D in nature as well due in part to the fact that most common input devices such as the mouse are constrained to two dimensions of movement br D graphics are very important in the control peripherals such as printers plotters sheet cutting machines etc They were also used in most early video games and are still used for card and board games such as solitaire chess mahjongg etc br D graphics editors or drawing programs are application level software for the creation of images diagrams and illustrations by direct manipulation through the mouse graphics tablet or similar device of D computer graphics primitives These editors generally provide geometric primitives as well as digital images and some even support procedural models The illustration is usually represented internally as a layered model often with a hierarchical structure to make editing more convenient These editors generally output graphics files where the layers and primitives are separately preserved in their original form MacDraw introduced in with the Macintosh line of computers was an early example of this class recent examples are the commercial products Adobe Illustrator and CorelDRAW and the free editors such as xfig or Inkscape There are also many D graphics editors specialized for certain types of drawings such as electrical electronic and VLSI diagrams topographic maps computer fonts etc br Image editors are specialized for the manipulation of digital images mainly by means of free hand drawing painting and signal processing operations They typically use a direct painting paradigm where the user controls virtual pens brushes and other free hand artistic instruments to apply paint to a virtual canvas Some image editors support a multiple layer model however in order to support signal processing operations like blurring each layer is normally represented as a digital image Therefore any geometric primitives that are provided by the editor are immediately converted to pixels and painted onto the canvas The name raster graphics editor is sometimes used to contrast this approach to that of general editors which also handle vector graphics One of the first popular image editors was Apple s MacPaint companion to MacDraw Modern examples are the free GIMP editor and the commercial products Photoshop and Paint Shop Pro This class too includes many specialized editors for medicine remote sensing digital photography etc br br br Developmental animation br With the resurgence of D animation free and proprietary software packages have become widely available for amateurs and professional animators With software like RETAS UbiArt Framework and Adobe After Effects coloring and compositing can be done in less time br Various approaches have been developed to aid and speed up the process of digital D animation For example by generating vector artwork in a tool like Adobe Flash an artist may employ software driven automatic coloring and in betweening br Programs like Blender or Adobe Substance allow the user to do either D animation D animation or combine both in its software allowing experimentation with multiple forms of animation br br br See also br br D br D computer graphics br Computer animation br CGI br Bit blit br Computer graphics br Graphic art software br Graphics br Image scaling br List of home computers by video hardware br Turtle graphics br Transparency in graphics br Palette computing br Pixel art br br br 