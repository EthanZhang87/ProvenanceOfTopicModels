title: Filter design
id: 173371
Filter design is the process of designing a signal processing filter that satisfies a set of requirements some of which may be conflicting The purpose is to find a realization of the filter that meets each of the requirements to an acceptable degree br The filter design process can be described as an optimization problem Certain parts of the design process can be automated but an experienced designer may be needed to get a good result br The design of digital filters is a complex topic Although filters are easily understood and calculated the practical challenges of their design and implementation are significant and are the subject of advanced research br br br Typical design requirements br Typical requirements which may be considered in the design process are br br Frequency response br Phase shift or group delay br impulse response br Causal filter required br Stable filter required br Finite in duration impulse response required br Computational complexity br Technology br br br The frequency function br The required frequency response is an important parameter The steepness and complexity of the response curve determines the filter order and feasibility br A first order recursive filter will only have a single frequency dependent component This means that the slope of the frequency response is limited to dB per octave For many purposes this is not sufficient To achieve steeper slopes higher order filters are required br In relation to the desired frequency function there may also be an accompanying weighting function which describes for each frequency how important it is that the resulting frequency function approximates the desired one br Typical examples of frequency function are br br A low pass filter is used to cut unwanted high frequency signals br A high pass filter passes high frequencies fairly well it is helpful as a filter to cut any unwanted low frequency components br A band pass filter passes a limited range of frequencies br A band stop filter passes frequencies above and below a certain range A very narrow band stop filter is known as a notch filter br An all pass filter passes all frequencies equally in gain Only the phase shift is changed which also affects the group delay br A differentiator has an amplitude response proportional to the frequency br A low shelf filter passes all frequencies but increases or reduces frequencies below the shelf frequency by specified amount br A high shelf filter passes all frequencies but increases or reduces frequencies above the shelf frequency by specified amount br A peak EQ filter makes a peak or a dip in the frequency response commonly used in parametric equalizers br br br Phase and group delay br br An all pass filter passes through all frequencies unchanged but changes the phase of the signal Filters of this type can be used to equalize the group delay of recursive filters This filter is also used in phaser effects br A Hilbert transformer is a specific all pass filter that passes sinusoids with unchanged amplitude but shifts each sinusoid phase by br A fractional delay filter is an all pass that has a specified and constant group or phase delay for all frequencies br br br The impulse response br br There is a direct correspondence between the filter s frequency function and its impulse response the former is the Fourier transform of the latter That means that any requirement on the frequency function is a requirement on the impulse response and vice versa br However in certain applications it may be the filter s impulse response that is explicit and the design process then aims at producing as close an approximation as possible to the requested impulse response given all other requirements br In some cases it may even be relevant to consider a frequency function and impulse response of the filter which are chosen independently from each other For example we may want both a specific frequency function of the filter and that the resulting filter have a small effective width in the signal domain as possible The latter condition can be realized by considering a very narrow function as the wanted impulse response of the filter even though this function has no relation to the desired frequency function The goal of the design process is then to realize a filter which tries to meet both these contradicting design goals as much as possible An example is for high resolution audio in which the frequency response magnitude and phase for steady state signals sum of sinusoids is the primary filter requirement while an unconstrained impulse response may cause unexpected degradation due to time spreading of transient signals br br br Causality br Any filter operating in real time the filter response only depends on the current and past inputs must be causal If the design process yields a noncausal filter the resulting filter can be made causal by introducing an appropriate time shift or delay br Filters that do not operate in real time e g for image processing can be non causal Noncausal filters may be designed to have zero delay br br br Stability br A stable filter assures that every limited input signal produces a limited filter response A filter which does not meet this requirement may in some situations prove useless or even harmful Certain design approaches can guarantee stability for example by using only feed forward circuits such as an FIR filter On the other hand filters based on feedback circuits have other advantages and may therefore be preferred even if this class of filters includes unstable filters In this case the filters must be carefully designed in order to avoid instability br br br Locality br In certain applications we have to deal with signals which contain components which can be described as local phenomena for example pulses or steps which have certain time duration A consequence of applying a filter to a signal is in intuitive terms that the duration of the local phenomena is extended by the width of the filter This implies that it is sometimes important to keep the width of the filter s impulse response function as short as possible br According to the uncertainty relation of the Fourier transform the product of the width of the filter s impulse response function and the width of its frequency function must exceed a certain constant This means that any requirement on the filter s locality also implies a bound on its frequency function s width Consequently it may not be possible to simultaneously meet requirements on the locality of the filter s impulse response function as well as on its frequency function This is a typical example of contradicting requirements br br br Computational complexity br A general desire in any design is that the number of operations additions and multiplications needed to compute the filter response is as low as possible In certain applications this desire is a strict requirement for example due to limited computational resources limited power resources or limited time The last limitation is typical in real time applications br There are several ways in which a filter can have different computational complexity For example the order of a filter is more or less proportional to the number of operations This means that by choosing a low order filter the computation time can be reduced br For discrete filters the computational complexity is more or less proportional to the number of filter coefficients If the filter has many coefficients for example in the case of multidimensional signals such as tomography data it may be relevant to reduce the number of coefficients by removing those which are sufficiently close to zero In multirate filters the number of coefficients by taking advantage of its bandwidth limits where the input signal is downsampled e g to its critical frequency and upsampled after filtering br Another issue related to computational complexity is separability that is if and how a filter can be written as a convolution of two or more simpler filters In particular this issue is of importance for multidimensional filters e g D filter which are used in image processing In this case a significant reduction in computational complexity can be obtained if the filter can be separated as the convolution of one D filter in the horizontal direction and one D filter in the vertical direction A result of the filter design process may e g be to approximate some desired filter as a separable filter or as a sum of separable filters br br br Other considerations br It must also be decided how the filter is going to be implemented br br Analog filter br Analog sampled filter br Digital filter br Mechanical filter br br br Analog filters br The design of linear analog filters is for the most part covered in the linear filter section br br br Digital filters br Digital filters are classified into one of two basic forms according to how they respond to a unit impulse br br Finite impulse response or FIR filters express each output sample as a weighted sum of the last N input samples where N is the order of the filter FIR filters are normally non recursive meaning they do not use feedback and as such are inherently stable A moving average filter or CIC filter are examples of FIR filters that are normally recursive that use feedback If the FIR coefficients are symmetrical often the case then such a filter is linear phase so it delays signals of all frequencies equally which is important in many applications It is also straightforward to avoid overflow in an FIR filter The main disadvantage is that they may require significantly more processing and memory resources than cleverly designed IIR variants FIR filters are generally easier to design than IIR filters the Parks McClellan filter design algorithm based on the Remez algorithm is one suitable method for designing quite good filters semi automatically See Methodology br Infinite impulse response or IIR filters are the digital counterpart to analog filters Such a filter contains internal state and the output and the next internal state are determined by a linear combination of the previous inputs and outputs in other words they use feedback which FIR filters normally do not In theory the impulse response of such a filter never dies out completely hence the name IIR though in practice this is not true given the finite resolution of computer arithmetic IIR filters normally require less computing resources than an FIR filter of similar performance However due to the feedback high order IIR filters may have problems with instability arithmetic overflow and limit cycles and require careful design to avoid such pitfalls Additionally since the phase shift is inherently a non linear function of frequency the time delay through such a filter is frequency dependent which can be a problem in many situations nd order IIR filters are often called biquads and a common implementation of higher order filters is to cascade biquads A useful reference for computing biquad coefficients is the RBJ Audio EQ Cookbook br br br Sample rate br Unless the sample rate is fixed by some outside constraint selecting a suitable sample rate is an important design decision A high rate will require more in terms of computational resources but less in terms of anti aliasing filters Interference and beating with other signals in the system may also be an issue br br br Anti aliasing br For any digital filter design it is crucial to analyze and avoid aliasing effects Often this is done by adding analog anti aliasing filters at the input and output thus avoiding any frequency component above the Nyquist frequency The complexity i e steepness of such filters depends on the required signal to noise ratio and the ratio between the sampling rate and the highest frequency of the signal br br br Theoretical basis br Parts of the design problem relate to the fact that certain requirements are described in the frequency domain while others are expressed in the time domain and that these may conflict For example it is not possible to obtain a filter which has both an arbitrary impulse response and arbitrary frequency function Other effects which refer to relations between the time and frequency domain are br br The uncertainty principle between the time and frequency domains br The variance extension theorem br The asymptotic behaviour of one domain versus discontinuities in the other br br br The uncertainty principle br As stated by the Gabor limit an uncertainty principle the product of the width of the frequency function and the width of the impulse response cannot be smaller than a specific constant This implies that if a specific frequency function is requested corresponding to a specific frequency width the minimum width of the filter in the signal domain is set Vice versa if the maximum width of the response is given this determines the smallest possible width in the frequency br This is a typical example of contradictory requirements where the filter design process may try to find a useful compromise br br br The variance extension theorem br Let br br br br br br br s br br br br br br br br displaystyle sigma s br br be the variance of the input signal and let br br br br br br br f br br br br br br br br displaystyle sigma f br br be the variance of the filter The variance of the filter response br br br br br br br r br br br br br br br br displaystyle sigma r br br is then given by br br br br br br br br r br br br br br br br br displaystyle sigma r br br br br br br br br br s br br br br br br br br displaystyle sigma s br br br br br br br br br f br br br br br br br br displaystyle sigma f br br br This means that br br br br br br br r br br br br br br br f br br br br br displaystyle sigma r sigma f br br and implies that the localization of various features such as pulses or steps in the filter response is limited by the filter width in the signal domain If a precise localization is requested we need a filter of small width in the signal domain and via the uncertainty principle its width in the frequency domain cannot be arbitrary small br br br Discontinuities versus asymptotic behaviour br Let f t be a function and let br br br br F br br br br br br displaystyle F omega br br be its Fourier transform br There is a theorem which states that if the first derivative of F which is discontinuous has order br br br br n br br br br br displaystyle n geq br br then f has an asymptotic decay like br br br br br t br br br n br br br br br br br displaystyle t n br br br A consequence of this theorem is that the frequency function of a filter should be as smooth as possible to allow its impulse response to have a fast decay and thereby a short width br br br Methodology br One common method for designing FIR filters is the Parks McClellan filter design algorithm based on the Remez exchange algorithm Here the user specifies a desired frequency response a weighting function for errors from this response and a filter order N The algorithm then finds the set of N coefficients that minimize the maximum deviation from the ideal Intuitively this finds the filter that is as close as you can get to the desired response given that you can use only N coefficients This method is particularly easy in practice and at least one text includes a program that takes the desired filter and N and returns the optimum coefficients One possible drawback to filters designed this way is that they contain many small ripples in the passband s since such a filter minimizes the peak error br Another method to finding a discrete FIR filter is filter optimization described in Knutsson et al which minimizes the integral of the square of the error instead of its maximum value In its basic form this approach requires that an ideal frequency function of the filter br br br br br F br br I br br br br br br br br displaystyle F I omega br br is specified together with a frequency weighting function br br br br W br br br br br br displaystyle W omega br br and set of coordinates br br br br br x br br k br br br br br displaystyle x k br br in the signal domain where the filter coefficients are located br An error function br br br br br br br displaystyle varepsilon br br is defined as br br br br br br br br W br br br br F br br I br br br br br br F br br br br f br br br br br br br br br br br displaystyle varepsilon W cdot F I mathcal F f br br br where br br br br f br br x br br br br displaystyle f x br br is the discrete filter and br br br br br br F br br br br br displaystyle mathcal F br br is the discrete time Fourier transform defined on the specified set of coordinates The norm used here is formally the usual norm on br br br br br L br br br br br br br displaystyle L br br spaces This means that br br br br br br br displaystyle varepsilon br br measures the deviation between the requested frequency function of the filter br br br br br F br br I br br br br br displaystyle F I br br and the actual frequency function of the realized filter br br br br br br F br br br br f br br br br displaystyle mathcal F f br br However the deviation is also subject to the weighting function br br br br W br br br displaystyle W br br before the error function is computed br Once the error function is established the optimal filter is given by the coefficients br br br br f br br x br br br br displaystyle f x br br which minimize br br br br br br br displaystyle varepsilon br br This can be done by solving the corresponding least squares problem In practice the br br br br br L br br br br br br br displaystyle L br br norm has to be approximated by means of a suitable sum over discrete points in the frequency domain In general however these points should be significantly more than the number of coefficients in the signal domain to obtain a useful approximation br br br Simultaneous optimization in both domains br The previous method can be extended to include an additional error term related to a desired filter impulse response in the signal domain with a corresponding weighting function The ideal impulse response can be chosen independently of the ideal frequency function and is in practice used to limit the effective width and to remove ringing effects of the resulting filter in the signal domain This is done by choosing a narrow ideal filter impulse response function e g an impulse and a weighting function which grows fast with the distance from the origin e g the distance squared The optimal filter can still be calculated by solving a simple least squares problem and the resulting filter is then a compromise which has a total optimal fit to the ideal functions in both domains An important parameter is the relative strength of the two weighting functions which determines in which domain it is more important to have a good fit relative to the ideal function br br br See also br Digital filter br Prototype filter br Finite impulse response Filter design br br br br br A Antoniou Digital Filters Analysis Design and Applications ed McGraw Hill New York NY ISBN br A Antoniou Digital Signal Processing Signals Systems and Filters McGraw Hill New York NY ISBN br S W A Bergen A Antoniou Design of Nonrecursive Digital Filters Using the Ultraspherical Window Function EURASIP Journal on Applied Signal Processing Bibcode EJASP B doi ASP br A G Deczky October Synthesis of Recursive Digital Filters Using the Minimum p Error Criterion IEEE Trans Audio Electroacoustics AU doi TAU br J K Kaiser Nonrecursive Digital Filter Design Using the I sinh Window Function Proc IEEE Int Symp Circuit Theory ISCAS San Francisco CA pp br H Knutsson M Andersson J Wiklund June Advanced Filter Design Proc Scandinavian Symposium on Image Analysis Kangerlussuaq Greenland br S K Mitra Digital Signal Processing A Computer Based Approach McGraw Hill New York NY ISBN br A V Oppenheim R W Schafer J R Buck Discrete Time Signal Processing Prentice Hall Upper Saddle River NJ ISBN br T W Parks J H McClellan March Chebyshev Approximation for Nonrecursive Digital Filters with Linear Phase IEEE Trans Circuit Theory CT doi TCT br L R Rabiner J H McClellan T W Parks April FIR Digital Filter Design Techniques Using Weighted Chebyshev Approximation Proc IEEE doi PROC S CID br br br External links br An extensive list of filter design articles and software at Circuit Sage br A list of digital filter design software at dspGuru br Analog Filter Design Demystified br Yehar s digital sound processing tutorial for the braindead This paper explains simply between others topics filters design theory and give some examples