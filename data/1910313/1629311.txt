title: Iterative design
id: 1629311
Iterative design is a design methodology based on a cyclic process of prototyping testing analyzing and refining a product or process Based on the results of testing the most recent iteration of a design changes and refinements are made This process is intended to ultimately improve the quality and functionality of a design In iterative design interaction with the designed system is used as a form of research for informing and evolving a project as successive versions or iterations of a design are implemented br br br History br Iterative design has long been used in engineering fields One example is the plan do check act cycle implemented in the s Most New product development or existing product improvement programs have a checking loop which is used for iterative purposes DMAIC uses the Six Sigma framework and has such a checking function br br br Object Oriented Programming br Iterative design is connected with the practice of object oriented programming and the phrase appeared in computer science literature as early as The idea has its roots in spiral development conceived of by Barry Boehm br br br Iterative design process br The iterative design process may be applied throughout the new product development process However changes are easiest and less expensive to implement in the earliest stages of development The first step in the iterative design process is to develop a prototype The prototype should be evaluated by a focus group or a group not associated with the product in order to deliver non biased opinions Information from the focus group should be synthesized and incorporated into the next iteration of the design The process should be repeated until user issues have been reduced to an acceptable level br br br Application Human computer interfaces br Iterative design is commonly used in the development of human computer interfaces This allows designers to identify any usability issues that may arise in the user interface before it is put into wide use Even the best usability experts cannot design perfect user interfaces in a single attempt so a usability engineering lifecycle should be built around the concept of iteration br The typical steps of iterative design in user interfaces are as follows br br Complete an initial interface design br Present the design to several test users br Note any problems had by the test user br Refine interface to account for fix the problems br Repeat steps until user interface problems are resolved br Iterative design in user interfaces can be implemented in many ways One common method of using iterative design in computer software is software testing While this includes testing the product for functionality outside of the user interface important feedback on the interface can be gained from subject testing early versions of a program This allows software companies to release a better quality product to the public and prevents the need of product modification following its release br Iterative design in online website interfaces is a more continual process as website modification after it has been released to the user is far more viable than in software design Often websites use their users as test subjects for interface design making modifications based on recommendations from visitors to their sites br br br Iterative design use br Iterative design is a way of confronting the reality of unpredictable user needs and behaviors that can lead to sweeping and fundamental changes in a design User testing will often show that even carefully evaluated ideas will be inadequate when confronted with a user test Thus it is important that the flexibility of the iterative design s implementation approach extends as far into the system as possible Designers must further recognize that user testing results may suggest radical change that requires the designers to be prepared to completely abandon old ideas in favor of new ideas that are more equipped to suit user needs Iterative design applies in many fields from making knives to rockets As an example consider the design of an electronic circuit that must perform a certain task and must ultimately fit in a small space on a circuit board It is useful to split these independent tasks into two smaller and simpler tasks the functionality task and the space and weight task A breadboard is a useful way of implementing the electronic circuit on an interim basis without having to worry about space and weight br Once the circuit works improvements or incremental changes may be applied to the breadboard to increase or improve functionality over the original design When the design is finalized one can set about designing a proper circuit board meeting the space and weight criteria Compacting the circuit on the circuit board requires that the wires and components be juggled around without changing their electrical characteristics This juggling follows simpler rules than the design of the circuit itself and is often automated As far as possible off the shelf components are used but where necessary for space or performance reasons custom made components may be developed br Several instances of iterative design are as follows br br Wiki A wiki is a natural repository for iterative design The Page History facility allows tracking back to prior versions Modifications are mostly incremental and leave substantial parts of the text unchanged br Common law The principle of legal precedent builds on past experience This makes law a form of iterative design where there should be a clear audit trail of the development of legal thought br Evolution There is a parallel between iterative and the theory of natural Selection Both involve a trial and error process in which the most suitable design advances to the next generation while less suitable designs perish by the wayside Subsequent versions of a product should also get progressively better as its producers learn what works and what doesn t in a process of refinement and continual improvement br br br Fast prototyping tools br One approach to iterative design is to use the highest level of abstraction for developing an early generation product The principle here is that rapid development may not produce efficient code but obtaining feedback is more important than technology optimization Examples of this approach include use of non functional code object databases or low code platforms these allow quick testing of designs before issues of optimization are addressed br br br Benefits br When properly applied iterative design will ensure a product or process is the best solution possible When applied early in the development stage significant cost savings are possible br Other benefits to iterative design include br br Serious misunderstandings are made evident early in the lifecycle when it s possible to react to them br It enables and encourages user feedback so as to elicit the system s real requirements br Where the work is contracted Iterative Design provides an incremental method for more effectively involving the client in the complexities that often surround the design process br The development team is forced to focus on those issues that are most critical to the project and team members are shielded from those issues that distract and divert them from the project s real risks br Continual testing enables an objective assessment of the project s status br Inconsistencies among requirements designs and implementations are detected early br The workload of the team especially the testing team is spread out more evenly throughout the lifecycle br This approach enables the team to leverage lessons learned and therefore to continually improve the process br Stakeholders in the project can be given concrete evidence of the project s status throughout the lifecycle br br br Marshmallow Challenge br br The Marshmallow Challenge is an instructive design challenge It involves the task of constructing the highest possible free standing structure with a marshmallow on top The structure must be completed within minutes using only sticks of spaghetti one yard of tape and one yard of string br Observation and studies of participants show that kindergartners are regularly able to build higher structures in comparison to groups of business school graduates This is explained by the tendency for children to at once stick the marshmallow on top of a simple structure test the prototype and continue to improve upon it Whereas business school students tend to spend time vying for power planning and finally producing a structure to which the marshmallow is added The challenge helps to build and develop prototyping teamwork leadership and innovation skills and is a popular STEM activity The challenge was invented by Peter Skillman of Palm Inc and popularized by Tom Wujec of Autodesk br br br See also br Disruptive innovation br Extreme programming br Spiral model br Top down and bottom up design br Paper prototyping br Scrum software development br br br br br Boehm Barry W May A Spiral Model of Software Development and Enhancement Computer IEEE pp br Gould J D and Lewis C Designing for Usability Key Principles and What Designers Think Communications of the ACM March br Kruchten Philippe The Rational Unified Process An Introduction br Kruchten P From Waterfall to Iterative Development A Challenging Transition for Project Managers PDF White paper Rational Software Corporation Retrieved br br br External links br Iterative User Interface Design at useit com br Association for Computing Machinery br Marshmallow Challenge official website br TED video on Marshmallow Challenge br Classroom images of Marshmallow Challenge