title: Serial port
id: 77359
A serial port is a serial communication interface through which information transfers in or out sequentially one bit at a time This is in contrast to a parallel port which communicates multiple bits simultaneously in parallel Throughout most of the history of personal computers data has been transferred through serial ports to devices such as modems terminals various peripherals and directly between computers br While interfaces such as Ethernet FireWire and USB also send data as a serial stream the term serial port usually denotes hardware compliant with RS or a related standard such as RS or RS br Modern consumer personal computers PCs have largely replaced serial ports with higher speed standards primarily USB However serial ports are still frequently used in applications demanding simple low speed interfaces such as industrial automation systems scientific instruments point of sale systems and some industrial and consumer products br Server computers may use a serial port as a control console for diagnostics while networking hardware such as routers and switches commonly use serial console ports for configuration diagnostics and emergency maintenance access To interface with these and other devices USB to serial converters can quickly and easily add a serial port to a modern PC br br br Hardware br br Modern devices use an integrated circuit called a UART to implement a serial port This IC converts characters to and from asynchronous serial form implementing the timing and framing of data specified by the serial protocol in hardware The IBM PC implements its serial ports when present with one or more UARTs br Very low cost systems such as some early home computers would instead use the CPU to send the data through an output pin using the bit banging technique These early home computers often had proprietary serial ports with pinouts and voltage levels incompatible with RS br Before large scale integration LSI made UARTs common serial ports were commonly used in mainframes and minicomputers which would have multiple small scale integrated circuits to implement shift registers logic gates counters and all the other logic needed As PCs evolved serial ports were included in the Super I O chip and then in the chipset br br br DTE and DCE br The individual signals on a serial port are unidirectional and when connecting two devices the outputs of one device must be connected to the inputs of the other Devices are divided into two categories data terminal equipment DTE and data circuit terminating equipment DCE A line that is an output on a DTE device is an input on a DCE device and vice versa so a DCE device can be connected to a DTE device with a straight wired cable in which each pin on one end goes to the same numbered pin on the other end br Conventionally computers and terminals are DTE while peripherals such as modems are DCE If it is necessary to connect two DTE or DCE devices together a cable with reversed TX and RX lines known as a cross over roll over or null modem cable must be used br br br Gender br Generally serial port connectors are gendered only allowing connectors to mate with a connector of the opposite gender With D subminiature connectors the male connectors have protruding pins and female connectors have corresponding round sockets Either type of connector can be mounted on equipment or a panel or terminate a cable br Connectors mounted on DTE are likely to be male and those mounted on DCE are likely to be female with the cable connectors being the opposite However this is far from universal for instance most serial printers have a female DB connector but they are DTEs In this circumstance the appropriately gendered connectors on the cable or a gender changer can be used to correct the mismatch br br br Connectors br The only connector specified in the original RS standard was the pin D subminiature however many other connectors have been used to save money or save on physical space among other reasons In particular since many devices do not use all of the signals that are defined by the standard connectors with fewer pins are often used While specific examples follow countless other connectors have been used for RS connections br The pin DE connector has been used by most IBM compatible PCs since the Serial Parallel Adapter option for the PC AT where the pin connector allowed a serial and parallel port to fit on the same card This connector has been standardized for RS as TIA br Some miniaturized electronics particularly graphing calculators and hand held amateur and two way radio equipment have serial ports using a phone connector usually the smaller or mm connectors and the most basic wire interface transmit receive and ground br br P C connectors are also used in many devices The EIA TIA standard defines a pinout using this connector while the rollover cable or Yost standard is commonly used on Unix computers and network devices such as equipment from Cisco Systems br br Many models of Macintosh favor the related RS standard mostly using circular mini DIN connectors The Macintosh included a standard set of two ports for connection to a printer and a modem but some PowerBook laptops had only one combined port to save space br P C connectors can be found on some devices br Another common connector is a pin header common on motherboards and add in cards which is usually converted via a ribbon cable to the more standard pin DE connector and frequently mounted on a free slot plate or other part of the housing br br br Pinouts br The following table lists commonly used RS signals and pin assignments br br Signal Ground is a common return for the other connections it appears on two pins in the Yost standard but is the same signal The DB connector includes a second Protective Ground on pin which is intended to be connected by each device to its own frame ground or similar Connecting Protective Ground to Signal Ground is a common practice but not recommended br Note that EIA TIA combines DSR and RI and the Yost standard combines DSR and DCD br br br Hardware abstraction br Operating systems usually create symbolic names for the serial ports of a computer rather than requiring programs to refer to them by hardware address br Unix like operating systems usually label the serial port devices dev tty TTY is a common trademark free abbreviation for teletype a device commonly attached to early computers serial ports and represents a string identifying the specific port the syntax of that string depends on the operating system and the device On Linux UART hardware serial ports are named dev ttyS USB adapters appear as dev ttyUSB and various types of virtual serial ports do not necessarily have names starting with tty br The DOS and Windows environments refer to serial ports as COM ports COM COM etc br br br Common applications for serial ports br This list includes some of the more common devices that are connected to the serial port on a PC Some of these such as modems and serial mice are falling into disuse while others are readily available Serial ports are very common on most types of microcontroller where they can be used to communicate with a PC or other serial devices br br Since the control signals for a serial port can be driven by any digital signal some applications used the control lines of a serial port to monitor external devices without exchanging serial data A common commercial application of this principle was for some models of uninterruptible power supply which used the control lines to signal loss of power low battery and other status information At least some Morse code training software used a code key connected to the serial port to simulate actual code use the status bits of the serial port could be sampled very rapidly and at predictable times making it possible for the software to decipher Morse code br Serial computer mice may draw their operating power from the received data or control signals br br br Settings br br Serial standards provide for many different operating speeds as well as adjustments to the protocol to account for different operating conditions The most well known options are speed number of data bits per character parity and number of stop bits per character br In modern serial ports using a UART integrated circuit all these settings can be software controlled Hardware from the s and earlier may require setting switches or jumpers on a circuit board br The configuration for serial ports designed to be connected to a PC has become a de facto standard usually stated as N br br br Speed br Serial ports use two level binary signaling so the data rate in bits per second is equal to the symbol rate in baud The total speed includes bits for framing stop bits parity etc and so the effective data rate is lower than the bit transmission rate For example with N character framing only of the bits are available for data for every eight bits of data two more framing bits are sent br A standard series of rates is based on multiples of the rates for electromechanical teleprinters some serial ports allow many arbitrary rates to be selected but the speeds on both sides of the connection must match for data to be received correctly Bit rates commonly supported include and bit s Many of these standard modem baud rates are multiples of either kbps e g or kbps e g Crystal oscillators with a frequency of MHz are sold specifically for this purpose This is times the fastest bit rate and the serial port circuit can easily divide this down to lower frequencies as required br The capability to set a bit rate does not imply that a working connection will result Not all bit rates are possible with all serial ports Some special purpose protocols such as MIDI for musical instrument control use serial data rates other than the teleprinter standards Some serial port implementations can automatically choose a bit rate by observing what a connected device is sending and synchronizing to it br br br Data bits br The number of data bits in each character can be for Baudot code rarely used for true ASCII for most kinds of data as this size matches the size of a byte or rarely used data bits are almost universally used in newer applications or bits generally only make sense with older equipment such as teleprinters br Most serial communications designs send the data bits within each byte least significant bit first Also possible but rarely used is most significant bit first this was used for example by the IBM printing terminal The order of bits is not usually configurable within the serial port interface but is defined by the host system To communicate with systems that require a different bit ordering than the local default local software can re order the bits within each byte just before sending and just after receiving br br br Parity br br Parity is a method of detecting errors in transmission When parity is used with a serial port an extra data bit is sent with each data character arranged so that the number of bits in each character including the parity bit is always odd or always even If a byte is received with the wrong number of s then it must have been corrupted Correct parity does not necessarily indicate absence of corruption as a corrupted transmission with an even number of errors will pass the parity check A single parity bit does not allow implementation of error correction on each character and communication protocols working over serial data links will typically have higher level mechanisms to ensure data validity and request retransmission of data that has been incorrectly received br The parity bit in each character can be set to one of the following br br None N means that no parity bit is sent and the transmission is shortened br Odd O means that the parity bit is set so that the number of bits is odd br Even E means that the parity bit is set so that the number of bits is even br Mark M parity means that the parity bit is always set to the mark signal condition bit value br Space S parity always sends the parity bit in the space signal condition bit value br Aside from uncommon applications that use the last bit usually the th for some form of addressing or special signaling mark or space parity is uncommon as it adds no error detection information br Odd parity is more useful than even parity since it ensures that at least one state transition occurs in each character which makes it more reliable at detecting errors like those that could be caused by serial port speed mismatches The most common parity setting however is none with error detection handled by a communication protocol br To allow detection of messages damaged by line noise electromechanical teleprinters were arranged to print a special character when received data contained a parity error br br br Stop bits br Stop bits sent at the end of every character allow the receiving signal hardware to detect the end of a character and to resynchronize with the character stream Electronic devices usually use one stop bit If slow electromechanical teleprinters are used one and one half or two stop bits may be required br br br Conventional notation br The data parity stop D P S conventional notation specifies the framing of a serial connection The most common usage on microcomputers is N N This specifies data bits no parity stop bit In this notation the parity bit is not included in the data bits E E means that an even parity bit is added to the data bits for a total of bits between the start and stop bits br br br Flow control br Flow control is used in circumstances where a transmitter might be able to send data faster than the receiver is able to process it To cope with this serial lines often incorporate a handshaking method There are hardware and software handshaking methods br Hardware handshaking is done with extra signals often the RS RTS CTS or DTR DSR signal circuits RTS and CTS are used to control data flow signaling for instance when a buffer is almost full Per the RS standard and its successors DTR and DSR are used to signal that equipment is present and powered up so are usually asserted at all times However non standard implementations exist for example printers that use DTR as flow control br Software handshaking is done for example with ASCII control characters XON XOFF to control the flow of data The XON and XOFF characters are sent by the receiver to the sender to control when the sender will send data that is these characters go in the opposite direction to the data being sent The system starts in the sending allowed state When the receiver s buffers approach capacity the receiver sends the XOFF character to tell the sender to stop sending data Later after the receiver has emptied its buffers it sends an XON character to tell the sender to resume transmission It is an example of in band signaling where control information is sent over the same channel as its data br The advantage of hardware handshaking is that it can be extremely fast it works independently of imposed meaning such as ASCII on the transferred data and it is stateless Its disadvantage is that it requires more hardware and cabling and both ends of the connection must support the hardware handshaking protocol used br The advantage of software handshaking is that it can be done with absent or incompatible hardware handshaking circuits and cabling The disadvantage common to all in band control signaling is that it introduces complexities in ensuring that control messages get through even when data messages are blocked and data can never be mistaken for control signals The former is normally dealt with by the operating system or device driver the latter normally by ensuring that control codes are escaped such as in the Kermit protocol or omitted by design such as in ANSI terminal control br If no handshaking is employed an overrun receiver might simply fail to receive data from the transmitter Approaches for preventing this include reducing the speed of the connection so that the receiver can always keep up increasing the size of buffers so it can keep up averaged over a longer time using delays after time consuming operations e g in termcap or employing a mechanism to resend data which has not been received correctly e g TCP br br br See also br List of Bluetooth profiles Serial Port Profile SPP br Serial over LAN A mechanism that allows the serial port of a managed system to be redirected over IP br Teleprinter Device that motivated serial port development br Virtual COM port A software representation of a serial port br br br br br br Further reading br Serial Port Complete COM Ports USB Virtual COM Ports and Ports for Embedded Systems nd Edition Jan Axelson Lakeview Research pages ISBN br br br External links br br Media related to Serial port at Wikimedia Commons br RS and other serial port pinouts list