title: PS/2 port
id: 3266317
The PS port is a pin mini DIN connector used for connecting keyboards and mice to a PC compatible computer system Its name comes from the IBM Personal System series of personal computers with which it was introduced in The PS mouse connector generally replaced the older DE RS serial mouse connector while the PS keyboard connector replaced the larger pin DIN connector used in the IBM PC AT design The PS keyboard port is electrically and logically identical to the IBM AT keyboard port differing only in the type of electrical connector used The PS platform introduced a second port with the same design as the keyboard port for use to connect a mouse thus the PS style keyboard and mouse interfaces are electrically similar and employ the same communication protocol However unlike the otherwise similar Apple Desktop Bus connector used by Apple a given system s keyboard and mouse port may not be interchangeable since the two devices use different sets of commands and the device drivers generally are hard coded to communicate with each device at the address of the port that is conventionally assigned to that device That is keyboard drivers are written to use the first port and mouse drivers are written to use the second port br br br Communication protocol br Each port implements a bidirectional synchronous serial channel The channel is slightly asymmetrical it favors transmission from the input device to the computer which is the majority case The bidirectional IBM AT and PS keyboard interface is a development of the unidirectional IBM PC keyboard interface using the same signal lines but adding capability to send data back to the keyboard from the computer this explains the asymmetry br The interface has two main signal lines Data and Clock These are single ended signals driven by open collector drivers at each end Normally the transmission is from the device to the host To transmit a byte the device simply outputs a serial frame of data including bits of data and a parity bit on the Data line serially as it toggles the Clock line once for each bit The host controls the direction of communication using the Clock line when the host pulls it low communication from the attached device is inhibited The host can interrupt the device by pulling Clock low while the device is transmitting the device can detect this by Clock staying low when the device releases it to go high as the device generated clock signal toggles When the host pulls Clock low the device must immediately stop transmitting and release Clock and Data to both float high So far all of this is the same as the unidirectional communication protocol of the IBM PC keyboard port though the serial frame formats differ The host can use this state of the interface simply to inhibit the device from transmitting when the host is not ready to receive For the IBM PC keyboard port this was the only normal use of signalling from the computer to the keyboard The keyboard could not be commanded to retransmit a keyboard scan code after it had been sent since there was no reverse data channel to carry commands to the keyboard so the only way to avoid losing scan codes when the computer was too busy to receive them was to inhibit the keyboard from sending them until the computer was ready This mode of operation is still an option on the IBM AT and PS keyboard port br To send a byte of data back to the device the host pulls Clock low waits briefly pulls Data low and releases the Clock line again The device then generates a Clock signal while the host outputs a frame of bits on the Data line one bit per Clock pulse similar to what the attached device would do to transmit in the other direction However while device to host transmission reads bits on falling Clock edges transmission in the other direction reads bits on rising edges After the data byte the host releases the Data line and the device will pull the Data line low for one clock period to indicate successful reception A keyboard normally interprets the received byte as a command or a parameter for a preceding command The device will not attempt to transmit to the host until both Clock and Data have been high for a minimum period of time br Transmission from the device to the host is favored because from the normal idle state the device does not have to seize the channel before it can transmit the device just begins transmitting immediately In contrast the host must seize the channel by pulling first the Clock line and then the Data line low and waiting for the device to have time to release the channel and prepare to receive only then can the host begin to transmit data br br br Port availability br br Older laptops and some contemporary motherboards have a single port that supports either a keyboard or a mouse Sometimes the port also allows one of the devices to be connected to the two normally unused pins in the connector to allow both to be connected at once through a special splitter cable This configuration is common on IBM Lenovo Thinkpad notebooks among many others br The PS keyboard interface is electrically the same as the pin DIN connector on earlier AT keyboards and keyboards designed for one can be connected to the other with a simple wiring adapter Such wiring adapters and adapter cables were once commonly available for sale Note that IBM PC and PC XT keyboards use a different unidirectional protocol with the same DIN connector as AT keyboards so though a PC or XT keyboard can be connected to PS port using a wiring adapter intended for an AT keyboard the earlier keyboard will not work with the PS port At least it cannot work with normal PS keyboard driver software including the system BIOS keyboard driver br In contrast to this the PS mouse interface is substantially different from RS which was generally used for mice on PCs without PS ports but nonetheless many mice were made that could operate on both with a simple passive wiring adapter where the mice would detect the presence of the adapter based on its wiring and then switch protocols accordingly br PS mouse and keyboard connectors have also been used in non IBM PC compatible computer systems such as the DEC AlphaStation line early IBM RS CHRP machines and SGI Indy Indigo and newer Octane etc computers Macintosh clone computers based on the LPX logic board design featured PS mouse and keyboard ports including the Motorola StarMax and the Power Computing PowerBase br br br Legacy port status and USB br PS is now considered a legacy port with USB ports now normally preferred for connecting keyboards and mice This dates back at least as far as the Intel Microsoft PC specification of br However as of although PS ports are rarely included in off the shelf computer systems they continue to be included on some computer motherboards and are favored by some users for various reasons including the following br br PS ports may be favored for security reasons in a corporate environment as they allow USB ports to be totally disabled preventing the connection of any USB removable disks and malicious USB devices br The PS interface provides no restriction on key rollover although USB keyboards have no such restriction either unless operated in BOOT mode which is the exception br To free USB ports for other uses like removable USB devices br Some USB keyboards may not be able to operate the BIOS on certain motherboards due to driver issues or lack of support The PS interface has near universal compatibility with BIOS br br br Latency of mice br USB mice send data more quickly than PS mice because standard USB mice are polled at a default rate of hertz while standard PS mice send interrupts at a default rate of Hz when they have data to send to the computer However PS mice and keyboards are favored by many gamers because they essentially have zero latency through the port There is no polling needed by the OS The device notifies the OS when it s time to receive a packet of data from it br Also USB mice do not cause the USB controller to interrupt the system when they have no status change to report according to the USB HID specification s default profile for mice Both PS and USB allow the sample rate to be overridden with PS supporting a sampling rate of up to Hz and USB supporting a polling rate up to kHz as long as the mouse runs at full speed USB speeds or higher br br br USB key rollover limitations br The USB HID keyboard interface requires that it explicitly handle key rollover with the full HID keyboard class supporting n key rollover However the USB boot keyboard class designed to allow the BIOS to easily provide a keyboard in the absence of OS USB HID support only allows key rollover Some keyboard peripherals support only the latter class and some OSes may fail to switch to using the full HID keyboard class with a device after boot br br br Conversion between PS and USB br Many keyboards and mice were specifically designed to support both the USB and the PS interfaces and protocols selecting the appropriate connection type at power on Such devices are generally equipped with a USB connector and ship with a passive wiring adapter to allow connection to a PS port Such passive adapters are not standardized and may therefore be specific to the device they came with Connecting them to a PS port would require a protocol converter actively translating between the protocols Such adapters only support certain classes of USB devices such as keyboards and mice but are not model or vendor specific br Older PS only peripherals can be connected to a USB port via an active converter which generally provides a pair of PS ports which may be designated as one keyboard and one mouse even though both ports may support both protocols at the cost of one USB port on the host computer br br br Color code br br Original PS connectors were black or had the same color as the connecting cable mainly white Later the PC standard introduced a color code the keyboard port and the plugs on compliant keyboards were purple mouse ports and plugs were green Some vendors initially used a different color code Logitech used the color orange for the keyboard connector for a short period but soon switched to purple Today this code is still used on most PCs The pinouts of the connectors are the same but most computers will not recognize devices connected to the wrong port br br br Hardware issues br br br Hotplugging br PS ports are designed to connect the digital I O lines of the microcontroller in the external device directly to the digital lines of the microcontroller on the motherboard They are not designed to be hot swappable Hot swapping PS devices usually does not cause damage because more modern microcontrollers tend to have more robust I O lines built into them which are harder to damage than those of older controllers however hot swapping can still potentially cause damage on older machines or machines with less robust port implementations br If they are hot swapped the devices must be similar enough that the driver running on the host system recognizes and can be used with the new device Otherwise the new device will not function properly While this is seldom an issue with standard keyboard devices the host system rarely recognizes the new device attached to the PS mouse port In practice most keyboards can be hot swapped but this should be avoided br br br Durability br br PS connectors are not designed to be plugged in and out very often which can lead to bent or broken pins Additionally PS connectors only insert in one direction and must be rotated correctly before attempting connection If a user attempts to insert the connector in the wrong orientation and then tries to rotate it to the correct orientation without first pulling it out then bent pins could result br Most but not all connectors include an arrow or flat section which is usually aligned to the right or top of the jack before being plugged in The exact direction may vary on older or non ATX computers and care should be taken to avoid damaged or bent pins when connecting devices This issue is slightly alleviated in modern times with the advent of the PS to USB adapter users can just leave a PS connector plugged into the PS to USB adapter at all times and not risk damaging the pins this way A USB to PS adapter does not have this problem br br br Fault isolation br In a standard implementation both PS ports are usually controlled by a single microcontroller on the motherboard This makes design and manufacturing extremely simple and cheap However a rare side effect of this design is that a malfunctioning device can cause the controller to become confused resulting in both devices acting erratically A well designed and programmed controller will not behave in this way The resulting problems can be difficult to troubleshoot e g a bad mouse can cause problems that appear to be the fault of the keyboard and vice versa br br br See also br BIOS interrupt call br DIN connector on IBM PC keyboards br Bus mouse br Connections on mice br DE connector br USB br br br br br br External links br br Keyboard and Auxiliary Device Controller PDF Hardware Interface Technical Reference Common Technical IBM October br PS keyboard and mouse mini DIN connector pinouts Burton sys br PS In depth information Computer engineering archived from the original on September retrieved September br Technical information on Interfacing with the AT keyboard Beyond logic archived from the original on August retrieved March 