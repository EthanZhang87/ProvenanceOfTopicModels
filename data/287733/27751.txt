title: SVG
id: 27751
Scalable Vector Graphics SVG is an XML based vector image format for defining two dimensional graphics having support for interactivity and animation The SVG specification is an open standard developed by the World Wide Web Consortium since br SVG images are defined in a vector graphics format and stored in XML text files SVG images can thus be scaled in size without loss of quality and SVG files can be searched indexed scripted and compressed The XML text files can be created and edited with text editors or vector graphics editors and are rendered by most web browsers br Early adoption was limited due to lack of support in older versions of Internet Explorer However as of all major desktop browsers began to support SVG Native browser support offers various advantages such as not requiring plugins allowing SVG to be mixed with other content and improving rendering and scripting reliability Mobile support for SVG exists in various forms with different devices and browsers supporting SVG Tiny or SVG can be produced using vector graphics editors and rendered into raster formats In web based applications Inline SVG allows embedding SVG content within HTML documents br Despite its benefits SVG can pose security risks if used for images as it can host scripts or CSS potentially leading to cross site scripting attacks or other vulnerabilities br br br History br SVG has been in development within the World Wide Web Consortium W C since after six competing proposals for vector graphics languages had been submitted to the consortium during see below br The early SVG Working Group decided not to develop any of the commercial submissions but to create a new markup language that was informed by but not really based on any of them br SVG was developed by the W C SVG Working Group starting in after six competing vector graphics submissions were received that year br br Web Schematics from CCLRC br PGML from Adobe Systems IBM Netscape and Sun Microsystems br VML by Autodesk Hewlett Packard Macromedia Microsoft and Vision br Hyper Graphics Markup Language HGML by Orange UK and PRP br WebCGM from Boeing PTC InterCAP Graphics Systems Inso Corporation CCLRC and Xerox br DrawML from Excosoft AB br The working group was chaired at the time by Chris Lilley of the W C br The SVG specification was updated to version in Scalable Vector Graphics became a W C Candidate Recommendation on September SVG incorporates several new features in addition to those of SVG and SVG Tiny br br br Version x br SVG became a W C Recommendation on September br SVG became a W C Recommendation on January The SVG specification is modularized in order to allow subsets to be defined as profiles Apart from this there is very little difference between SVG and SVG br SVG Tiny and SVG Basic the Mobile SVG Profiles became W C Recommendations on January These are described as profiles of SVG br SVG Tiny became a W C Recommendation on December It was initially drafted as a profile of the planned SVG Full which has since been dropped in favor of SVG but was later refactored as a standalone specification It is generally poorly supported br SVG Second Edition which includes all the errata and clarifications but no new features to the original SVG was released on August br SVG Tiny Portable Secure a more secure subset of the SVG Tiny profile introduced as an IETF draft standard on July Also known as SVG Tiny P S SVG Tiny Portable Secure is a requirement of the BIMI draft standard br br br Version br SVG removes or deprecates some features of SVG and incorporates new features from HTML and Web Open Font Format br br For example SVG removes several font elements such as glyph and altGlyph replaced by the WOFF font format br The xml space attribute is deprecated in favor of CSS br HTML features such as translate and data attributes have been added br Text handling features from SVG Tiny are annotated as to be included but not yet formalized in text Some other features are cherry picked in but SVG is not a superset of SVG tiny in general br SVG reached the Candidate Recommendation stage on September and revised versions were published on August and October The latest draft was released on March br br br Features br br SVG supports interactivity animation and rich graphical capabilities making it suitable for both web and print applications SVG images can be compressed with the gzip algorithm resulting in SVGZ files that are typically smaller than the original SVG also supports metadata enabling better indexing searching and retrieval of SVG content br SVG allows three types of graphic objects vector graphic shapes such as paths consisting of straight lines and curves bitmap images and text Graphical objects can be grouped styled transformed and composited into previously rendered objects The feature set includes nested transformations clipping paths alpha masks filter effects and template objects SVG drawings can be interactive and can include animation defined in the SVG XML elements or via scripting that accesses the SVG Document Object Model DOM br SVG uses CSS for styling and JavaScript for scripting Text including internationalization and localization appearing in plain text within the SVG DOM enhances the accessibility of SVG graphics br br br Printing br Though the SVG Specification primarily focuses on vector graphics markup language its design includes the basic capabilities of a page description language like Adobe s PDF It contains provisions for rich graphics and is compatible with CSS for styling purposes SVG has the information needed to place each glyph and image in a chosen location on a printed page br br br Scripting and animation br br SVG drawings can be dynamic and interactive Time based modifications to the elements can be described in SMIL or can be programmed in a scripting language e g JavaScript The W C explicitly recommends SMIL as the standard for animation in SVG br A rich set of event handlers such as onmouseover and onclick can be assigned to any SVG graphical object to apply actions and events br br br Mobile profiles br Because of industry demand two mobile profiles were introduced with SVG SVG Tiny SVGT and SVG Basic SVGB br These are subsets of the full SVG standard mainly intended for user agents with limited capabilities In particular SVG Tiny was defined for highly restricted mobile devices such as cellphones it does not support styling or scripting SVG Basic was defined for higher level mobile devices such as smartphones br In the GPP an international telecommunications standards group adopted SVG Tiny as the mandatory vector graphics media format for next generation phones SVGT is the required vector graphics format and support of SVGB is optional for Multimedia Messaging Service MMS and Packet switched Streaming Service It was later added as required format for vector graphics in GPP IP Multimedia Subsystem IMS br Neither mobile profile includes support for the full Document Object Model DOM while only SVG Basic has optional support for scripting but because they are fully compatible subsets of the full standard most SVG graphics can still be rendered by devices which only support the mobile profiles br SVGT adds a microDOM DOM styling and scripting SVGT also includes some features not found in SVG including non scaling strokes which are supported by some SVG implementations such as Opera Firefox and WebKit As shared code bases between desktop and mobile browsers increased the use of SVG over SVGT also increased br br br Compression br SVG images being XML contain many repeated fragments of text so they are well suited for lossless data compression algorithms When an SVG image has been compressed with the gzip algorithm it is referred to as an SVGZ image and uses the corresponding svgz filename extension Conforming SVG viewers will display compressed images An SVGZ file is typically to percent of the original size W C provides SVGZ files to test for conformance br br br Design br The SVG specification defines functional areas or feature sets br br Paths br Simple or compound shape outlines are drawn with curved or straight lines that can be filled in outlined or used as a clipping path Paths have a compact coding br For example M for move to precedes initial numeric x and y coordinates and L for line to precedes a point to which a line should be drawn Further command letters C S Q T and A precede data that is used to draw various B zier and elliptical curves Z is used to close a path br In all cases absolute coordinates follow capital letter commands and relative coordinates are used after the equivalent lower case letters br Basic shapes br Straight line paths and paths made up of a series of connected straight line segments polylines as well as closed polygons circles and ellipses can be drawn Rectangles and round cornered rectangles are also standard elements br Text br Unicode character text included in an SVG file is expressed as XML character data Many visual effects are possible and the SVG specification automatically handles bidirectional text for composing a combination of English and Arabic text for example vertical text as Chinese or Japanese may be written and characters along a curved path such as the text around the edge of the Great Seal of the United States br Painting br SVG shapes can be filled and outlined painted with a color a gradient or a pattern Fills may be opaque or have any degree of transparency br Markers are line end features such as arrowheads or symbols that can appear at the vertices of a polygon br Color br Colors can be applied to all visible SVG elements either directly or via fill stroke and other properties Colors are specified in the same way as in CSS i e using names like black or blue in hexadecimal such as f or ff in decimal like rgb or as percentages of the form rgb br Gradients and patterns br SVG shapes can be filled or outlined with solid colors as above or with color gradients or with repeating patterns Color gradients can be linear or radial circular and can involve any number of colors as well as repeats Opacity gradients can also be specified Patterns are based on predefined raster or vector graphic objects which can be repeated in x and y directions Gradients and patterns can be animated and scripted br Since there has been discussion among professional users of SVG that either gradient meshes or preferably diffusion curves could usefully be added to the SVG specification It is said that a simple representation using diffusion curves is capable of representing even very subtle shading effects and that Diffusion curve images are comparable both in quality and coding efficiency with gradient meshes but are simpler to create according to several artists who have used both tools and can be captured from bitmaps fully automatically The current draft of SVG includes gradient meshes br Clipping masking and compositing br Graphic elements including text paths basic shapes and combinations of these can be used as outlines to define both inside and outside regions that can be painted with colors gradients and patterns independently Fully opaque clipping paths and semi transparent masks are composited together to calculate the color and opacity of every pixel of the final image using alpha blending br Filter effects br br A filter effect consists of a series of graphics operations that are applied to a given source vector graphic to produce a modified bitmapped result br Interactivity br SVG images can interact with users in many ways In addition to hyperlinks as mentioned below any part of an SVG image can be made receptive to user interface events such as changes in focus mouse clicks scrolling or zooming the image and other pointer keyboard and document events Event handlers may start stop or alter animations as well as trigger scripts in response to such events br Linking br SVG images can contain hyperlinks to other documents using XLink Through the use of the view element or a fragment identifier URLs can link to SVG files that change the visible area of the document This allows for creating specific view states that are used to zoom in out of a specific area or to limit the view to a specific element This is helpful when creating sprites XLink support in combination with the use element also allow linking to and re using internal and external elements This allows coders to do more with less markup and makes for cleaner code br Scripting br All aspects of an SVG document can be accessed and manipulated using scripts in a similar way to HTML The default scripting language is JavaScript and there are defined Document Object Model DOM objects for every SVG element and attribute Scripts are enclosed in script elements They can run in response to pointer events keyboard events and document events as required br Animation br br SVG content can be animated using the built in animation elements such as animate animateMotion and animateColor Content can be animated by manipulating the DOM using ECMAScript and the scripting language s built in timers SVG animation has been designed to be compatible with current and future versions of Synchronized Multimedia Integration Language SMIL Animations can be continuous they can loop and repeat and they can respond to user events as mentioned above br Fonts br As with HTML and CSS text in SVG may reference external font files such as system fonts If the required font files do not exist on the machine where the SVG file is rendered the text may not appear as intended To overcome this limitation text can be displayed in an SVG font where the required glyphs are defined in SVG as a font that is then referenced from the text element br Metadata br In accord with the W C s Semantic Web initiative SVG allows authors to provide metadata about SVG content The main facility is the metadata element where the document can be described using Dublin Core metadata properties e g title creator author subject description etc Other metadata schemas may also be used In addition SVG defines title and desc elements where authors may also provide plain text descriptive material within an SVG image to help indexing searching and retrieval by a number of means br An SVG document can define components including shapes gradients etc and use them repeatedly SVG images can also contain raster graphics such as PNG and JPEG images and further SVG images br br This code will produce the colored shapes shown in the image excluding the grid and labels br br br Implementation br The use of SVG on the web was limited by the lack of support in older versions of Internet Explorer IE Many websites that serve SVG images also provide the images in a raster format either automatically by HTTP content negotiation or by allowing the user directly to choose the file br br br Web browsers br Konqueror was the first browser to support SVG in release version in February As of all major desktop browsers and many minor ones have some level of SVG support Other browsers implementations are not yet complete see comparison of layout engines for further details br Some earlier versions of Firefox e g versions between and as well as a smattering of other now outdated web browsers capable of displaying SVG graphics needed them embedded in object or iframe elements to display them integrated as parts of an HTML webpage instead of using the standard way of integrating images with img However SVG images may be included in XHTML pages using XML namespaces br Tim Berners Lee the inventor of the World Wide Web was critical of early versions of Internet Explorer for its failure to support SVG br br Opera since has support for the SVG Tiny specification while Opera includes SVG Basic support and some of SVG Full Opera has partial SVG Tiny support It also supports SVGZ compressed SVG br Browsers based on the Gecko layout engine such as Firefox Flock Camino and SeaMonkey all have had incomplete support for the SVG Full specification since The Mozilla site has an overview of the modules which are supported in Firefox and of the modules which are in development Gecko included in Firefox adds support for more of the SVG specification including filters br Pale Moon which uses the Goanna layout engine a fork of the Gecko engine supports SVG br Browsers based on WebKit such as Apple s Safari Google Chrome and The Omni Group s OmniWeb have had incomplete support for the SVG Full specification since br Amaya has partial SVG support br Internet Explorer and older versions do not support SVG IE released March supports the basic SVG feature set IE extended SVG support by adding SVG filters br Microsoft Edge Legacy supports SVG br The Maxthon Cloud Browser also supports SVG br There are several advantages to native and full support plugins are not needed SVG can be freely mixed with other content in a single document and rendering and scripting become considerably more reliable br br br Mobile devices br Support for SVG may be limited to SVGT on older or more limited smart phones or may be primarily limited by their respective operating system Adobe Flash Lite has optionally supported SVG Tiny since version At the SVG Open conference Sun demonstrated a mobile implementation of SVG Tiny for the Connected Limited Device Configuration CLDC platform br Mobiles that use Opera Mobile as well as the iPhone s built in browser also include SVG support However even though it used the WebKit engine the Android built in browser did not support SVG prior to v Honeycomb Prior to v Firefox Mobile b beta for Android was the first browser running under Android to support SVG by default br The level of SVG Tiny support available varies from mobile to mobile depending on the SVG engine installed Many newer mobile products support additional features beyond SVG Tiny like gradient and opacity this is sometimes referred to as SVGT though there is no such standard br RIM s BlackBerry has built in support for SVG Tiny since version Support continues for WebKit based BlackBerry Torch browser in OS and br Nokia s S platform has built in support for SVG For example icons are generally rendered using the platform s SVG engine Nokia has also led the JSR Scalable D Vector Graphics API expert group that defines Java ME API for SVG presentation and manipulation This API has been implemented in S Platform rd Edition Feature Pack and onward Some Series phones also support SVG such as Nokia br Most Sony Ericsson phones beginning with K by release date support SVG Tiny Phones beginning with K also support such features as opacity and gradients Phones with Sony Ericsson Java Platform have support for JSR br Windows Phone has supported SVG since version br SVG is also supported on various mobile devices from Motorola Samsung LG and Siemens mobile BenQ Siemens eSVG an SVG rendering library mainly written for embedded devices is available on some mobile platforms br br br Authoring br SVG images can be produced by the use of a vector graphics editor such as Inkscape Adobe Illustrator Adobe Flash Professional or CorelDRAW and rendered to common raster image formats such as PNG using the same software Additionally editors like Inkscape and Boxy SVG provide tools to trace raster images to B zier curves typically using image tracing back ends like potrace autotrace and imagetracerjs br Software can be programmed to render SVG images by using a library such as librsvg used by GNOME since Batik and Thor Vector Graphics ThorVG since for lightweight systems SVG images can also be rendered to any desired popular image format by using ImageMagick a free command line utility which also uses librsvg under the hood br For web based applications the mode of usage termed Inline SVG allows SVG content to be embedded within an HTML document using an svg tag Its graphical capabilities can then be employed to create sophisticated user interfaces as the SVG and HTML share context event handling and CSS br Other uses for SVG include embedding for use in word processing e g with LibreOffice and desktop publishing e g Scribus plotting graphs e g gnuplot and importing paths e g for use in GIMP or Blender The application services Microsoft and Microsoft Office offer support for exporting importing and editing SVG images The Uniform Type Identifier for SVG used by Apple is public svg image and conforms to public image and public xml br br br Security br As a document format similar to HTML documents SVG can host script or CSS This is an issue when an attacker can upload a SVG file to a website such as a profile picture and the file is treated as a normal picture but contains malicious content For instance if an SVG file is deployed as a CSS background image or a logo on some website or in some image gallery then when the image is loaded in a browser it activates a script or other content This could lock up the browser the Billion laughs attack but could also lead to HTML injection and cross site scripting attacks The W C therefore stipulate certain requirements when SVG is simply used for images SVG Security br The W C says that Inline SVG an SVG file loaded natively on a website is considered less of a security risk because the content is part of a greater document and so scripting and CSS would not be unexpected br br br Related work br The MPEG Part standard Lightweight Application Scene Representation LASeR and Simple Aggregation Format SAF is based on SVG Tiny It was developed by MPEG ISO IEC JTC SC WG and published as ISO IEC SVG capabilities are enhanced in MPEG Part with key features for mobile services such as dynamic updates binary encoding state of art font representation SVG was also accommodated in MPEG Part in the Extensible MPEG Textual XMT format a textual representation of the MPEG multimedia content using XML br br br See also br br Canvas element br Comparison of graphics file formats br Comparison of raster to vector conversion software br Comparison of vector graphics editors br Computer graphics br Computer Graphics Metafile br Image file format br Resolution independence br br br br br br External links br br W C SVG page specifications list of implementations br W C SVG primer W C Primer draft under auspices of SVG Interest Group br MDN SVG Scalable Vector Graphics