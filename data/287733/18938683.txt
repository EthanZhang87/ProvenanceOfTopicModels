title: GNU General Public License
id: 18938683
The GNU General Public License GNU GPL or simply GPL is a series of widely used free software licenses or copyleft that guarantee end users the four freedoms to run study share and modify the software The license was the first copyleft for general use and was originally written by Richard Stallman the founder of the Free Software Foundation FSF for the GNU Project The license grants the recipients of a computer program the rights of the Free Software Definition The licenses in the GPL series are all copyleft licenses which means that any derivative work must be distributed under the same or equivalent license terms It is more restrictive than the Lesser General Public License and even further distinct from the more widely used permissive software licenses such as BSD MIT and Apache br Historically the GPL license family has been one of the most popular software licenses in the free and open source software FOSS domain Prominent free software programs licensed under the GPL include the Linux kernel and the GNU Compiler Collection GCC David A Wheeler argues that the copyleft provided by the GPL was crucial to the success of Linux based systems giving the programmers who contributed to the kernel the assurance that their work would benefit the whole world and remain free rather than being exploited by software companies that would not have to give anything back to the community br In the third version of the license GPLv was released to address some perceived problems with the second version GPLv which were discovered during the latter s long time usage br To keep the license current the GPL license includes an optional any later version clause allowing users to choose between the original terms or the terms in new versions as updated by the FSF Software projects licensed with the optional or later clause include the GNU Project while the Linux kernel for instance is licensed under GPLv only br The or any later version clause is sometimes known as a lifeboat clause since it allows combinations between different versions of GPL licensed software to maintain compatibility br br br History br The original GPL was written by Richard Stallman in for use with programs released as part of the GNU project It was based on a unification of similar licenses used for early versions of GNU Emacs the GNU Debugger and the GNU C Compiler These licenses contained similar provisions to the modern GPL but were specific to each program rendering them incompatible despite being the same license Stallman s goal was to produce one license that could be used for any project thus making it possible for many projects to share code br The second version of the license version was released in Over the following years members of the free software community became concerned over problems in the GPLv license that could let someone exploit GPL licensed software in ways contrary to the license s intent These problems included tivoization the inclusion of GPL licensed software in hardware that refuses to run modified versions of its software compatibility issues similar to those of the AGPL v and patent deals between Microsoft and distributors of free and open source software which some viewed as an attempt to use patents as a weapon against the free software community br Version was developed as an attempt to address these concerns and was officially released on June br br br Version br br Version of the GNU GPL released on February was written to protect against the two main methods by which software distributors restricted the freedoms that define free software The first problem was that distributors might publish only binary files that are executable but not readable or modifiable by humans To prevent this GPLv stated that copying and distributing copies of any portion of the program must also make the human readable source code available under the same licensing terms br The second problem was that distributors might add restrictions either to the license or by combining the software with other software that had other restrictions on distribution The union of two sets of restrictions would apply to the combined work thus adding unacceptable constrictions To prevent this GPLv stated that modified versions as a whole had to be distributed under the terms of GPLv Therefore software distributed under the terms of GPLv could be combined with software under more permissive terms as this would not change the terms under which the whole could be distributed However software distributed under GPLv could not be combined with software distributed under a more restrictive license as this would conflict with the requirement that the whole be distributable under the terms of GPLv br br br Version br br According to Richard Stallman the major change in GPLv was the Liberty or Death clause as he calls it Section The section says that licensees may distribute a GPL covered work only if they can satisfy all of the license s obligations despite any other legal obligations they might have In other words the obligations of the license may not be severed due to conflicting obligations This provision is intended to discourage any party from using a patent infringement claim or other litigation to impair users freedom under the license br By it was becoming apparent that a less restrictive license would be strategically useful for the C library and for software libraries that essentially did the job of existing proprietary ones when version of the GPL GPLv was released in June therefore a second license the GNU Library General Public License was introduced at the same time and numbered with version to show that both were complementary The version numbers diverged in when version of the LGPL was released which renamed it the GNU Lesser General Public License to reflect its place in the philosophy The GPLv was also modified to refer to the new name of the LGPL but its version number remained the same resulting in the original GPLv not being recognised by the Software Package Data Exchange SPDX br The license includes instructions to specify version of the License or at your option any later version to allow the flexible optional use of either version or but some developers change this to specify version only br br br Version br br In late the Free Software Foundation FSF announced work on version of the GPL GPLv On January the first discussion draft of GPLv was published and the public consultation began The public consultation was originally planned for nine to fifteen months but ultimately lasted eighteen months with four drafts being published The official GPLv was released by the FSF on June GPLv was written by Richard Stallman with legal counsel from Eben Moglen and Richard Fontana from the Software Freedom Law Center br According to Stallman the most important changes were in relation to software patents free software license compatibility the definition of source code and hardware restrictions on software modifications such as tivoization Other changes related to internationalization how license violations are handled and how additional permissions could be granted by the copyright holder The concept of software propagation as a term for the copying and duplication of software was explicitly defined br The public consultation process was coordinated by the Free Software Foundation with assistance from Software Freedom Law Center Free Software Foundation Europe and other free software groups Comments were collected from the public via the gplv fsf org web portal using purpose written software called stet br During the public consultation process comments were submitted for the first draft By the end of the comment period a total of comments had been submitted br The third draft was released on March This draft included language intended to prevent patent related agreements such as the controversial Microsoft Novell patent agreement and restricted the anti tivoization clauses to a legal definition of a user and a consumer product It also explicitly removed the section on Geographical Limitations the probable removal of this section having been announced at the launch of the public consultation br br The fourth discussion draft which was the last was released on May It introduced Apache License version compatibility prior versions are incompatible clarified the role of outside contractors and made an exception to avoid the perceived problems of a Microsoft Novell style agreement saying in Section paragraph that br br You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software under which you make payment to the third party based on the extent of your activity of conveying the work and under which the third party grants to any of the parties who would receive the covered work from you a discriminatory patent license br This aimed to make such future deals ineffective The license was also meant to cause Microsoft to extend the patent licenses it granted to Novell customers for the use of GPLv software to all users of that GPLv software this was possible only if Microsoft was legally a conveyor of the GPLv software br Early drafts of GPLv also let licensors add an AGPL like requirement that would have plugged the ASP loophole in the GPL As there were concerns expressed about the administrative costs of checking code for this additional requirement it was decided to keep the GPL and the AGPL license separated br Others notably some high profile Linux kernel developers such as Linus Torvalds Greg Kroah Hartman and Andrew Morton commented to the mass media and made public statements about their objections to parts of discussion drafts and The kernel developers referred to GPLv draft clauses regarding DRM Tivoization patents and additional restrictions and warned of a Balkanisation of the Open Source Universe Linus Torvalds who decided not to adopt the GPLv for the Linux kernel reiterated his criticism several years later br GPLv improved compatibility with several free software licenses such as the Apache License version and the GNU Affero General Public License which GPLv could not be combined with However GPLv software could only be combined and share code with GPLv software if the GPLv license used had the optional or later clause and the software was upgraded to GPLv While the GPLv or any later version clause is considered by FSF as the most common form of licensing GPLv software Toybox developer Rob Landley described it as a lifeboat clause Software projects licensed with the optional or later clause include the GNU Project while a prominent example without the clause is the Linux kernel br The final version of the license text was published on June br br br Terms and conditions br The terms and conditions of the GPL must be made available to anybody receiving a copy of a work that has a GPL applied to it the licensee Any licensee who adheres to the terms and conditions is given permission to modify the work as well as to copy and redistribute the work or any derivative version The licensee is allowed to charge a fee for this service or do this free of charge This latter point distinguishes the GPL from software licenses that prohibit commercial redistribution The FSF argues that free software should not place restrictions on commercial use and the GPL explicitly states that GPL works may be sold at any price br The GPL additionally states that a distributor may not impose further restrictions on the rights granted by the GPL This forbids activities such as distributing the software under a non disclosure agreement or contract br The fourth section for version of the license and the seventh section of version require that programs distributed as pre compiled binaries be accompanied by a copy of the source code a written offer to distribute the source code via the same mechanism as the pre compiled binary or the written offer to obtain the source code that the user got when they received the pre compiled binary under the GPL The second section of version and the fifth section of version also require giving all recipients a copy of this License along with the Program Version of the license allows making the source code available in additional ways in fulfillment of the seventh section These include downloading source code from an adjacent network server or by peer to peer transmission provided that is how the compiled code was available and there are clear directions on where to find the source code br The FSF does not hold the copyright for a work released under the GPL unless an author explicitly assigns copyrights to the FSF which seldom happens except for programs that are part of the GNU project Only the individual copyright holders have the authority to sue when a license violation is suspected br br br Use of licensed software br Software under the GPL may be run for all purposes including commercial purposes and even as a tool for creating proprietary software such as when using GPL licensed compilers Users or companies who distribute GPL licensed works e g software may charge a fee for copies or give them free of charge This distinguishes the GPL from shareware software licenses that allow copying for personal use but prohibit commercial distribution or proprietary licenses where copying is prohibited by copyright law The FSF argues that freedom respecting free software should also not restrict commercial use and distribution including redistribution br In purely private or internal use with no sales and no distribution the software code may be modified and parts reused without requiring the source code to be released For sales or distribution the entire source code needs to be made available to end users including any code changes and additions in that case copyleft is applied to ensure that end users retain the freedoms defined above br However software running as an application program under a GPL licensed operating system such as Linux is not required to be licensed under GPL or to be distributed with source code availability the licensing depends only on the used libraries and software components and not on the underlying platform For example if a program consists only of original source code or is combined with source code from other software components then the custom software components need not be licensed under GPL and need not make their source code available even if the underlying operating system used is licensed under the GPL applications running on it are not considered derivative works Only if GPL licensed parts are used in a program and the program is distributed then all other source code of the program needs to be made available under the same license terms The GNU Lesser General Public License LGPL was created to have a weaker copyleft than the GPL in that it does not require custom developed source code distinct from the LGPL licensed parts to be made available under the same license terms br The fifth section of version states that no GPL licensed code shall be considered an effective technical protection measure as defined by Article of the WIPO Copyright Treaty and that those who convey the work waive all legal power to prohibit circumvention of the technical protection measure to the extent such circumvention is effected by exercising rights under this License with respect to the covered work This means that users cannot be held liable for circumventing DRM implemented using GPLv licensed code under laws such as the U S Digital Millennium Copyright Act DMCA br br br Copyleft br br The distribution rights granted by the GPL for modified versions of the work are not unconditional When someone distributes a GPL licensed work plus their own modifications the requirements for distributing the whole work cannot be any greater than the requirements that are in the GPL br This requirement is known as copyleft It earns its legal power from the use of copyright on software programs Because a GPL work is copyrighted a licensee has no right to redistribute it not even in modified form barring fair use except under the terms of the license One is only required to adhere to the terms of the GPL if one wishes to exercise rights normally restricted by copyright law such as redistribution Conversely if one distributes copies of the work without abiding by the terms of the GPL for instance by keeping the source code secret they can be sued by the original author under copyright law br Copyright law has historically been used to prevent distribution of work by parties not authorized by the creator Copyleft uses the same copyright laws to accomplish a very different goal It grants rights to distribution to all parties insofar as they provide the same rights to subsequent ones and they to the next etc In this way the GPL and other copyleft licenses attempt to enforce libre access to the work and all derivatives br Many distributors of GPL licensed programs bundle the source code with the executables An alternative method of satisfying the copyleft is to provide a written offer to provide the source code on a physical medium such as a CD upon request In practice many GPL licensed programs are distributed over the Internet and the source code is made available over FTP or HTTP For Internet distribution this complies with the license br Copyleft applies only when a person seeks to redistribute the program Developers may make private modified versions with no obligation to divulge the modifications as long as they do not distribute the modified software to anyone else Copyleft applies only to the software and not to its output unless that output is itself a derivative work of the program For example a public web portal running a modified derivative of a GPL licensed content management system is not required to distribute its changes to the underlying software because the modified web portal is not being redistributed but rather hosted and also because the web portal output is also not a derivative work of the GPL licensed content management system br There has been debate on whether it is a violation of the GPLv to release the source code in obfuscated form such as in cases in which the author is less willing to make the source code available The consensus was that while unethical it was not considered a violation The issue was clarified when the license was altered with v to require that the preferred version of the source code be made available br br br License versus contract br The GPL was designed as a license rather than a contract In some Common Law jurisdictions the legal distinction between a license and a contract is an important one contracts are enforceable by contract law whereas licenses are enforced under copyright law However this distinction is not useful in the many jurisdictions where there are no differences between contracts and licenses such as Civil Law systems br Those who do not accept the GPL s terms and conditions do not have permission under copyright law to copy or distribute GPL licensed software or derivative works However if they do not redistribute the GPL licensed program they may still use the software within their organization however they like and works including programs constructed by the use of the program are not required to be covered by this license br Software developer Allison Randal argued that the GPLv as a license is unnecessarily confusing for lay readers and could be simplified while retaining the same conditions and legal force br In April a US federal court ruled that an open source license is an enforceable contract br In October SFC sued Vizio over breach of contract as an end user to request source code for Vizio s TVs a federal judge has ruled in the interim that the GPL is an enforceable contract by end users as well as a license for copyright holders br br br Derivations br The text of the GPL is itself copyrighted and the copyright is held by the Free Software Foundation br The FSF permits people to create new licenses based on the GPL as long as the derived licenses do not use the GPL preamble without permission This is discouraged however since such a license might be incompatible with the GPL and causes a perceived license proliferation br Other licenses created by the GNU project include the GNU Lesser General Public License GNU Free Documentation License and GNU Affero General Public License br The text of the GPL is not itself under the GPL The license s copyright disallows modification of the license Copying and distributing the license is allowed since the GPL requires recipients to get a copy of this License along with the Program According to the GPL FAQ anyone can make a new license using a modified version of the GPL as long as they use a different name for the license do not mention GNU and remove the preamble though the preamble can be used in a modified license if permission to use it is obtained from the Free Software Foundation FSF br br br Linking and derived works br br br Libraries br According to the FSF The GPL does not require you to release your modified version or any part of it You are free to make modifications and use them privately without ever releasing them However if one releases a GPL licensed entity to the public there is an issue regarding linking namely whether a proprietary program that uses a GPL library is in violation of the GPL br This key dispute is whether non GPL software can legally statically link or dynamically link to GPL libraries Different opinions exist on this issue The GPL is clear in requiring that all derivative works of code under the GPL must themselves be under the GPL Ambiguity arises with regard to using GPL libraries and bundling GPL software into a larger package perhaps mixed into a binary via static linking This is ultimately a question not of the GPL per se but of how copyright law defines derivative works The following points of view exist br br br Point of view dynamic and static linking violate GPL br The Free Software Foundation which holds the copyright of several notable GPL licensed software products and of the license text itself asserts that an executable that uses a dynamically linked library is indeed a derivative work This does not however apply to separate programs communicating with one another br The Free Software Foundation also created the LGPL which is nearly identical to the GPL but with additional permissions to allow linking for the purposes of using the library br Richard Stallman and the FSF specifically encourage library writers to license under the GPL so that proprietary programs cannot use the libraries in an effort to protect the free software world by giving it more tools than the proprietary world br br br Point of view static linking violates GPL but unclear as of dynamic linking br Some people believe that while static linking produces derivative works it is not clear whether an executable that dynamically links to a GPL code should be considered a derivative work see weak copyleft Linux author Linus Torvalds agrees that dynamic linking can create derived works but disagrees over the circumstances br A Novell lawyer has written that dynamic linking not being derivative makes sense but is not clear cut and that evidence for good intentioned dynamic linking can be seen by the existence of proprietary Linux kernel drivers br In Galoob v Nintendo the United States Ninth Circuit Court of Appeals defined a derivative work as having form or permanence and noted that the infringing work must incorporate a portion of the copyrighted work in some form but there have been no clear court decisions to resolve this particular conflict br br br Point of view linking is irrelevant br According to an article in the Linux Journal Lawrence Rosen a one time Open Source Initiative general counsel argues that the method of linking is mostly irrelevant to the question about whether a piece of software is a derivative work more important is the question about whether the software was intended to interface with client software and or libraries br He states The primary indication of whether a new program is a derivative work is whether the source code of the original program was used in a copy paste sense modified translated or otherwise changed in any way to create the new program If not then I would argue that it is not a derivative work and lists numerous other points regarding intent bundling and linkage mechanism br He further argues on his firm s website that such market based factors are more important than the linking technique br There is also the specific issue of whether a plugin or module such as the NVidia or ATI graphics card kernel modules must also be GPL if it could reasonably be considered its own work This point of view suggests that reasonably separate plugins or plugins for software designed to use plugins could be licensed under an arbitrary license if the work is GPLv Of particular interest is the GPLv paragraph br br You may modify your copy or copies of the Program or any portion of it thus forming a work based on the Program and copy and distribute such modifications or work under the terms of Section above provided that you also meet all of these conditions br b You must cause any work that you distribute or publish that in whole or in part contains or is derived from the Program or any part thereof to be licensed as a whole at no charge to all third parties under the terms of this License These requirements apply to the modified work as a whole If identifiable sections of that work are not derived from the Program and can be reasonably considered independent and separate works in themselves then this License and its terms do not apply to those sections when you distribute them as separate works But when you distribute the same sections as part of a whole which is a work based on the Program the distribution of the whole must be on the terms of this License whose permissions for other licensees extend to the entire whole and thus to each and every part regardless of who wrote it br br The GPLv has a different clause br br You may convey a work based on the Program or the modifications to produce it from the Program in the form of source code under the terms of Section provided that you also meet all of these conditions br c You must license the entire work as a whole under this License to anyone who comes into possession of a copy This License will therefore apply along with any applicable Section additional terms to the whole of the work and all its parts regardless of how they are packaged This License gives no permission to license the work in any other way but it does not invalidate such permission if you have separately received it A compilation of a covered work with other separate and independent works which are not by their nature extensions of the covered work and which are not combined with it such as to form a larger program in or on a volume of a storage or distribution medium is called an aggregate if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation s users beyond what the individual works permit Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate br br As a case study some supposedly proprietary plugins and themes skins for GPLv CMS software such as Drupal and WordPress have come under fire with both sides of the argument taken br The FSF differentiates on how the plugin is being invoked If the plugin is invoked through dynamic linkage and it performs function calls to the GPL program then it is most likely a derivative work br br br Communicating and bundling with non GPL programs br The mere act of communicating with other programs does not by itself require all software to be GPL nor does distributing GPL software with non GPL software However minor conditions must be followed that ensure the rights of GPL software are not restricted The following is a quote from the gnu org GPL FAQ which describes to what extent software is allowed to communicate with and be bundled with GPL programs br br What is the difference between an aggregate and other kinds of modified versions br An aggregate consists of a number of separate programs distributed together on the same CD ROM or other media The GPL permits you to create and distribute an aggregate even when the licenses of the other software are non free or GPL incompatible The only condition is that you cannot release the aggregate under a license that prohibits users from exercising rights that each program s individual license would grant them br Where s the line between two separate programs and one program with two parts This is a legal question which ultimately judges will decide We believe that a proper criterion depends both on the mechanism of communication exec pipes rpc function calls within a shared address space etc and the semantics of the communication what kinds of information are interchanged br If the modules are included in the same executable file they are definitely combined in one program If modules are designed to run linked together in a shared address space that almost surely means combining them into one program br By contrast pipes sockets and command line arguments are communication mechanisms normally used between two separate programs So when they are used for communication the modules normally are separate programs But if the semantics of the communication are intimate enough exchanging complex internal data structures that too could be a basis to consider the two parts as combined into a larger program br br The FSF thus draws the line between library and other program via complexity and intimacy of information exchange and mechanism rather than semantics but resigns that the question is not clear cut and that in complex situations case law will decide br br br Legal status online br br The first known violation of the GPL was in when NeXT extended the GCC compiler to support Objective C but did not publicly release the changes After an inquiry they created a public patch There was no lawsuit filed for this violation br In MySQL AB sued Progress NuSphere for copyright and trademark infringement in United States district court NuSphere had allegedly violated MySQL s copyright by linking MySQL s GPL licensed code with NuSphere Gemini table without complying with the license After a preliminary hearing before Judge Patti Saris on February the parties entered settlement talks and eventually settled After the hearing FSF commented that Judge Saris made clear that she sees the GNU GPL to be an enforceable and binding license br In August the SCO Group stated that they believed the GPL to have no legal validity and that they intended to pursue lawsuits over sections of code supposedly copied from SCO Unix into the Linux kernel This was a problematic stand for them as they had distributed Linux and other GPL licensed code in their Caldera OpenLinux distribution and there is little evidence that they had any legal right to do so except under the terms of the GPL In February after federal circuit court judgement appeal and the case being partially remanded to the circuit court the parties restated their remaining claims and provided a plan to move toward final judgement The remaining claims revolved around Project Monterey and were finally settled in November by IBM paying million to the TSG previously SCO bankruptcy trustee br In April the netfilter iptables project was granted a preliminary injunction against Sitecom Germany by Munich District Court after Sitecom refused to desist from distributing Netfilter s GPL licensed software in violation of the terms of the GPL Harald Welte of Netfilter was represented by ifrOSS co founder Till Jaeger In July the German court confirmed this injunction as a final ruling against Sitecom The court s justification was that br br Defendant has infringed on the copyright of the plaintiff by offering the software netfilter iptables for download and by advertising its distribution without adhering to the license conditions of the GPL Said actions would only be permissible if the defendant had a license grant This is independent of the questions whether the licensing conditions of the GPL have been effectively agreed upon between plaintiff and defendant or not If the GPL were not agreed upon by the parties defendant would notwithstanding lack the necessary rights to copy distribute and make the software netfilter iptables publicly available br This exactly mirrored the predictions given previously by the FSF s Eben Moglen This ruling was important because it was the first time that a court had confirmed that violating terms of the GPL could be a copyright violation and established jurisprudence as to the enforceability of the GPLv under German law br In May Daniel Wallace filed suit against the Free Software Foundation in the Southern District of Indiana contending that the GPL is an illegal attempt to fix prices at zero The suit was dismissed in March on the grounds that Wallace had failed to state a valid antitrust claim the court noted that the GPL encourages rather than discourages free competition and the distribution of computer operating systems the benefits of which directly pass to consumers Wallace was denied the possibility of further amending his complaint and was ordered to pay the FSF s legal expenses br On September the Seoul Central District Court ruled that the GPL was not material to a case dealing with trade secrets derived from GPL licensed work Defendants argued that since it is impossible to maintain trade secrets while being compliant with GPL and distributing the work they are not in breach of trade secrets This argument was considered without ground br On September the gpl violations org project prevailed in court litigation against D Link Germany GmbH regarding D Link s copyright infringing use of parts of the Linux kernel in storage devices they distributed The judgment stated that the GPL is valid legally binding and stands in a German court br In late the BusyBox developers and the Software Freedom Law Center embarked upon a program to gain GPL compliance from distributors of BusyBox in embedded systems suing those who would not comply These were claimed to be the first US uses of courts for enforcement of GPL obligations See BusyBox GPL lawsuits br On December the Free Software Foundation sued Cisco Systems Inc for copyright violations by its Linksys division of the FSF s GPL licensed coreutils readline Parted Wget GNU Compiler Collection binutils and GNU Debugger software packages which Linksys distributes in the Linux firmware of its WRT G wireless routers as well as numerous other devices including DSL and Cable modems Network Attached Storage devices Voice Over IP gateways virtual private network devices and a home theater media player device br After six years of repeated complaints to Cisco by the FSF claims by Cisco that they would correct or were correcting their compliance problems not providing complete copies of all source code and their modifications of repeated new violations being discovered and reported with more products and lack of action by Linksys a process described on the FSF blog as a five years running game of Whack a Mole the FSF took them to court br Cisco settled the case six months later by agreeing to appoint a Free Software Director for Linksys to ensure compliance to notify previous recipients of Linksys products containing FSF programs of their rights under the GPL to make source code of FSF programs freely available on its website and to make a monetary contribution to the FSF br In it was noticed that GNU Emacs had been accidentally releasing some binaries without corresponding source code for two years in opposition to the intended spirit of the GPL resulting in a copyright violation Richard Stallman described this incident as a very bad mistake which was promptly fixed The FSF did not sue any downstream redistributors who also unknowingly violated the GPL by distributing these binaries br In Artifex the maker of Ghostscript sued Hancom the maker of an office suite that included Ghostscript Artifex offers two licenses for Ghostscript one is the AGPL License and the other is a commercial license Hancom did not acquire a commercial license from Artifex nor did it release its office suite as free software Artifex sued Hancom in US District Court and made two claims First Hancom s use of Ghostscript was a violation of copyright and second Hancom s use of Ghostscript was a license violation Judge Jacqueline Scott Corley found the GPL license was an enforceable contract and Hancom was in breach of contract br On July the developers of the open source Stockfish chess engine sued ChessBase the creator of chess software for violating the GPLv license It was claimed that Chessbase had made only slight modifications to the Stockfish code and sold the new engines Fat Fritz and Houdini to their customers Additionally Fat Fritz was marketed as if it was an innovative engine ChessBase had infringed on the license by not distributing these products as Free Software in accordance with the GPL br A year later on November both parties reached an agreement and ended the dispute In the near future ChessBase will no longer sell products containing Stockfish code while informing their customers of this fact with an appropriate notice on their web pages However one year later Chessbase s license would be reinstated Stockfish did not seek damages or financial compensation br br br Compatibility and multi licensing br br Code licensed under several other licenses can be combined with a program under the GPL without conflict as long as the combination of restrictions on the work as a whole does not put any additional restrictions beyond what GPL allows In addition to the regular terms of the GPL there are additional restrictions and permissions one can apply br br If a user wants to combine code licensed under different versions of GPL then this is only allowed if the code with the earlier GPL version includes an or any later version statement For instance the GPLv licensed GNU LibreDWG library cannot be used anymore by LibreCAD and FreeCAD who have GPLv only dependencies br Code licensed under LGPL is permitted to be linked with any other code no matter what license that code has though the LGPL does add additional requirements for the combined work LGPLv and GPLv only can thus commonly not be linked as the combined Code work would add additional LGPLv requirements on top of the GPLv only licensed software Code licensed under LGPLv x without the any later version statement can be relicensed if the whole combined work is licensed to GPLv or GPLv br FSF maintains a list of GPL compatible free software licenses containing many of the most common free software licenses such as the original MIT X license the BSD license in its current clause form and the Artistic License br Starting from GPLv it is unilaterally compatible for materials like text and other media under Creative Commons Attribution ShareAlike International License to be remixed into the GPL licensed materials prominently software not vice versa for niche use cases like game engine GPL with game scripts CC BY SA br David A Wheeler has advocated that free open source software developers use only GPL compatible licenses because doing otherwise makes it difficult for others to participate and contribute code As a specific example of license incompatibility Sun Microsystems ZFS cannot be included in the GPL licensed Linux kernel because it is licensed under the GPL incompatible Common Development and Distribution License Furthermore ZFS is protected by patents so distributing an independently developed GPL ed implementation would still require Oracle s permission br A number of businesses use multi licensing to distribute a GPL version and sell a proprietary license to companies wishing to combine the package with proprietary code using dynamic linking or not Examples of such companies include MySQL AB Digia PLC Qt framework before from Nokia Red Hat Cygwin and Riverbank Computing PyQt Other companies like the Mozilla Foundation products include Mozilla Application Suite Mozilla Thunderbird and Mozilla Firefox used multi licensing to distribute versions under the GPL and some other open source licenses br br br Text and other media br It is possible to use the GPL for text documents instead of computer programs or more generally for all kinds of media if it is clear what constitutes the source code defined as the preferred form of the work for making changes in it For manuals and textbooks though the FSF recommends the GNU Free Documentation License GFDL instead which it created for this purpose Nevertheless the Debian developers recommended in a resolution adopted in to license documentation for their project under the GPL because of the incompatibility of the GFDL with the GPL text licensed under the GFDL cannot be incorporated into GPL software Also the FLOSS Manuals foundation an organization devoted to creating manuals for free software decided to eschew the GFDL in favor of the GPL for its texts in br If the GPL is used for computer fonts any documents or images made with such fonts might also have to be distributed under the terms of the GPL This is not the case in countries that recognize typefaces the appearance of fonts as being a useful article and thus not eligible for copyright but font files as copyrighted computer software which can complicate font embedding since the document could be considered linked to the font in other words embedding a vector font in a document could force it to be released under the GPL but a rasterized rendering of the font would not be subject to the GPL The FSF provides an exception for cases where this is not desired br br br Adoption br Historically the GPL license family has been one of the most popular software licenses in the FOSS domain br A survey of MetaLab then the largest free software archive showed that the GPL accounted for about half of the software licensed therein Similarly a survey of Red Hat Linux found that of the source code was licensed under the GPL As of about of all projects and of the open source industry certified licensed projects listed on SourceForge net were from the GPL license family As of August the GPL family accounted for of the free software projects listed on Freecode br After the release of the GPLv in June adoption of this new GPL version was much discussed and some projects decided against upgrading For instance the Linux kernel MySQL BusyBox AdvFS Blender VLC media player and MediaWiki decided against adopting GPLv br On the other hand in two years after the release of GPLv Google open source programs office manager Chris DiBona reported that the number of open source project licensed software that had moved from GPLv to GPLv was counting the projects hosted at Google Code br In four years after the release of the GPLv of all open source license projects are GPLv while are GPLv according to Black Duck Software data Following in Group analyst Matthew Aslett argued in a blog post that copyleft licenses went into decline and permissive licenses increased based on statistics from Black Duck Software Similarly in February Jon Buys reported that among the top projects on GitHub five projects were under a GPL license including dual licensed and AGPL projects br GPL usage statistics from to was extracted from Freecode data by Walter van Holst while analyzing license proliferation br br In August according to Black Duck Software the website s data shows that the GPL license family is used by of open source projects with a breakdown of the individual licenses shown in the following table However a later study in showed that software licensed under the GPL license family has increased and that even the data from Black Duck Software has shown a total increase of software projects licensed under GPL The study used public information gathered from repositories of the Debian Project and the study criticized Black Duck Software for not publishing their methodology used in collecting statistics Daniel German Professor in the Department of Computer Science at the University of Victoria in Canada presented a talk in about the methodological challenges in determining which are the most widely used free software licenses and showed how he could not replicate the result from Black Duck Software br In according to Black Duck GPLv lost its first position to the MIT license and is now second the GPLv dropped to fourth place while the Apache license kept its third position br br A March analysis of the GitHub repositories revealed for the GPL license family a usage percentage of approximately among licensed projects In June an analysis of Fedora Project s packages revealed the GNU GPLv or later as the most popular license and the GNU GPL family as the most popular license family followed by the MIT BSD and GNU LGPL families br An analysis of whitesourcesoftware com in April of the FOSS ecosystem saw the GPLv on third place and the GPLv on fourth place after MIT license and Apache license br br br Reception br br br Legal barrier to application stores br The GPL is incompatible with many application digital distribution systems like the Mac App Store and certain other software distribution platforms on smartphones as well as PCs The problem lies in the right to make a copy for your neighbour as this right is violated by digital rights management systems embedded within the platform to prevent copying of paid software Even if the application is free in the application store in question it might result in a violation of that application store s terms br There is a distinction between an app store which sells DRM restricted software under proprietary licenses and the more general concept of digital distribution via some form of online software repository Virtually all modern Unix systems and Linux distributions have application repositories including NetBSD FreeBSD Ubuntu Fedora and Debian These specific application repositories all contain GPL licensed software apps in some cases even when the core project does not permit GPL licensed code in the base system for instance OpenBSD In other cases such as the Ubuntu App Store proprietary commercial software applications and GPL licensed applications are both available via the same system the reason that the Mac App Store and similar projects is incompatible with GPL licensed apps is not inherent in the concept of an app store but is rather specifically due to Apple s terms of use requirement that all apps in the store utilize Apple DRM restrictions Ubuntu s app store does not demand any such requirement These terms do not limit or restrict your rights under any applicable open source software licenses br br br Microsoft br br In Microsoft CEO Steve Ballmer referred to Linux as a cancer that attaches itself in an intellectual property sense to everything it touches In response to Microsoft s attacks on the GPL several prominent Free Software developers and advocates released a joint statement supporting the license Microsoft has released Microsoft Windows Services for UNIX which contains GPL licensed code In July Microsoft itself released a body of around lines of Linux driver code under the GPL The Hyper V code that is part of the submitted code used open source components licensed under the GPL and was originally statically linked to proprietary binary parts the latter being inadmissible in GPL licensed software br br br Viral nature br The description of the GPL as viral when called General Public Virus or GNU Public Virus GPV dates back to a year after the GPLv was released br In the term received broader public attention when Craig Mundie Microsoft Senior Vice President described the GPL as being viral Mundie argues that the GPL has a viral effect in that it only allows the conveyance of whole programs which means programs that link to GPL libraries must themselves be under a GPL compatible license else they cannot be combined and distributed br In Richard Stallman responded in an interview that Mundie s metaphor of a virus is wrong as software under the GPL does not attack or infect other software Accordingly Stallman believes that comparing the GPL to a virus is inappropriate and that a better metaphor for software under the GPL would be a spider plant if one takes a piece of it and puts it somewhere else it grows there too br On the other hand the concept of a viral nature of the GPL was taken up by others later too For instance a article stated The GPL license is viral meaning any derivative work you create containing even the smallest portion of the previously GPL licensed software must also be licensed under the GPL license br br br Barrier to commercialization br br The FreeBSD project has stated that a less publicized and unintended use of the GPL is that it is very favorable to large companies that want to undercut software companies In other words the GPL is well suited for use as a marketing weapon potentially reducing overall economic benefit and contributing to monopolistic behavior and that the GPL can present a real problem for those wishing to commercialize and profit from software br Richard Stallman wrote about the practice of selling license exceptions to free software licenses as an example of ethically acceptable commercialization practice Selling exceptions here means that the copyright holder of a given software releases it along with the corresponding source code to the public under a free software license then lets customers pay for permission to use the same code under different terms for instance allowing its inclusion in proprietary applications Stallman considered selling exceptions acceptable since the s and on occasion I ve suggested it to companies Sometimes this approach has made it possible for important programs to become free software Although the FSF does not practice selling exceptions a comparison with the X license which is a non copyleft free software license is proposed for suggesting that this commercialization technique should be regarded as ethically acceptable Releasing a given program under a non copyleft free software license would permit embedding the code in proprietary software Stallman comments that either we have to conclude that it s wrong to release anything under the X license a conclusion I find unacceptably extreme or reject this implication Using a non copyleft license is weak and usually an inferior choice but it s not wrong In other words selling exceptions permits some embedding in proprietary software and the X license permits even more embedding If this doesn t make the X license unacceptable it doesn t make selling exceptions unacceptable br br br Open source criticism br In developer and author Nikolai Bezroukov published an analysis and comprehensive critique of GPL s foundations and Stallman s software development model called Labyrinth of Software Freedom br Version of the WTFPL Do What The Fuck You Want To Public License was created by Debian project leader Sam Hocevar in as a parody of the GPL br In open source software advocate Eric S Raymond questioned the relevance of GPL then for the FOSS ecosystem stating We don t need the GPL anymore It s based on the belief that open source software is weak and needs to be protected Open source would be succeeding faster if the GPL didn t make lots of people nervous about adopting it Richard Stallman replied GPL is designed to ensure that every user of a program gets the essential freedoms to run it to study and change the source code to redistribute copies and to publish modified versions Raymond addresses the issue in terms of different goals and values those of open source which do not include defending software users freedom to share and change software br In Allison Randal who took part in the GPL draft committee criticized the GPLv for being incompatible with the GPLv and for missing clarity in the formulation Similarly Whurley prophesied in the downfall of the GPL due to the lack of focus for the developers with GPLv which would drive them towards permissive licenses br In David Chisnall described in an InformIT article The Failure of the GPL the problems with the GPL among them incompatibility and complexity of the license text br In dtrace developer and Joyent CTO Bryan Cantrill called the copyleft GPL a Corporate Open Source Anti pattern by being anti collaborative and recommended instead permissive software licenses br br br GPLv criticism br Already in September in the draft process of the GPLv several high profile developers of the Linux kernel for instance Linus Torvalds Greg Kroah Hartman and Andrew Morton warned on a splitting of the FOSS community the release of GPLv portends the Balkanisation of the entire Open Source Universe upon which we rely br Similarly Benjamin Mako Hill argued in on the GPLv draft noting that a united collaborating community is more important than a single license br Following the GPLv release in some journalists and Toybox developer Rob Landley criticized that with the introduction of the GPLv the split between the open source and free software community became wider than ever As the significantly extended GPLv is essentially incompatible with the GPLv compatibility between both is only given under the optional or later clause of the GPL which was not taken for instance by the Linux kernel Bruce Byfield noted that before the release of the GPLv the GPLv was a unifying element between the open source and the free software community br For the LGPLv GNU TLS maintainer Nikos Mavrogiannopoulos similarly argued If we assume that its the LGPLv primary goal is to be used by free software then it blatantly fails that after he re licensed GNU TLS from LGPLv back to LGPLv due to license compatibility issues br Lawrence Rosen attorney and computer specialist praised in how the community using the Apache license was now able to work together with the GPL community in a compatible manner as the problems of GPLv compatibility with Apache licensed software were resolved with the GPLv He said I predict that one of the biggest success stories of GPLv will be the realization that the entire universe of free and open source software can thus be combined into comprehensive open source solutions for customers worldwide br In July Flask developer Armin Ronacher draws a less optimistic conclusion on the GPL compatibility in the FOSS ecosystem When the GPL is involved the complexities of licensing becomes a non fun version of a riddle also noting that the conflict between Apache License and GPLv still has impact on the ecosystem br br br See also br br Criticism of copyright br Multi licensing br European Union Public Licence EUPL br GPL font exception br GPL linking exception br Comparison of free and open source software licenses br Free software license br Category Software using the GPL license br Public information licence br br br Notes br br br br br br External links br br GNU General Public License version br GNU General Public License v This version is deprecated by the FSF but is still used by many software projects including Linux kernel and GNU packages br GNU General Public License v This version is deprecated by the FSF br The Emacs General Public License a February version a direct predecessor of the GNU GPL br History of the GPL by Li Cheng Tai July br A Practical Guide to GPL Compliance Covers GPLv and v from the Software Freedom Law Center br A paper on enforcing the GPL br Frequently Asked Questions about the GPL br GNU General Public License and Commentaries edited by Robert Chassell br List of presentation transcripts about the GPL and free software licenses Archived November at the Wayback Machine by the FSFE br The Labyrinth of Software Freedom BSD vs GPL and social aspects of free licensing debate by Nikolai Bezroukov