title: Gouraud shading
id: 55913
Gouraud shading goo ROH named after Henri Gouraud is an interpolation method used in computer graphics to produce continuous shading of surfaces represented by polygon meshes In practice Gouraud shading is most often used to achieve continuous lighting on triangle meshes by computing the lighting at the corners of each triangle and linearly interpolating the resulting colours for each pixel covered by the triangle Gouraud first published the technique in However enhanced hardware support for superior shading models has yielded Gouraud shading largely obsolete in modern rendering br br br Description br Gouraud shading works as follows An estimate to the surface normal of each vertex in a polygonal D model is either specified for each vertex or found by averaging the surface normals of the polygons that meet at each vertex Using these estimates lighting computations based on a reflection model e g the Phong reflection model are then performed to produce colour intensities at the vertices For each screen pixel that is covered by the polygonal mesh colour intensities can then be interpolated from the colour values calculated at the vertices br br br Comparison with other shading techniques br br Gouraud shading is considered superior to flat shading and requires significantly less processing than Phong shading but usually results in a faceted look br In comparison to Phong shading Gouraud shading s strength and weakness lies in its interpolation If a mesh covers more pixels in screen space than it has vertices interpolating colour values from samples of expensive lighting calculations at vertices is less processor intensive than performing the lighting calculation for each pixel as in Phong shading However highly localized lighting effects such as specular highlights e g the glint of reflected light on the surface of an apple will not be rendered correctly and if a highlight lies in the middle of a polygon but does not spread to the polygon s vertex it will not be apparent in a Gouraud rendering conversely if a highlight occurs at the vertex of a polygon it will be rendered correctly at this vertex as this is where the lighting model is applied but will be spread unnaturally across all neighboring polygons via the interpolation method br The problem is easily spotted in a rendering which ought to have a specular highlight moving smoothly across the surface of a model as it rotates Gouraud shading will instead produce a highlight continuously fading in and out across neighboring portions of the model peaking in intensity when the intended specular highlight aligns with a vertex of the model While this problem can be fixed by increasing the density of vertices in the object at some point the diminishing returns of this approach will favour switching to a more detailed shading model br br br br br br br br br br br br Linear vs hyperbolic interpolation br Gouraud s original paper described linear color interpolation In Blinn published an efficient algorithm for hyperbolic interpolation that is used in GPUs as a perspective correct alternative to linear interpolation Both the linear and hyperbolic variants of interpolation of colors from vertices to pixels are commonly called Gouraud shading br br br Mach bands br Any linear interpolation of intensity causes derivative discontinuities which triggers Mach bands a common visual artifact of Gouraud shading br br br See also br List of common shading algorithms br Blinn Phong reflection model br Phong shading br br br 