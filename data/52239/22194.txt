title: Operating system
id: 22194
An operating system OS is system software that manages computer hardware and software resources and provides common services for computer programs br Time sharing operating systems schedule tasks for efficient use of the system and may also include accounting software for cost allocation of processor time mass storage peripherals and other resources br For hardware functions such as input and output and memory allocation the operating system acts as an intermediary between programs and the computer hardware although the application code is usually executed directly by the hardware and frequently makes system calls to an OS function or is interrupted by it Operating systems are found on many devices that contain a computer from cellular phones and video game consoles to web servers and supercomputers br In the personal computer market as of September Microsoft Windows holds a dominant market share of around macOS by Apple Inc is in second place and the varieties of Linux are collectively in third place In the mobile sector including smartphones and tablets as of September Android s share is followed by Apple s iOS and iPadOS with and other operating systems with Linux distributions are dominant in the server and supercomputing sectors Other specialized classes of operating systems special purpose operating systems such as embedded and real time systems exist for many applications Security focused operating systems also exist Some operating systems have low system requirements e g light weight Linux distribution Others may have higher system requirements br Some operating systems require installation or may come pre installed with purchased computers OEM installation whereas others may run directly from media i e live CD or flash memory i e USB stick br br An operating system is difficult to define but has been called the layer of software that manages a computer s resources for its users and their applications Operating systems include the software that is always running called a kernel but can include other software as well The two other types of programs that can run on a computer are system programs which are associated with the operating system but may not be part of the kernel and applications all other software br There are three main purposes that an operating system fulfills br br Operating systems allocate resources between different applications deciding when they will receive central processing unit CPU time or space in memory On modern personal computers users often want to run several applications at once In order to ensure that one program cannot monopolize the computer s limited hardware resources the operating system gives each application a share of the resource either in time CPU or space memory The operating system also must isolate applications from each other to protect them from errors and security vulnerability is another application s code but enable communications between different applications br Operating systems provide an interface that abstracts the details of accessing hardware details such as physical memory to make things easier for programmers Virtualization also enables the operating system to mask limited hardware resources for example virtual memory can provide a program with the illusion of nearly unlimited memory that exceeds the computer s actual memory br Operating systems provide common services such as an interface for accessing network and disk devices This enables an application to be run on different hardware without needing to be rewritten Which services to include in an operating system varies greatly and this functionality makes up the great majority of code for most operating systems br br With multiprocessors multiple CPUs share memory A multicomputer or cluster computer has multiple CPUs each of which has its own memory Multicomputers were developed because large multiprocessors are difficult to engineer and prohibitively expensive they are universal in cloud computing because of the size of the machine needed The different CPUs often need to send and receive messages to each other to ensure good performance the operating systems for these machines need to minimize this copying of packets Newer systems are often multiqueue separating groups of users into separate queues to reduce the need for packet copying and support more concurrent users Another technique is remote direct memory access which enables each CPU to access memory belonging to other CPUs Multicomputer operating systems often support remote procedure calls where a CPU can call a procedure on another CPU or distributed shared memory in which the operating system uses virtualization to generate shared memory that does not actually exist br br A distributed system is a group of distinct networked computers each of which might have their own operating system and file system Unlike multicomputers they may be dispersed anywhere in the world Middleware an additional software layer between the operating system and applications is often used to improve consistency Although it functions similarly to an operating system it is not a true operating system br br Embedded operating systems are designed to be used in embedded computer systems whether they are internet of things objects or not connected to a network Embedded systems include many household appliances The distinguishing factor is that they do not load user installed software Consequently they do not need protection between different applications enabling simpler designs Very small operating systems might run in less than kilobytes and the smallest are for smart cards Examples include Embedded Linux QNX VxWorks and the extra small systems RIOT and TinyOS br br A real time operating system is an operating system that guarantees to process events or data by or at a specific moment in time Hard real time systems require exact timing and are common in manufacturing avionics military and other similar uses With soft real time systems the occasional missed event is acceptable this category often includes audio or multimedia systems as well as smartphones In order for hard real time systems be sufficiently exact in their timing often they are just a library with no protection between applications such as eCos br br A virtual machine is an operating system that runs as an application on top of another operating system The virtual machine is unaware that it is an application and operates as if it had its own hardware Virtual machines can be paused saved and resumed making them useful for operating systems research development and debugging They also enhance portability by enabling applications to be run on a computer even if they are not compatible with the base operating system br br Early computers were built to perform a series of single tasks like a calculator Basic operating system features were developed in the s such as resident monitor functions that could automatically run different programs in succession to speed up processing Operating systems did not exist in their modern and more complex forms until the early s Hardware features were added that enabled use of runtime libraries interrupts and parallel processing When personal computers became popular in the s operating systems were made for them similar in concept to those used on larger computers br In the s the earliest electronic digital systems had no operating systems Electronic systems of this time were programmed on rows of mechanical switches or by jumper wires on plugboards These were special purpose systems that for example generated ballistics tables for the military or controlled the printing of payroll checks from data on punched paper cards After programmable general purpose computers were invented machine languages consisting of strings of the binary digits and on punched paper tape were introduced that sped up the programming process Stern br br In the early s a computer could execute only one program at a time Each user had sole use of the computer for a limited period and would arrive at a scheduled time with their program and data on punched paper cards or punched tape The program would be loaded into the machine and the machine would be set to work until the program completed or crashed Programs could generally be debugged via a front panel using toggle switches and panel lights It is said that Alan Turing was a master of this on the early Manchester Mark machine and he was already deriving the primitive conception of an operating system from the principles of the universal Turing machine br Later machines came with libraries of programs which would be linked to a user s program to assist in operations such as input and output and compiling generating machine code from human readable symbolic code This was the genesis of the modern day operating system However machines still ran a single job at a time At Cambridge University in England the job queue was at one time a washing line clothesline from which tapes were hung with different colored clothes pegs to indicate job priority br By the late s programs that one would recognize as an operating system were beginning to appear Often pointed to as the earliest recognizable example is GM NAA I O released in on the IBM The first known example that actually referred to itself was the SHARE Operating System a development of GM NAA I O released in In a May paper describing the system George Ryckman noted br br The development of computer operating systems have materially aided the problem of getting a program or series of programs on and off the computer efficiently br One of the more famous examples that is often found in discussions of early systems is the Atlas Supervisor running on the Atlas in It was referred to as such in a December article describing the system but the context of the Operating System is more along the lines of the system operates in the fashion The Atlas team itself used the term supervisor which was widely used along with monitor Brinch Hansen described it as the most significant breakthrough in the history of operating systems br br Through the s many major features were pioneered in the field of operating systems on mainframe computers including batch processing input output interrupting buffering multitasking spooling runtime libraries link loading and programs for sorting records in files These features were included or not included in application software at the option of application programmers rather than in a separate operating system used by all applications In the SHARE Operating System was released as an integrated utility for the IBM and later in the and mainframes although it was quickly supplanted by IBSYS IBJOB on the and which in turn influenced the later PR and PR operating systems br During the s IBM s OS introduced the concept of a single OS spanning an entire product line which was crucial for the success of the System machines IBM s current mainframe operating systems are distant descendants of this original system and modern machines are backward compatible with applications written for OS br OS also pioneered the concept that the operating system keeps track of all of the system resources that are used including program and data space allocation in main memory and file space in secondary storage and file locking during updates When a process is terminated for any reason all of these resources are re claimed by the operating system br The alternative CP system for the S started a whole line of IBM operating systems focused on the concept of virtual machines Other operating systems used on IBM S series mainframes included systems developed by IBM DOS Disk Operating System TSS Time Sharing System TOS Tape Operating System BOS Basic Operating System and ACP Airline Control Program as well as a few non IBM systems MTS Michigan Terminal System MUSIC Multi User System for Interactive Computing and ORVYL Stanford Timesharing System br Control Data Corporation developed the SCOPE operating system in the s for batch processing In cooperation with the University of Minnesota the Kronos and later the NOS operating systems were developed during the s which supported simultaneous batch and timesharing use Like many commercial timesharing systems its interface was an extension of the Dartmouth BASIC operating systems one of the pioneering efforts in timesharing and programming languages In the late s Control Data and the University of Illinois developed the PLATO operating system which used plasma panel displays and long distance time sharing networks Plato was remarkably innovative for its time featuring real time chat and multi user graphical games br In Burroughs Corporation introduced the B with the MCP Master Control Program operating system The B was a stack machine designed to exclusively support high level languages with no assembler indeed the MCP was the first OS to be written exclusively in a high level language ESPOL a dialect of ALGOL MCP also introduced many other ground breaking innovations such as being the first commercial implementation of virtual memory MCP is still in use today in the Unisys company s MCP ClearPath line of computers br UNIVAC the first commercial computer manufacturer produced a series of EXEC operating systems Like all early main frame systems this batch oriented system managed magnetic drums disks card readers and line printers In the s UNIVAC produced the Real Time Basic RTB system to support large scale time sharing also patterned after the Dartmouth BC system br General Electric developed General Electric Comprehensive Operating Supervisor GECOS which primarily supported batch processing After its acquisition by Honeywell it was renamed General Comprehensive Operating System GCOS br Bell Labs General Electric and MIT developed Multiplexed Information and Computing Service Multics which introduced the concept of ringed security privilege levels br Digital Equipment Corporation developed many operating systems for its various computer lines including TOPS and TOPS time sharing systems for the bit PDP class systems Before the widespread use of UNIX TOPS was a particularly popular system in universities and in the early ARPANET community RT was a single user real time OS for the PDP class minicomputer and RSX was the corresponding multi user OS br From the late s through the late s several hardware capabilities evolved that allowed similar or ported software to run on more than one system Early systems had utilized microprogramming to implement features on their systems in order to permit different underlying computer architectures to appear to be the same as others in a series In fact most s after the except the and were microprogrammed implementations br The enormous investment in software for these systems made since the s caused most of the original computer manufacturers to continue to develop compatible operating systems along with the hardware Notable supported mainframe operating systems include br br Burroughs MCP B to Unisys Clearpath MCP present br IBM OS IBM System to IBM z OS present br IBM CP IBM System to IBM z VM present br UNIVAC EXEC UNIVAC to OS Unisys Clearpath Dorado present br br The earliest microcomputers lacked the capacity or requirement for the complex operating systems used in mainframes and minicomputers Instead they used minimalistic operating systems often loaded from ROM and referred to as monitors A significant early disk operating system was CP M widely supported across many early microcomputers Microsoft closely imitated CP M with its MS DOS which gained widespread popularity as the operating system for the IBM PC IBM s version was known as IBM DOS or PC DOS br In the Apple Computer introduced the Macintosh alongside its popular Apple II microcomputers The Mac had a graphical user interface controlled via mouse It ran an operating system later known as the classic Mac OS br The introduction of the Intel CPU chip in February with bit architecture and segmentation and the Intel CPU chip in October with bit architecture and paging capabilities provided personal computers with the ability to run multitasking operating systems like those of earlier superminicomputers and mainframes Microsoft responded to this progress by hiring Dave Cutler who had developed the VMS operating system for Digital Equipment Corporation He would lead the development of the Windows NT operating system which continues to serve as the basis for Microsoft s operating systems line Steve Jobs a co founder of Apple Inc started NeXT Computer Inc which developed the NeXTSTEP operating system NeXTSTEP would later be acquired by Apple Inc and used along with code from FreeBSD as the core of Mac OS X macOS after latest name change br The GNU Project was started by activist and programmer Richard Stallman with the goal of creating a complete free software replacement to the proprietary UNIX operating system While the project was highly successful in duplicating the functionality of various parts of UNIX development of the GNU Hurd kernel proved to be unproductive In Finnish computer science student Linus Torvalds with cooperation from volunteers collaborating over the Internet released the first version of the Linux kernel It was soon merged with the GNU user space components and system software to form a complete operating system commonly referred to as Linux br The Berkeley Software Distribution BSD is the UNIX derivative distributed by the University of California Berkeley starting in the s Freely distributed and ported to many minicomputers it eventually also gained a following for use on PCs mainly as FreeBSD NetBSD and OpenBSD br br Unix was originally written in assembly language Ken Thompson wrote B mainly based on BCPL based on his experience in the MULTICS project B was replaced by C and Unix rewritten in C developed into a large complex family of inter related operating systems which have been influential in every modern operating system see History br The Unix like family is a diverse group of operating systems with several major sub categories including System V BSD and Linux The name UNIX is a trademark of The Open Group which licenses it for use with any operating system that has been shown to conform to their definitions UNIX like is commonly used to refer to the large set of operating systems which resemble the original UNIX br Unix like systems run on a wide variety of computer architectures They are used heavily for servers in business as well as workstations in academic and engineering environments Free UNIX variants such as Linux and BSD are popular in these areas br Five operating systems are certified by The Open Group holder of the Unix trademark as Unix HP s HP UX and IBM s AIX are both descendants of the original System V Unix and are designed to run only on their respective vendor s hardware In contrast Sun Microsystems s Solaris can run on multiple types of hardware including x and SPARC servers and PCs Apple s macOS a replacement for Apple s earlier non Unix classic Mac OS is a hybrid kernel based BSD variant derived from NeXTSTEP Mach and FreeBSD IBM s z OS UNIX System Services includes a shell and utilities based on Mortice Kerns InterOpen products br Unix interoperability was sought by establishing the POSIX standard The POSIX standard can be applied to any operating system although it was originally created for various Unix variants br br A subgroup of the Unix family is the Berkeley Software Distribution BSD family which includes FreeBSD NetBSD and OpenBSD These operating systems are most commonly found on webservers although they can also function as a personal computer OS The Internet owes much of its existence to BSD as many of the protocols now commonly used by computers to connect send and receive data over a network were widely implemented and refined in BSD The World Wide Web was also first demonstrated on a number of computers running an OS based on BSD called NeXTSTEP br In University of California Berkeley installed its first Unix system Over time students and staff in the computer science department there began adding new programs to make things easier such as text editors When Berkeley received new VAX computers in with Unix installed the school s undergraduates modified Unix even more in order to take advantage of the computer s hardware possibilities The Defense Advanced Research Projects Agency of the US Department of Defense took interest and decided to fund the project Many schools corporations and government organizations took notice and started to use Berkeley s version of Unix instead of the official one distributed by AT T br Steve Jobs upon leaving Apple Inc in formed NeXT Inc a company that manufactured high end computers running on a variation of BSD called NeXTSTEP One of these computers was used by Tim Berners Lee as the first webserver to create the World Wide Web br Developers like Keith Bostic encouraged the project to replace any non free code that originated with Bell Labs Once this was done however AT T sued After two years of legal disputes the BSD project spawned a number of free derivatives such as NetBSD and FreeBSD both in and OpenBSD from NetBSD in br br macOS formerly Mac OS X and later OS X is a line of open core graphical operating systems developed marketed and sold by Apple Inc the latest of which is pre loaded on all currently shipping Macintosh computers macOS is the successor to the original classic Mac OS which had been Apple s primary operating system since Unlike its predecessor macOS is a UNIX operating system built on technology that had been developed at NeXT through the second half of the s and up until Apple purchased the company in early br The operating system was first released in as Mac OS X Server followed in March by a client version Mac OS X v Cheetah Since then six more distinct client and server editions of macOS have been released until the two were merged in OS X Lion br Prior to its merging with macOS the server edition macOS Server was architecturally identical to its desktop counterpart and usually ran on Apple s line of Macintosh server hardware macOS Server included work group management and administration software tools that provide simplified access to key network services including a mail transfer agent a Samba server an LDAP server a domain name server and others With Mac OS X v Lion all server aspects of Mac OS X Server have been integrated into the client version and the product re branded as OS X dropping Mac from the name The server tools are now offered as an application br br First introduced as the OpenEdition upgrade to MVS ESA System Product Version Release announced February with support for POSIX and other standards z OS UNIX System Services is built on top of MVS services and cannot run independently While IBM initially introduced OpenEdition to satisfy FIPS requirements several z OS component now require UNIX services e g TCP IP br br The Linux kernel originated in as a project of Linus Torvalds while a university student in Finland He posted information about his project on a newsgroup for computer students and programmers and received support and assistance from volunteers who succeeded in creating a complete and functional kernel br Linux is Unix like but was developed without any Unix code unlike BSD and its variants Because of its open license model the Linux kernel code is available for study and modification which resulted in its use on a wide range of computing machinery from supercomputers to smartwatches Although estimates suggest that Linux is used on only of all desktop or laptop PCs it has been widely adopted for use in servers and embedded systems such as cell phones br Linux has superseded Unix on many platforms and is used on most supercomputers including all most powerful supercomputers on the TOP list having displaced all competitors by Linux is also commonly used on other small energy efficient computers such as smartphones and smartwatches The Linux kernel is used in some popular distributions such as Red Hat Debian Ubuntu Linux Mint and Google s Android ChromeOS and ChromiumOS br br Microsoft Windows is a family of proprietary operating systems designed by Microsoft Corporation and primarily targeted to x architecture based computers As of its worldwide market share on all platforms was approximately and on the desktop laptop platforms its market share was approximately The latest version is Windows br Microsoft Windows was first released in as an operating environment running on top of MS DOS which was the standard operating system shipped on most Intel architecture personal computers at the time In Windows was released which only used MS DOS as a bootstrap For backwards compatibility Win x could run real mode MS DOS and bit Windows x drivers Windows ME released in was the last version in the Win x family Later versions have all been based on the Windows NT kernel Current client versions of Windows run on IA x and Arm microprocessors In the past Windows NT supported additional architectures br Server editions of Windows are widely used however Windows usage on servers is not as widespread as on personal computers as Windows competes against Linux and BSD for server market share br ReactOS is a Windows alternative operating system which is being developed on the principles of Windows without using any of Microsoft s code br br There have been many operating systems that were significant in their day but are no longer so such as AmigaOS OS from IBM and Microsoft classic Mac OS the non Unix precursor to Apple s macOS BeOS XTS RISC OS MorphOS Haiku BareMetal and FreeMint Some are still used in niche markets and continue to be developed as minority platforms for enthusiast communities and specialist applications br The z OS operating system for IBM z Architecture mainframe computers is still being used and developed and br OpenVMS formerly from DEC is still under active development by VMS Software Inc The IBM i operating system for IBM AS and IBM Power Systems midrange computers is also still being used and developed br Yet other operating systems are used almost exclusively in academia for operating systems education or to do research on operating system concepts A typical example of a system that fulfills both roles is MINIX while for example Singularity is used purely for research Another example is the Oberon System designed at ETH Z rich by Niklaus Wirth J rg Gutknecht and a group of students at the former Computer Systems Institute in the s It was used mainly for research teaching and daily work in Wirth s group br Other operating systems have failed to win significant market share but have introduced innovations that have influenced mainstream operating systems not least Bell Labs Plan br br The components of an operating system are designed to ensure that various parts of a computer function cohesively All user software must interact with the operating system to access hardware br br With the aid of firmware and device drivers the kernel provides the most basic level of control over all of the computer s hardware devices It manages memory access for programs in the RAM it determines which programs get access to which hardware resources it sets up or resets the CPU s operating states for optimal operation at all times and it organizes the data for long term non volatile storage with file systems on such media as disks tapes flash memory etc br br The operating system provides an interface between an application program and the computer hardware so that an application program can interact with the hardware only by obeying rules and procedures programmed into the operating system The operating system is also a set of services which simplify development and execution of application programs Executing an application program typically involves the creation of a process by the operating system kernel which assigns memory space and other resources establishes a priority for the process in multi tasking systems loads program binary code into memory and initiates execution of the application program which then interacts with the user and with hardware devices However in some systems an application can request that the operating system execute another application within the same process either as a subroutine or in a separate thread e g the LINK and ATTACH facilities of OS and successors br br An interrupt also known as an abort exception fault signal or trap provides an efficient way for most operating systems to react to the environment Interrupts cause the central processing unit CPU to have a control flow change away from the currently running program to an interrupt handler also known as an interrupt service routine ISR An interrupt service routine may cause the central processing unit CPU to have a context switch The details of how a computer processes an interrupt vary from architecture to architecture and the details of how interrupt service routines behave vary from operating system to operating system However several interrupt functions are common The architecture and operating system must br br transfer control to an interrupt service routine br save the state of the currently running process br restore the state after the interrupt is serviced br br A software interrupt is a message to a process that an event has occurred This contrasts with a hardware interrupt which is a message to the central processing unit CPU that an event has occurred Software interrupts are similar to hardware interrupts there is a change away from the currently running process Similarly both hardware and software interrupts execute an interrupt service routine br Software interrupts may be normally occurring events It is expected that a time slice will occur so the kernel will have to perform a context switch A computer program may set a timer to go off after a few seconds in case too much data causes an algorithm to take too long br Software interrupts may be error conditions such as a malformed machine instruction However the most common error conditions are division by zero and accessing an invalid memory address br Users can send messages to the kernel to modify the behavior of a currently running process For example in the command line environment pressing the interrupt character usually Control C might terminate the currently running process br To generate software interrupts for x CPUs the INT assembly language instruction is available The syntax is INT X where X is the offset number in hexadecimal format to the interrupt vector table br br To generate software interrupts in Unix like operating systems the kill pid signum system call will send a signal to another process pid is the process identifier of the receiving process signum is the signal number in mnemonic format to be sent The abrasive name of kill was chosen because early implementations only terminated the process br In Unix like operating systems signals inform processes of the occurrence of asynchronous events To communicate asynchronously interrupts are required One reason a process needs to asynchronously communicate to another process solves a variation of the classic reader writer problem The writer receives a pipe from the shell for its output to be sent to the reader s input stream The command line syntax is alpha bravo alpha will write to the pipe when its computation is ready and then sleep in the wait queue bravo will then be moved to the ready queue and soon will read from its input stream The kernel will generate software interrupts to coordinate the piping br Signals may be classified into categories The categories are br br when a process finishes normally br when a process has an error exception br when a process runs out of a system resource br when a process executes an illegal instruction br when a process sets an alarm event br when a process is aborted from the keyboard br when a process has a tracing alert for debugging br br Input output I O devices are slower than the CPU Therefore it would slow down the computer if the CPU had to wait for each I O to finish Instead a computer may implement interrupts for I O completion avoiding the need for polling or busy waiting br Some computers require an interrupt for each character or word costing a significant amount of CPU time Direct memory access DMA is an architecture feature to allow devices to bypass the CPU and access main memory directly Separate from the architecture a device may perform direct memory access to and from main memory either directly or via a bus br br When a computer user types a key on the keyboard typically the character appears immediately on the screen Likewise when a user moves a mouse the cursor immediately moves across the screen Each keystroke and mouse movement generates an interrupt called Interrupt driven I O An interrupt driven I O occurs when a process causes an interrupt for every character or word transmitted br br Devices such as hard disk drives solid state drives and magnetic tape drives can transfer data at a rate high enough that interrupting the CPU for every byte or word transferred and having the CPU transfer the byte or word between the device and memory would require too much CPU time Data is instead transferred between the device and memory independently of the CPU by hardware such as a channel or a direct memory access controller an interrupt is delivered only when all the data is transferred br If a computer program executes a system call to perform a block I O write operation then the system call might execute the following instructions br br Set the contents of the CPU s registers including the program counter into the process control block br Create an entry in the device status table The operating system maintains this table to keep track of which processes are waiting for which devices One field in the table is the memory address of the process control block br Place all the characters to be sent to the device into a memory buffer br Set the memory address of the memory buffer to a predetermined device register br Set the buffer size an integer to another predetermined register br Execute the machine instruction to begin the writing br Perform a context switch to the next process in the ready queue br While the writing takes place the operating system will context switch to other processes as normal When the device finishes writing the device will interrupt the currently running process by asserting an interrupt request The device will also place an integer onto the data bus Upon accepting the interrupt request the operating system will br br Push the contents of the program counter a register followed by the status register onto the call stack br Push the contents of the other registers onto the call stack Alternatively the contents of the registers may be placed in a system table br Read the integer from the data bus The integer is an offset to the interrupt vector table The vector table s instructions will then br Access the device status table br Extract the process control block br Perform a context switch back to the writing process br When the writing process has its time slice expired the operating system will br br Pop from the call stack the registers other than the status register and program counter br Pop from the call stack the status register br Pop from the call stack the address of the next instruction and set it back into the program counter br With the program counter now reset the interrupted process will resume its time slice br br Modern computers support multiple modes of operation CPUs with this capability offer at least two modes user mode and supervisor mode In general terms supervisor mode operation allows unrestricted access to all machine resources including all MPU instructions User mode operation sets limits on instruction use and typically disallows direct access to machine resources CPUs might have other modes similar to user mode as well such as the virtual modes in order to emulate older processor types such as bit processors on a bit one or bit processors on a bit one br At power on or reset the system begins in supervisor mode Once an operating system kernel has been loaded and started the boundary between user mode and supervisor mode also known as kernel mode can be established br Supervisor mode is used by the kernel for low level tasks that need unrestricted access to hardware such as controlling how memory is accessed and communicating with devices such as disk drives and video display devices User mode in contrast is used for almost everything else Application programs such as word processors and database managers operate within user mode and can only access machine resources by turning control over to the kernel a process which causes a switch to supervisor mode Typically the transfer of control to the kernel is achieved by executing a software interrupt instruction such as the Motorola TRAP instruction The software interrupt causes the processor to switch from user mode to supervisor mode and begin executing code that allows the kernel to take control br In user mode programs usually have access to a restricted set of processor instructions and generally cannot execute any instructions that could potentially cause disruption to the system s operation In supervisor mode instruction execution restrictions are typically removed allowing the kernel unrestricted access to all machine resources br The term user mode resource generally refers to one or more CPU registers which contain information that the running program is not allowed to alter Attempts to alter these resources generally cause a switch to supervisor mode where the operating system can deal with the illegal operation the program was attempting for example by forcibly terminating killing the program br br Among other things a multiprogramming operating system kernel must be responsible for managing all system memory which is currently in use by the programs This ensures that a program does not interfere with memory already in use by another program Since programs time share each program must have independent access to memory br Cooperative memory management used by many early operating systems assumes that all programs make voluntary use of the kernel s memory manager and do not exceed their allocated memory This system of memory management is almost never seen any more since programs often contain bugs which can cause them to exceed their allocated memory If a program fails it may cause memory used by one or more other programs to be affected or overwritten Malicious programs or viruses may purposefully alter another program s memory or may affect the operation of the operating system itself With cooperative memory management it takes only one misbehaved program to crash the system br Memory protection enables the kernel to limit a process access to the computer s memory Various methods of memory protection exist including memory segmentation and paging All methods require some level of hardware support such as the MMU which does not exist in all computers br In both segmentation and paging certain protected mode registers specify to the CPU what memory address it should allow a running program to access Attempts to access other addresses trigger an interrupt which causes the CPU to re enter supervisor mode placing the kernel in charge This is called a segmentation violation or Seg V for short and since it is both difficult to assign a meaningful result to such an operation and because it is usually a sign of a misbehaving program the kernel generally resorts to terminating the offending program and reports the error br Windows versions through ME had some level of memory protection but programs could easily circumvent the need to use it A general protection fault would be produced indicating a segmentation violation had occurred however the system would often crash anyway br br The use of virtual memory addressing such as paging or segmentation means that the kernel can choose what memory each program may use at any given time allowing the operating system to use the same memory locations for multiple tasks br If a program tries to access memory that is not accessible memory but nonetheless has been allocated to it the kernel is interrupted see Memory management This kind of interrupt is typically a page fault br When the kernel detects a page fault it generally adjusts the virtual memory range of the program which triggered it granting it access to the memory requested This gives the kernel discretionary power over where a particular application s memory is stored or even whether or not it has actually been allocated yet br In modern operating systems memory which is accessed less frequently can be temporarily stored on a disk or other media to make that space available for use by other programs This is called swapping as an area of memory can be used by multiple programs and what that memory area contains can be swapped or exchanged on demand br Virtual memory provides the programmer or the user with the perception that there is a much larger amount of RAM in the computer than is really there br br Concurrency refers to the operating system s ability to carry out multiple tasks simultaneously Virtually all modern operating systems support concurrency br Threads enable splitting a process work into multiple parts that can run simultaneously The number of threads is not limited by the number of processors available If there are more threads than processors the operating system kernel schedules suspends and resumes threads controlling when each thread runs and how much CPU time it receives During a context switch a running thread is suspended its state is saved into the thread control block and stack and the state of the new thread is loaded in Historically on many systems a thread could run until it relinquished control cooperative multitasking Because this model can allow a single thread to monopolize the processor most operating systems now can interrupt a thread preemptive multitasking br Threads have their own thread ID program counter PC a register set and a stack but share code heap data and other resources with other threads of the same process Thus there is less overhead to create a thread than a new process On single CPU systems concurrency is switching between processes Many computers have multiple CPUs Parallelism with multiple threads running on different CPUs can speed up a program depending on how much of it can be executed concurrently br br Permanent storage devices used in twenty first century computers unlike volatile dynamic random access memory DRAM are still accessible after a crash or power failure Permanent non volatile storage is much cheaper per byte but takes several orders of magnitude longer to access read and write The two main technologies are a hard drive consisting of magnetic disks and flash memory a solid state drive that stores data in electrical circuits The latter is more expensive but faster and more durable br File systems are an abstraction used by the operating system to simplify access to permanent storage They provide human readable filenames and other metadata increase performance via amortization of accesses prevent multiple threads from accessing the same section of memory and include checksums to identify corruption File systems are composed of files named collections of data of an arbitrary size and directories also called folders that list human readable filenames and other directories An absolute file path begins at the root directory and lists subdirectories divided by punctuation while a relative path defines the location of a file from a directory br System calls which are sometimes wrapped by libraries enable applications to create delete open and close files as well as link read and write to them All these operations are carried out by the operating system on behalf of the application The operating system s efforts to reduce latency include storing recently requested blocks of memory in a cache and prefetching data that the application has not asked for but might need next Device drivers are software specific to each input output I O device that enables the operating system to work without modification over different hardware br Another component of file systems is a dictionary that maps a file s name and metadata to the data block where its contents are stored Most file systems use directories to convert file names to file numbers To find the block number the operating system uses an index often implemented as a tree Separately there is a free space map to track free blocks commonly implemented as a bitmap Although any free block can be used to store a new file many operating systems try to group together files in the same directory to maximize performance or periodically reorganize files to reduce fragmentation br Maintaining data reliability in the face of a computer crash or hardware failure is another concern File writing protocols are designed with atomic operations so as not to leave permanent storage in a partially written inconsistent state in the event of a crash at any point during writing Data corruption is addressed by redundant storage for example RAID redundant array of inexpensive disks and checksums to detect when data has been corrupted With multiple layers of checksums and backups of a file a system can recover from multiple hardware failures Background processes are often used to detect and recover from data corruption br br Security means protecting users from other users of the same computer as well as from those who seeking remote access to it over a network Operating systems security rests on achieving the CIA triad confidentiality unauthorized users cannot access data integrity unauthorized users cannot modify data and availability ensuring that the system remains available to authorized users even in the event of a denial of service attack As with other computer systems isolating security domains in the case of operating systems the kernel processes and virtual machines is key to achieving security Other ways to increase security include simplicity to minimize the attack surface locking access to resources by default checking all requests for authorization principle of least authority granting the minimum privilege essential for performing a task privilege separation and reducing shared data br Some operating system designs are more secure than others Those with no isolation between the kernel and applications are least secure while those with a monolithic kernel like most general purpose operating systems are still vulnerable if any part of the kernel is compromised A more secure design features microkernels that separate the kernel s privileges into many separate security domains and reduce the consequences of a single kernel breach Unikernels are another approach that improves security by minimizing the kernel and separating out other operating systems functionality by application br Most operating systems are written in C or C which create potential vulnerabilities for exploitation Despite attempts to protect against them vulnerabilities are caused by buffer overflow attacks which are enabled by the lack of bounds checking Hardware vulnerabilities some of them caused by CPU optimizations can also be used to compromise the operating system There are known instances of operating system programmers deliberately implanting vulnerabilities such as back doors br Operating systems security is hampered by their increasing complexity and the resulting inevitability of bugs Because formal verification of operating systems may not be feasible developers use operating system hardening to reduce vulnerabilities e g address space layout randomization control flow integrity access restrictions and other techniques There are no restrictions on who can contribute code to open source operating systems such operating systems have transparent change histories and distributed governance structures Open source developers strive to work collaboratively to find and eliminate security vulnerabilities using code review and type checking to expunge malicious code Andrew S Tanenbaum advises releasing the source code of all operating systems arguing that it prevents developers from placing trust in secrecy and thus relying on the unreliable practice of security by obscurity br br A user interface UI is essential to support human interaction with a computer The two most common user interface types for any computer are br br command line interface where computer commands are typed line by line br graphical user interface GUI using a visual environment most commonly a combination of the window icon menu and pointer elements also known as WIMP br For personal computers including smartphones and tablet computers and for workstations user input is typically from a combination of keyboard mouse and trackpad or touchscreen all of which are connected to the operating system with specialized software Personal computer users who are not software developers or coders often prefer GUIs for both input and output GUIs are supported by most personal computers The software to support GUIs is more complex than a command line for input and plain text output Plain text output is often preferred by programmers and is easy to support br br A hobby operating system may be classified as one whose code has not been directly derived from an existing operating system and has few users and active developers br In some cases hobby development is in support of a homebrew computing device for example a simple single board computer powered by a microprocessor Or development may be for an architecture already in widespread use Operating system development may come from entirely new concepts or may commence by modeling an existing operating system In either case the hobbyist is her his own developer or may interact with a small and sometimes unstructured group of individuals who have like interests br Examples of hobby operating systems include Syllable and TempleOS br br If an application is written for use on a specific operating system and is ported to another OS the functionality required by that application may be implemented differently by that OS the names of functions meaning of arguments etc requiring the application to be adapted changed or otherwise maintained br This cost in supporting operating systems diversity can be avoided by instead writing applications against software platforms such as Java or Qt These abstractions have already borne the cost of adaptation to specific operating systems and their system libraries br Another approach is for operating system vendors to adopt standards For example POSIX and OS abstraction layers provide commonalities that reduce porting costs br br Operating Systems at Curlie br Multics History and the history of operating systems