title: Compatibility layer
id: 540289
In software engineering a compatibility layer is an interface that allows binaries for a legacy or foreign system to run on a host system This translates system calls for the foreign system into native system calls for the host system With some libraries for the foreign system this will often be sufficient to run foreign binaries on the host system A hardware compatibility layer consists of tools that allow hardware emulation br br br Software br Examples include br br Wine which runs some Microsoft Windows binaries on Unix like systems using a program loader and the Windows API implemented in DLLs br Windows s application compatibility layers to attempt to run poorly written applications or those written for earlier versions of the platform br Lina which runs some Linux binaries on Windows Mac OS X and Unix like systems with native look and feel br KernelEX which runs some Windows XP programs on Windows Me br Executor which runs k based classic Mac OS programs in Windows Mac OS X and Linux br Anbox an Android compatibility layer for Linux br Hybris library that translates Bionic into glibc calls br Darling a translation layer that attempts to run Mac OS X and Darwin binaries on Linux br Windows Subsystem for Linux v which runs Linux binaries on Windows via a compatibility layer which translates Linux system calls into native windows system calls br Cygwin a POSIX compatible environment that runs natively on Windows br ine a project to run OS application on Linux br Rosetta Apple s translation layer bundled with macOS Big Sur to allow x exclusive applications to run on ARM hardware br ACL allows Android apps to natively execute on Tizen webOS or MeeGoo phones br Alien Dalvik allows Android apps to run on MeeGo and Meamo Alien Dalvik was also revealed for iOS on an iPad however unlike MeeGo and Meamo this version ran from the cloud br touchHLE is a compatibility layer referred to as a high level emulator for Windows and macOS made by Andrea hikari no yume Sweden in early to run legacy bit iOS software The compatibility layer was only able to run one software Super Monkey Ball as of version As of version support for the Lite version of Super Monkey Ball as well as Crash Bandicoot Nitro Kart D and Touch Go has been added She says that fans will have to be patient for anything else to emulate It uses code translation along with CPU emulation when necessary and specifically stated that she does not want to be compatible with bit software Later a pull request to add support for Android was issued which allowed Android devices to run Super Monkey Ball for iOS br ipasim is a compatibility layer for Windows that uses WinObjC to translate code from Objective C to native Windows code br aah sic is a program for macOS to run iOS apps on macOS Catalina on x processors via translation of the programs via the Catalyst framework br brs emu is a compatibility layer to run Roku software via BrightScript on other platforms Web Windows macOS and Linux br Compatibility layer in kernel br br FreeBSD s Linux compatibility layer which enables binaries built specifically for Linux to run on FreeBSD the same way as the native FreeBSD API layer FreeBSD also has some Unix like system emulations including NDIS NetBSD PECoff SVR and different CPU versions of FreeBSD br NetBSD has several Unix like system emulations br Columbia Cycada an unreleased compatibility layer which runs Apple iOS applications on Android systems br Windows Subsystem for Linux provides a Linux compatible kernel interface developed by Microsoft br The PEACE Project aka COMPAT PECOFF has Win compatible layer for NetBSD The project is now inactive br On RSTS E for the PDP series of minicomputers programs written to run on the RT operating system could run without recompiling on RSTS through the RT Run Time System having its EMT flag set meaning that an RT EMT instruction that matches a RSTS EMT is diverted to the RT Run Time System which translates them to the equivalent RSTS EMT Programs written to take advantage of RSTS directly or calls to RSTS within the Run Time system itself signal this by having a second EMT instruction usually EMT immediately before the actual RSTS EMT code br A compatibility layer avoids both the complexity and the speed penalty of full hardware emulation Some programs may even run faster than the original e g some Linux applications running on FreeBSD s Linux compatibility layer may perform better than the same applications on Red Hat Linux Benchmarks are occasionally run on Wine to compare it to Windows NT based operating systems br Even on similar systems the details of implementing a compatibility layer can be quite intricate and troublesome a good example is the IRIX binary compatibility layer in the MIPS architecture version of NetBSD br A compatibility layer requires the host system s CPU to be upwardly compatible to that of the foreign system For example a Microsoft Windows compatibility layer is not possible on PowerPC hardware because Windows requires an x CPU In this case full emulation is needed br br br Hardware br Hardware compatibility layers involve tools that allow hardware emulation Some hardware compatibility layers involve breakout boxes because breakout boxes can provide compatibility for certain computer buses that are otherwise incompatible with the machine br br br See also br Hypervisor br Paravirtualization br Emulator br Cross platform virtualization br Computing platform br Shim computing br Driver wrapper br Glue code br br br br br br External links br Windows XP Application Compatibility Technologies Dave Morehouse and Todd Phillips Microsoft Corporation June 