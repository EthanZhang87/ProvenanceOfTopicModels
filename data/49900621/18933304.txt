title: AmigaOS
id: 18933304
AmigaOS is a family of proprietary native operating systems of the Amiga and AmigaOne personal computers It was developed first by Commodore International and introduced with the launch of the first Amiga the Amiga in Early versions of AmigaOS required the Motorola series of bit and bit microprocessors Later versions were developed by Haage Partner AmigaOS and and then Hyperion Entertainment AmigaOS A PowerPC microprocessor is required for the most recent release AmigaOS br AmigaOS is a single user operating system based on a preemptive multitasking kernel called Exec br It includes an abstraction of the Amiga s hardware a disk operating system called AmigaDOS a windowing system API called Intuition and a desktop environment and file manager called Workbench br The Amiga intellectual property is fragmented between Amiga Inc Cloanto and Hyperion Entertainment The copyrights for works created up to are owned by Cloanto In Amiga Inc contracted AmigaOS development to Hyperion Entertainment and in they granted Hyperion an exclusive perpetual worldwide license to AmigaOS in order to develop and market AmigaOS and subsequent versions br On December the AmigaOS source code leaked to the web this was confirmed by the licensee Hyperion Entertainment br br br Components br AmigaOS is a single user operating system based on a preemptive multitasking kernel called Exec AmigaOS provides an abstraction of the Amiga s hardware a disk operating system called AmigaDOS a windowing system API called Intuition and a desktop file manager called Workbench br A command line interface CLI called AmigaShell is also integrated into the system though it also is entirely window based The CLI and Workbench components share the same privileges Notably AmigaOS lacks any built in memory protection br AmigaOS is formed from two parts namely a firmware component called Kickstart and a software portion usually referred to as Workbench Up until AmigaOS matching versions of Kickstart and Workbench were typically released together However since AmigaOS the first release after Commodore s demise only the software component has been updated and the role of Kickstart has been diminished somewhat br Firmware updates may still be applied by patching at system boot That was until when Hyperion Entertainment license holder to AmigaOS released AmigaOS with an updated Kickstart ROM to go with it br br br Firmware and bootloader br br Kickstart is the bootstrap firmware usually stored in ROM Kickstart contains the code needed to boot standard Amiga hardware and many of the core components of AmigaOS The function of Kickstart is comparable to the BIOS plus the main operating system kernel in IBM PC compatibles However Kickstart provides more functionality available at boot time than would typically be expected on PC for example the full windowing environment br Kickstart contains many core parts of the Amiga s operating system such as Exec Intuition the core of AmigaDOS and functionality to initialize Autoconfig compliant expansion hardware Later versions of the Kickstart contained drivers for IDE and SCSI controllers PC card ports and other built in hardware br Upon start up or reset the Kickstart performs a number of diagnostic and system checks and then initializes the Amiga chipset and some core OS components It will then examine connected boot devices and attempt to boot from the one with the highest boot priority If no boot device is present a screen will be displayed asking the user to insert a boot disk typically a floppy disk br At start up Kickstart attempts to boot from a bootable device typically a floppy disk or hard disk drive In the case of a floppy the system reads the first two sectors of the disk the bootblock and executes any boot instructions stored there Normally this code passes control back to the OS invoking AmigaDOS and the GUI and using the disk as the system boot volume Any such disk regardless of the other contents of the disk was referred to as a boot disk or bootable disk A bootblock could be added to a blank disk by use of the install command Some games and demos on floppy disk used custom bootblocks which allowed them to take over the boot sequence and manage the Amiga s hardware without AmigaOS br The bootblock became an obvious target for virus writers Some games or demos that used a custom bootblock would not work if infected with a bootblock virus as the code of the virus replaced the original The first such virus was the SCA virus Anti virus attempts included custom bootblocks br These amended bootblock advertised the presence of the virus checker while checking the system for tell tale signs of memory resident viruses and then passed control back to the system Unfortunately these could not be used on disks that already relied on a custom bootblock but did alert users to potential trouble Several of them also replicated themselves across other disks becoming little more than viruses in their own right br br br Kernel br br The Macintosh should have had multitasking I can t stress enough what a big contribution it makes to the elegant design of system software The Amiga has an excellent multitasking system and I think it will have twice the product life of the Macintosh because of it br Exec is the multi tasking kernel of AmigaOS Exec provides functionality for multi tasking memory allocation interrupt handling and handling of dynamic shared libraries It acts as a scheduler for tasks running on the system providing pre emptive multitasking with prioritized round robin scheduling br Exec also provides access to other libraries and high level inter process communication via message passing Other comparable microkernels have had performance problems because of the need to copy messages between address spaces Since the Amiga has only one address space Exec message passing is quite efficient br br br AmigaDOS br br AmigaDOS provides the disk operating system portion of the AmigaOS This includes file systems file and directory manipulation the command line interface file redirection console windows and so on Its interfaces offer facilities such as command redirection piping scripting with structured programming primitives and a system of global and local variables br In AmigaOS x the AmigaDOS portion was based on TRIPOS which is written in BCPL Interfacing with it from other languages proved a difficult and error prone task and the port of TRIPOS was not very efficient br From AmigaOS x onwards AmigaDOS was rewritten in C and Assembler retaining x BCPL program compatibility and it incorporated parts of the third party AmigaDOS Resource Project which had already written replacements for many of the BCPL utilities and interfaces br ARP also provided one of the first standardized file requesters for the Amiga and introduced the use of more friendly UNIX style wildcard globbing functions in command line parameters Other innovations were an improvement in the range of date formats accepted by commands and the facility to make a command resident so that it only needs to be loaded into memory once and remains in memory to reduce the cost of loading in subsequent uses br In AmigaOS the DOS abandoned the BCPL legacy completely and starting from AmigaOS it has been rewritten with full bit support br File extensions are often used in AmigaOS but they are not mandatory and they are not handled specially by the DOS being instead just a conventional part of the file names Executable programs are recognized using a magic number br br br Graphical user interface br br The native Amiga windowing system is called Intuition which handles input from the keyboard and mouse and rendering of screens windows and widgets br Prior to AmigaOS there was no standardized look and feel application developers had to write their own non standard widgets Commodore added the GadTools library and BOOPSI in AmigaOS both of which provided standardized widgets Commodore also published the Amiga User Interface Style Guide which explained how applications should be laid out for consistency Stefan Stuntz created a popular third party widget library based on BOOPSI called Magic User Interface or MUI MorphOS uses MUI as its official toolkit while AROS uses a MUI clone called Zune AmigaOS added another widget set ReAction also based on BOOPSI br An unusual feature of AmigaOS is the use of multiple screens shown on the same display Each screen may have a different video resolution or color depth AmigaOS added support for public screens allowing applications to open windows on other applications screens Prior to AmigaOS only the Workbench screen was shared A widget in the top right corner of every screen allows screens to be cycled through Screens can be overlaid by dragging each up or down by their title bars AmigaOS introduced screens that are draggable in any direction br br br File manager br br Workbench is the native graphical file manager and desktop environment of AmigaOS Though the term Workbench was originally used to refer to the entire operating system with the release of AmigaOS the operating system was renamed AmigaOS and subsequently Workbench refers to the desktop manager only As the name suggests the metaphor of a workbench is used rather than that of a desktop directories are depicted as drawers executable files are tools data files are projects and GUI widgets are gadgets In many other aspects the interface resembles Mac OS with the main desktop showing icons of inserted disks and hard drive partitions and a single menu bar at the top of every screen Unlike the Macintosh mouse available at the time the standard Amiga mouse has two buttons the right mouse button operates the pull down menus with a release to select mechanism br br br Features br br br Graphics br Until the release of version AmigaOS only natively supported the native Amiga graphics chipset via graphics library which provides an API for geometric primitives raster graphic operations and handling of sprites As this API could be bypassed some developers chose to avoid OS functionality for rendering and directly program the underlying hardware for gains in efficiency br Third party graphics cards were initially supported via proprietary unofficial solutions A later solution where AmigaOS could directly support any graphics system was termed retargetable graphics RTG With AmigaOS some RTG systems were bundled with the OS allowing the use of common hardware cards other than the native Amiga chipsets The main RTG systems are CyberGraphX Picasso and EGS Some vector graphic libraries like Cairo and Anti Grain Geometry are also available Modern systems can use cross platform SDL simple DirectMedia Layer engine for games and other multimedia programs br The Amiga did not have any inbuilt D graphics capability and so had no standard D graphics API Later graphics card manufacturers and third party developers provided their own standards which included MiniGL Warp D StormMesa agl library and CyberGL br The Amiga was launched at a time when there was little support for D graphics libraries to enhance desktop GUIs and computer rendering capabilities However the Amiga became one of the first widespread D development platforms VideoScape D was one of the earliest D rendering and animation systems and Silver TurboSilver was one of the first ray tracing D programs Then Amiga boasted many influential applications in D software such as Imagine maxon s Cinema D Realsoft D VistaPro Aladdin D and NewTek s Lightwave used to render movies and television shows like Babylon br Likewise while the Amiga is well known for its ability to easily genlock with video it has no built in video capture interface The Amiga supported a vast number of third party interfaces for video capture from American and European manufacturers There were internal and external hardware solutions called frame grabbers for capturing individual or sequences of video frames including Newtronic Videon Newtek DigiView Graffiti external bit framebuffer the Digilab the Videocruncher Firecracker Vidi Amiga Vidi Amiga bit and RT Real Time Newtek Video Toaster GVP Impact Vision IV MacroSystem VLab Motion and VLab PAR DPS PAR Personal Animation Recorder VHI Video Hardware Interface by IOSPIRIT GmbH DVE etc Some solutions were hardware plug ins for Amiga graphics cards like the Merlin XCalibur module or the DV module built for the Amiga clone Draco from the German firm Macrosystem Modern PCI bus TV expansion cards and their capture interfaces are supported through tv library by Elbox Computer and tvcard library by Guido Mersmann br Following modern trends in evolution of graphical interfaces AmigaOS uses the D hardware accelerated Porter Duff image composition engine br br br Audio br Prior to version AmigaOS only officially supported the Amiga s native sound chip via audio device This facilitates playback of sound samples on four DMA driven bit PCM sound channels The only supported hardware sample format is signed linear bit two s complement br Support for third party audio cards was vendor dependent until the creation and adoption of AHI as a de facto standard AHI offers improved functionality such as seamless audio playback from a user selected audio device standardized functionality for audio recording and efficient software mixing routines for combining multiple sound channels thus overcoming the four channel hardware limit of the original Amiga chipset AHI can be installed separately on AmigaOS v and later br AmigaOS itself did not support MIDI until version when Roger Dannenberg s camd library was adapted as the standard MIDI API Commodore s version of camd library also included a built in driver for the serial port The later open source version of camd library by Kjetil Matheussen did not provide a built in driver for the serial port but provided an external driver instead br br AmigaOS was one of the first operating systems to feature speech synthesis with software developed by SoftVoice Inc which allowed text to speech conversion of American English This had three main components narrator device which modulates the phonemes used in American English translator library which translates English text to American English phonemes using a set of rules and a high level SPEAK handler which allows command line users to redirect text output to speech A utility called Say was included with the OS which allowed text to speech synthesis with some control of voice and speech parameters A demo was also included with AmigaBASIC programming examples Speech synthesis was occasionally used in third party programs particularly educational software For example the word processors Prowrite and Excellence could read out documents using the synthesizer These speech synthesis components remained largely unchanged in later OS releases and Commodore eventually removed speech synthesis support from AmigaOS onward because of licensing restrictions br Despite the American English limitation of the narrator device s phonemes Francesco Devitt developed an unofficial version with multilingual speech synthesis This made use of an enhanced version of the translator library which could translate a number of languages into phonemes given a set of rules for each language br br br Storage br The AmigaOS has a dynamically sized RAM disk which resizes itself automatically to accommodate its contents Starting with AmigaOS x operating system configuration files were loaded into the RAM disk on boot greatly speeding operating system usage Other files could be copied to the RAM disk like any standard device for quick modification and retrieval Also beginning in AmigaOS x the RAM disk supported file change notification which was mostly used to monitor configuration files for changes br Starting with AmigaOS there is also a fixed capacity recoverable RAM disk which functions as a standard RAM disk but can maintain its contents on soft restart It is commonly called the RAD disk after its default device name and it can be used as a boot disk with boot sector Previously a recoverable RAM disk commonly called the ASDG RRD or VD was introduced in at first it was locked to ASDG expansion memory products Later the ASDG RRD was added to the Fred Fish series of freeware shareware and public domain software disks and br br br Scripting br br The AmigaOS has support for the Rexx language called ARexx short for Amiga Rexx and is a script language which allows for full OS scripting similar to AppleScript intra application scripting similar to VBA in Microsoft Office as well as inter program communication Having a single scripting language for any application on the operating system is beneficial to users instead of having to learn a new language for each application br Programs can listen on an ARexx port for string messages These messages can then be interpreted by the program in a similar fashion to a user pushing buttons For example an ARexx script run in an e mail program could save the currently displayed email invoke an external program which could extract and process information and then invoke a viewer program This allows applications to control other applications by sending data back and forth directly with memory handles instead of saving files to disk and then reloading them br Since AmigaOS the Python language is included with the operating system br br br Technical overview br John C Dvorak stated in br br The AmigaOS remains one of the great operating systems of the past years incorporating a small kernel and tremendous multitasking capabilities the likes of which have only recently been developed in OS and Windows NT The biggest difference is that the AmigaOS could operate fully and multitask in as little as K of address space Even today the OS is only about MB in size And to this day there is very little a memory hogging CD ROM loading OS can do the Amiga can t Tight code there s nothing like it br I ve had an Amiga for maybe a decade It s the single most reliable piece of equipment I ve ever owned It s amazing You can easily understand why so many fanatics are out there wondering why they are alone in their love of the thing The Amiga continues to inspire a vibrant albeit cultlike community not unlike that which you have with Linux the Unix clone br br br Libraries and devices br AmigaOS provides a modular set of system functions through dynamically loaded shared libraries either stored as a file on disk with a library filename extension or stored in the Kickstart firmware All library functions are accessed via an indirect jump table which is a negative offset to the library base pointer That way every library function can be patched or hooked at run time even if the library is stored in ROM The core library of AmigaOS is the exec library Exec which provides an interface to functions of the Amiga s microkernel br Device drivers are also libraries but they implement a standardized interface Applications do not usually call devices directly as libraries but use the exec library I O functions to indirectly access them Like libraries devices are either files on disk with the device extension or stored in the Kickstart ROM br br br Handlers AmigaDOS and filesystems br The higher level part of device and resource management is controlled by handlers which are not libraries but tasks and communicate by passing messages One type of handler is a filesystem handler The AmigaOS can make use of any filesystem for which a handler has been written a possibility that has been exploited by programs like CrossDOS and by a few alternative file systems to the standard OFS and FFS These file systems allow one to add new features like journaling or file privileges which are not found in the standard operating system Handlers typically expose a device name to the DOS which can be used to access the peripheral if any associated with the handler As an example of these concepts is the SPEAK handler which could have text redirected to spoken speech through the speech synthesis system br Device names are case insensitive uppercase by convention strings followed by a colon After the colon a specifier can be added which gives the handler additional information about what is being accessed and how In the case of filesystem the specifier usually consists of a path to a file in the filesystem for other handlers specifiers usually set characteristics of the desired input output channel for the SER serial port driver for example the specifier will contain bit rate start and stop bits etc Filesystems expose drive names as their device names For example DF by default refers to the first floppy drive in the system On many systems DH is used to refer to the first hard drive Filesystems also expose volume names following the same syntax as device names these identify the specific medium in the file system managed drive If DF contains a disk named Workbench then Workbench will be a volume name that can be used to access files in DF If one wanted to access a file named Bar located in directory Foo of the disk with name Work in drive DF one could write DF Foo Bar or Work Foo Bar However these are not completely equivalent since when the latter form is used the system knows that the wanted volume is Work and not just any volume in DF Therefore whenever a requested file on Work is being accessed without volume Work being present in any drive it will say something to the effect of Please insert volume Work in any drive br Programs often need to access files without knowing their physical location either the drive or the volume they only know the logical path of the file i e whether the file is a library a documentation file a translation of the program s messages and so on This is solved in AmigaOS by the use of assigns An assign follows again the same syntax as a device name however it already points to a directory inside the filesystem The place an assign points to can be changed at any time by the user this behavior is similar to but nevertheless distinct from the subst command in MS DOS for example Assigns were also convenient because one logical assign could point to more than one different physical location at the same time thereby allowing an assign s contents to expand logically while still maintaining a separate physical organization Standard assigns that are generally present in an AmigaOS system include br br SYS which points to the boot drive s root directory br C which points to a directory containing shell commands At boot time this is SYS C if it exists otherwise SYS The command path defaults to C and the current working directory so putting executables in C allows them to be executed simply by typing their name br DEVS which points to a directory containing the system s devices At boot time this is SYS Devs if that directory exists otherwise SYS br L which points to a directory containing AmigaDOS handlers and filesystems At boot time this is SYS L if it exists otherwise L is not automatically created br LIBS which points to a directory containing the system s libraries At boot time this is SYS Libs if that directory exists otherwise SYS br S which points to a directory with scripts including the startup sequence which is executed automatically at boot time if it exists At boot time this is SYS S if it exists otherwise S is not automatically created br T which points to a temporary folder br PROGDIR a special assign that always points to the directory containing the currently running executable IFor example if a user runs SYS Tools Multiview and SYS System Format PROGDIR points at SYS Tools for Multiview while simultaneously pointing at SYS System for the Format command This feature was introduced in Workbench br br br Memory paging and a swap partition in later versions br AmigaOS introduced new system for allocating RAM and defragmenting it on the fly during system inactivities It is based on slab allocation method and there is also present a memory pager that arbitrates paging memory and allows the swapping of large portions of physical RAM on mass storage devices as a sort of virtual memory br Co operative paging was finally implemented in AmigaOS br br br Versions br br Since the introduction of AmigaOS in there have been four major versions and several minor revisions Up until release of the Amiga s operating system Commodore used Workbench to refer to the entire Amiga operating system As a consequence Workbench was commonly used to refer to both the operating system and the file manager component For end users Workbench was often synonymous with AmigaOS From version the OS was renamed AmigaOS and pre versions were also retroactively referred to as AmigaOS rather than Workbench Subsequently Workbench refers to the native graphical file manager only br From its inception Workbench offered a highly customizable interface The user could change the aspect of program icons replacing it with newer ones with different color combinations Users could also take a snapshot of icons and windows so the icons will remain on the desktop at coordinates chosen by user and windows will open at the desired size br br br AmigaOS br br AmigaOS was released with the first Amiga the Amiga in The x versions of AmigaOS by default used a blue and orange color scheme designed to give high contrast on even the worst of television screens the colors can be changed by the user Version consists mostly of bug fixes and like version was distributed for the Amiga only br The display was highly customizable for the era The user was free to create and modify system and user icons which could be of arbitrary size and design and can have two image states to produce a pseudo animated effect when selected Users could customize four display colors and choose from two resolutions or interlaced on NTSC or or on PAL systems In later revisions the TV or monitor overscan could be adjusted br Several features were deprecated in later versions For example the gauge meter showing the free space on a file system was replaced with a percentage in AmigaOS before being restored in The default busy pointer a comic balloon showing Zzz was replaced with a stopwatch in later versions br br br AmigaOS br AmigaOS was released with the launch of the Amiga in Until AmigaOS there was no unified look and feel design standard and application developers had to write their own widgets both buttons and menus if they wished to enhance the already meager selection of standard basic widgets provided by Intuition With AmigaOS gadtools library was created which provided standard widget sets The Amiga User Interface Style Guide was published which explained how applications should be laid out for consistency Intuition was improved with BOOPSI Basic Object Oriented Programming System for Intuition which enhanced the system with an object oriented interface to define a system of classes in which every class individuates a single widget or describes an interface event It can be used to program object oriented interfaces into Amiga at any level br AmigaOS also added support for public screens Instead of the AmigaOS screen being the only shareable screen applications could create their own named screens to share with other applications br AmigaOS rectified the problem of applications hooking directly into the input events stream to capture keyboard and mouse movements sometimes locking up the whole system AmigaOS provided Commodities a standard interface for modifying or scanning input events This included a standard method for specifying global hotkey key sequences and a Commodities Exchange registry for the user to see which commodities were running br AmigaOS introduced AmigaGuide a simple text only hypertext markup scheme and browser for providing online help inside applications It also introduced Installer a standard software installation program driven by a LISP like scripting language br AmigaOS introduced multi lingual locale support through locale library and for the first time AmigaOS was translated to different languages br br br AmigaOS br Version was originally shipped with the Amiga and Amiga computers Version added datatypes support which allowed any application that supported datatypes to load any file format supported by datatypes Workbench could load any background image in any format if the required datatype was installed A tiny application called Multiview was included that could open and display any supported file Its capabilities were directly related to the datatypes installed in Devs Datatypes The established AmigaGuide hypertext system gained more usability by using document links pointing to media files for example pictures or sounds all recognized by the datatypes br br br AmigaOS br Around six years after AmigaOS was released following Commodore s demise Haage Partner were granted a license to update AmigaOS which was released in as a software only update for existing systems that ran at least on a EC processor br The AmigaOS look and feel though still largely based on the earlier release was revised somewhat with an improved user interface based on ReAction improved icon rendering and official support for true color backdrops These releases included support for existing third party GUI enhancements such as NewIcons by integrating these patches into the system The and releases included a new set of color icons and a choice of desktop wallpaper These replaced the default all metal gray color scheme used on AmigaOS from release to br The release of AmigaOS was again developed by Haage Partner and released in The main improvements were the introduction of a program start bar called AmiDock revised user interfaces for system settings and improved utility programs br br br AmigaOS br br In September Hyperion Entertainment released AmigaOS this was both a software and hardware update for all Amigas In AmigaOS was released as a software only update to Amiga mainly as a bug fix br It includes many fixes modernizes several system components previously upgraded in OS introduces support of larger hard drives including at bootup supports the entire line of Motorola x CPUs up to and including the Motorola and includes a modernized Workbench with a new optional icon set Unlike AmigaOS AmigaOS still supports the Motorola CPU br In May Hyperion Entertainment released AmigaOS which includes all features of the previous version and adds several new improvements such as support for ReAction GUI management of Amiga Disk File images help system and improved datatypes br In December an update was released named AmigaOS with bug fixes and other improvements A second update named AmigaOS was released in March with more improvements and bug fixes br br br AmigaOS br br This new AmigaOS called AmigaOS has been rewritten to become fully PowerPC compatible It was initially developed on Cyberstorm PPC as making it independent of the old Amiga chipsets was nontrivial Since the fourth Developer Pre Release Update a new technique was adopted and the screens are draggable in any direction Drag and drop of Workbench icons between different screens is possible too br Also in AmigaOS were a new version of Amidock TrueType OpenType fonts and a movie player with DivX and MPEG support br In AmigaOS a new Start up preferences feature was added which replaced the old WBStartup drawer Additional enhancements were a new icon set to complement higher screen resolutions new window themes including drop shadows a new version of AmiDock with true transparency scalable icons and AmigaOS with auto update feature br In October AmigaOS developer Hyperion Entertainment released an SDK for AmigaOS br br br Influence on other operating systems br br AROS Research Operating System AROS implements the AmigaOS API in a portable open source operating system Although not binary compatible with AmigaOS unless running on k users have reported it to be highly source code compatible br MorphOS is a PowerPC native operating system which also runs on some Amiga hardware It implements AmigaOS API and provides binary compatibility with OS friendly AmigaOS applications that is those applications which do not access any native legacy Amiga hardware directly just as AmigaOS x unless executed on real Amiga models br pOS was a multiplatform closed source operating system with source code level compatibility with existing Amiga software br BeOS features also a centralized datatype structure similar to MacOS Easy Open after old Amiga developers requested Be to adopt Amiga datatype service It allows the entire OS to recognize all kinds of files text music videos documents etc with standard file descriptors The datatype system provides the entire system and any productivity tools with standard loaders and savers for these files without the need to embed multiple file loading capabilities into any single program br AtheOS was inspired by AmigaOS and originally intended to be a clone of AmigaOS Syllable is a fork of AtheOS and includes some AmigaOS and BeOS like qualities br FriendUP is a cloud based meta operating system It has many former Commodore and Amiga developers and employees working on the project The operating system retains several AmigaOS like features including DOS Drivers mount lists a TRIPOS based CLI and screen dragging br Finally the operating system of the DO Interactive Multiplayer bore a very strong resemblance to AmigaOS and was developed by RJ Mical the creator of the Amiga s Intuition user interface br br br See also br br Comparison of operating systems br br br br br br External links br Official website