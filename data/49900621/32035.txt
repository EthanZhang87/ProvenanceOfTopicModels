title: Unix shell
id: 32035
A Unix shell is a command line interpreter or shell that provides a command line user interface for Unix like operating systems The shell is both an interactive command language and a scripting language and is used by the operating system to control the execution of the system using shell scripts br Users typically interact with a Unix shell using a terminal emulator however direct operation via serial hardware connections or Secure Shell are common for server systems All Unix shells provide filename wildcarding piping here documents command substitution variables and control structures for condition testing and iteration br br br Concept br Generally a shell is a program that executes other programs in response to text commands A sophisticated shell can also change the environment in which other programs execute by passing named variables a parameter list or an input source br In Unix like operating systems users typically have many choices of command line interpreters for interactive sessions When a user logs into the system interactively a shell program is automatically executed for the duration of the session The type of shell which may be customized for each user is typically stored in the user s profile for example in the local passwd file or in a distributed configuration system such as NIS or LDAP however the user may execute any other available shell interactively br On operating systems with a windowing system such as macOS and desktop Linux distributions some users may never use the shell directly On Unix systems the shell has historically been the implementation language of system startup scripts including the program that starts a windowing system configures networking and many other essential functions However some system vendors have replaced the traditional shell based startup system init with different approaches such as systemd br br br Early shells br The first Unix shell was the Thompson shell sh written by Ken Thompson at Bell Labs and distributed with Versions through of Unix from to Though rudimentary by modern standards it introduced many of the basic features common to all later Unix shells including piping simple control structures using if and goto and filename wildcarding Though not in current use it is still available as part of some Ancient UNIX systems br It was modeled after the Multics shell developed in by American software engineer Glenda Schroeder Schroeder s Multics shell was itself modeled after the RUNCOM program Louis Pouzin showed to the Multics Team The rc suffix on some Unix configuration files for example vimrc is a remnant of the RUNCOM ancestry of Unix shells br The PWB shell or Mashey shell sh was an upward compatible version of the Thompson shell augmented by John Mashey and others and distributed with the Programmer s Workbench UNIX circa It focused on making shell programming practical especially in large shared computing centers It added shell variables precursors of environment variables including the search path mechanism that evolved into PATH user executable shell scripts and interrupt handling Control structures were extended from if goto to if then else endif switch breaksw endsw and while end break continue As shell programming became widespread these external commands were incorporated into the shell itself for performance br But the most widely distributed and influential of the early Unix shells were the Bourne shell and the C shell Both shells have been used as the coding base and model for many derivative and work alike shells with extended feature sets br br br Bourne shell br The Bourne shell sh was a new Unix shell by Stephen Bourne at Bell Labs Distributed as the shell for UNIX Version in it introduced the rest of the basic features considered common to all the later Unix shells including here documents command substitution more generic variables and more extensive builtin control structures The language including the use of a reversed keyword to mark the end of a block was influenced by ALGOL Traditionally the Bourne shell program name is sh and its path in the Unix file system hierarchy is bin sh But a number of compatible work alikes are also available with various improvements and additional features On many systems sh may be a symbolic link or hard link to one of these alternatives br br Almquist shell ash written as a BSD licensed replacement for the Bourne Shell often used in resource constrained environments The sh of FreeBSD NetBSD and their derivatives are based on ash that has been enhanced to be POSIX conformant br Busybox a set of Unix utilities for small and embedded systems which includes shells ash a derivative of the Almquist shell and hush an independent implementation of a Bourne shell br Debian Almquist shell dash a modern replacement for ash in Debian and Ubuntu br Bourne Again shell bash written as part of the GNU Project to provide a superset of Bourne Shell functionality This shell can be found installed and is the default interactive shell for users on most Linux systems br KornShell ksh written by David Korn based on the Bourne shell sources while working at Bell Labs br Public domain Korn shell pdksh br MirBSD Korn shell mksh a descendant of the OpenBSD bin ksh and pdksh developed as part of MirOS BSD br Z shell zsh a relatively modern shell that is backward compatible with bash It s the default shell in Kali Linux since and macOS since Catalina br The POSIX standard specifies its standard shell as a strict subset of the Korn shell an enhanced version of the Bourne shell From a user s perspective the Bourne shell was immediately recognized when active by its characteristic default command line prompt character the dollar sign br br br C shell br The C shell csh was modeled on the C programming language including the control structures and the expression grammar It was written by Bill Joy as a graduate student at University of California Berkeley and was widely distributed with BSD Unix br The C shell also introduced many features for interactive work including the history and editing mechanisms aliases directory stacks tilde notation cdpath job control and path hashing On many systems csh may be a symbolic link or hard link to TENEX C shell tcsh an improved version of Joy s original version Although the interactive features of csh have been copied to most other shells the language structure has not been widely copied The only work alike is Hamilton C shell written by Nicole Hamilton first distributed on OS in and on Windows since br br br Configuration files br Shells read configuration files in various circumstances These files usually contain commands for the shell and are executed when loaded they are usually used to set important variables used to find executables like PATH and others that control the behavior and appearance of the shell The table in this section shows the configuration files for popular shells br br Explanation br br blank means a file is not read by a shell at all br yes means a file is always read by a shell upon startup br login means a file is read if the shell is a login shell br n login means a file is read if the shell is not a login shell br int means a file is read if the shell is interactive br br br Other shells br Variations on the Unix shell concept that don t derive from Bourne shell or C shell include the following br br es A functional programming rc compatible shell written in the mid s br Friendly interactive shell fish First released in br PowerShell An object oriented shell developed originally for Windows OS and now available to macOS and Linux br Qshell A shell on the IBM i operating system based on POSIX and X Open standards br rc The default shell on Plan from Bell Labs and Version Unix written by Tom Duff Ports have been made to various Unix like operating systems br scsh A Scheme Shell br wish A windowing shell for Tcl Tk br br br See also br br br 