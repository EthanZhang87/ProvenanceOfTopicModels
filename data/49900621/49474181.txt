title: Zephyr (operating system)
id: 49474181
Zephyr is a small real time operating system RTOS for connected resource constrained and embedded devices with an emphasis on microcontrollers supporting multiple architectures and released under the Apache License Zephyr includes a kernel and all components and libraries device drivers protocol stacks file systems and firmware updates needed to develop full application software br It is named after Zephyrus the ancient Greek god of the west wind br br br History br Zephyr originated from Virtuoso RTOS for digital signal processors DSPs In Wind River Systems acquired Belgian software company Eonic Systems the developer of Virtuoso In November Wind River Systems renamed the operating system to Rocket made it open source and royalty free Compared to Wind River s other RTOS VxWorks Rocket had much smaller memory needs especially suitable for sensors and single function embedded devices Rocket could fit into as little as KB of memory while VxWorks needed KB or more br In February Rocket became a hosted collaborative project of the Linux Foundation under the name Zephyr Wind River Systems contributed the Rocket kernel to Zephyr but still provided Rocket to its clients charging them for the cloud services As a result Rocket became essentially the commercial version of Zephyr br Since then early members and supporters of Zephyr include Intel NXP Semiconductors Synopsys Linaro Texas Instruments DeviceTone Nordic Semiconductor Oticon and Bose br As of January Zephyr had the largest number of contributors and commits compared to other RTOSes including Mbed RT Thread NuttX and RIOT br br br Features br Zephyr intends to provide all components needed to develop resource constrained and embedded or microcontroller based applications This includes but is not limited to br br A small kernel br A flexible configuration and build system for compile time definition of required resources and modules br A set of protocol stacks IPv and IPv Constrained Application Protocol CoAP LwM M MQTT Thread Bluetooth Low Energy CAN br A virtual file system interface with several flash file systems for non volatile storage FatFs LittleFS NVS br Management and device firmware update mechanisms br br br Configuration and build system br Zephyr uses Kconfig and devicetree as its configuration systems inherited from the Linux kernel but implemented in the programming language Python for portability to non Unix operating systems The RTOS build system is based on CMake which allows Zephyr applications to be built on Linux macOS and Microsoft Windows br br br Utility Tool West br Zephyr has a general purpose tool called west for managing repositories downloading programs to hardware etc br br br Kernel br Early Zephyr kernels used a dual nanokernel plus microkernel design In December with Zephyr this changed to a monolithic kernel br The kernel offers several features that distinguish it from other small OSes br br Single address space br Multiple scheduling algorithms br Highly configurable and modular for flexibility with resources defined at compile time br Memory protection unit MPU based protection br Asymmetric multiprocessing AMP based on OpenAMP and symmetric multiprocessing SMP support br br br Security br A group is dedicated to maintaining and improving the security Also being owned and supported by a community means the world s open source developers are vetting the code which significantly increases security br br br See also br Embedded operating system br br br 