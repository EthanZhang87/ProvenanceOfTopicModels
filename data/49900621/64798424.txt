title: Harmony (operating system)
id: 64798424
Harmony is an experimental computer operating system OS developed at the National Research Council Canada in Ottawa It is a second generation message passing system that was also used as the basis for several research projects including robotics sensing and graphical workstation development Harmony was actively developed throughout the s and into the mid s br br br History br Harmony was a successor to the Thoth system developed at the University of Waterloo Work on Harmony began at roughly the same time as that on the Verex kernel developed at the University of British Columbia David Cheriton was involved in both Thoth and Verex and would later go on to develop the V System at Stanford University Harmony s principal developers included W Morven Gentleman Stephen A MacKay Darlene A Stewart and Marceli Wein br Early ports of the system existed for a variety of Motorola based computers including ones using the VMEbus and Multibus backplanes and in particular the Multibus based Chorus multiprocessor system at Waterloo Other hosts included the Atari or ST A port also existed for the Digital Equipment Corporation VAX br Harmony achieved formal verification in br br br Features br Harmony was designed as a real time operating system RTOS for robot control It is a multitasking multiprocessing system It is not multi user Harmony provided a runtime system environment only development took place on a separate system originally an Apple Macintosh For each processor in the system an image is created that combines Harmony with the one multitask program for that processor at link time an exception being a case where the kernel is programmed into a read only memory ROM br Although the term did not appear in the original papers Harmony was later referred to as a microkernel A key in Harmony is its use of the term task which in Harmony is defined as the unit of sequential and synchronous execution and the unit of resource ownership It is likened to a subroutine but one that must be explicitly created and which runs independently of the task that created it Programs are made up of a number of tasks A task is bound to a specific processor which may be different from that of the instantiating task and which may host many tasks All system resources are owned and managed by tasks br Intertask communication is provided mostly by synchronous message passing and four associated primitives Shared memory is also supported Destruction of a task closes all of its connections Input output uses a data stream model br Harmony is connection oriented in that tasks that communicate with each other often maintain state information about each other In contrast with some other distributed systems connections in Harmony are inexpensive br br br Applications and tools br An advanced debugger called Melody was developed for Harmony at the Advanced Real Time Toolset Laboratory at Carleton University It was later commercialized as Remedy br The Harmony kernel underpinned the Actra project a multiprocessing multitasking Smalltalk br Harmony was used in the multitasking multiprocessor Adagio robotics simulation workstation br Concepts from both Harmony and Adagio influenced the design of the Smalltalk based Eva event driven user interface builder br Harmony was used as the underlying OS for several experimental robotic systems br br br Commercial br Harmony was commercialized by the Taurus Computer Products division of Canadian industrial computer company Dy When Dy closed down their software division four of Taurus former developers founded Precise Software Technologies and continued developing the OS as Precise MPX the predecessor to their later Precise MQX product br Another commercial operating system derived from Harmony is the Unison OS from Rowebot Research Inc br br br br br br Further reading br James J Rowe K Gray L Vishnubhatla B Wan C F Wilson M Experience Porting the Harmony Operating System Proceedings of the th IEEE Real Time Systems Symposium RTSS San Diego California USA IEEE Computer Society pp ISBN br Forsey David R Harmony in transposition A toccata for Vax and Motorola Technical report br Parr R K TCP IP Ethernet Support for the Harmony Operating System University of Waterloo Technical report br Riese H M Towards Harmony on Sylvan University of Waterloo Technical report br Wong Wai Victoria Concordia Cum Vaxen Porting Harmony to the VAX Technical report br Roth G O Hara D May A Holdsite Method for Parts Acquisition Using a Laser Rangefinder Mounted on a Robot Wrist Proceedings of IEEE Conference on Robotics and Automation Raleigh NC pp br Barry B M Thomas D A Altoft J R Wilson M October Using Objects to Design and Build Radar ESM Systems Proceedings of the Conference on Object Oriented Programming Systems Languages and Applications Vol Orlando FL pp br O Hara D H February Multiprocessor Robot Control for Assembly A Demonstration with Tactile Feedback for Prismatic Shaped Block Insertion th International conference on Robot Vision and Sensory Controls Zurich Switzerland br Gentleman W MacKay S Stewart D An Introduction to the Harmony Realtime Operating System Technical report br Thoreson D V P May Harmony Multi Tasking Runtime Support for the Ada Rendezvous Royal Military College of Canada Technical report Kingston Ontario br Archibald C C Gentleman W M O Hara D H June Realtime Feedback Control Using a Laser Range Finder and Harmony Proceedings of the th Canadian CAD CAM and Robotics Conference Toronto Ontario br O Hara D H Kurtz R Prismatic shaped Block Insertion an Application of a Multiprocessor Robot Controller using Harmony National Research Council of Canada Technical report Ottawa Ontario br MacKay S A Gentleman W M Stewart D A Wein M September Harmony as an Object Oriented Operating System Proceedings of the ACM SIGPLAN Workshop on Object Oriented Concurrent Programming Vol San Diego pp 