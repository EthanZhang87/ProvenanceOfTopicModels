title: Exec (Amiga)
id: 16906611
Exec is the kernel of AmigaOS It is a KB multitasking microkernel which enabled pre emptive multitasking in as little as KB of memory as supplied with the first Amiga s Exec provided functions for multitasking memory management and handling of interrupts and dynamic shared libraries br It acts as a scheduler for tasks running on the system providing pre emptive multitasking with prioritized round robin scheduling Exec also provides access to other libraries and high level inter process communication via message passing Other comparable microkernels have had performance problems because of the need to copy messages between address spaces Since the Amiga has only one address space Exec message passing is quite efficient The only fixed memory address in the Amiga software address is a pointer to exec library which can then be used to access other libraries Exec was designed and implemented by Carl Sassenrath br br br Exec br Unlike newer modern operating systems the exec kernel does not run privileged Contemporary operating systems for the Motorola such as Atari TOS and SunOS used trap instructions to invoke kernel functions This made the kernel functions run in the s supervisor mode while user software ran in the unprivileged user mode By contrast exec function calls are made with the library jump table and the kernel code normally executes in user mode Whenever supervisor mode is needed either by the kernel or user programs the library functions Supervisor or SuperState are used br One limit of the Exec kernel was that an uncooperative program could disable multitasking for a long time or indefinitely by invoking Exec s calls Forbid or Disable with no later invocation of corresponding Permit or Enable causing the environment to run as one task Multitasking could also be disabled by programs which by software bug or intent modify Exec s data structures or the code stored in random access memory RAM possibly due to lack of memory management unit MMU support br Even with such limits Exec satisfies the definition of preemptive scheduling algorithm using a preemptive scheduling routine and basing its interrupt intervals on a clock br Linux kernel developer Linus Torvalds once described the Amiga design as cooperative even though it uses a preemptive scheduling policy The reason for that he argued was because the lack of memory protection between tasks meant a task could hinder the system from operating preemptively As tasks would need to choose not to stop the preemptive mechanism this would reduce to a kind of inverted cooperative system This kind of conflation between protection and scheduler policy is nonstandard br br br ExecSG br ExecSG Second Generation is the kernel used by AmigaOS This kernel was licensed by Hyperion Entertainment from Thomas Frieden and Hans J rg Frieden It exposes the same functions and structures as the Amiga Exec kernel but runs on PowerPC processors only The ultimate origin of ExecSG is unspecified br br br br br br External links br br Amiga Exec