title: Berkeley Software Distribution
id: 18932622
The Berkeley Software Distribution or Berkeley Standard Distribution BSD is a discontinued operating system based on Research Unix developed and distributed by the Computer Systems Research Group CSRG at the University of California Berkeley The term BSD commonly refers to its open source descendants including FreeBSD OpenBSD NetBSD and DragonFly BSD br BSD was initially called Berkeley Unix because it was based on the source code of the original Unix developed at Bell Labs In the s BSD was widely adopted by workstation vendors in the form of proprietary Unix variants such as DEC Ultrix and Sun Microsystems SunOS due to its permissive licensing and familiarity to many technology company founders and engineers These proprietary BSD derivatives were largely superseded in the s by UNIX SVR and OSF br Later releases of BSD provided the basis for several open source operating systems including FreeBSD OpenBSD NetBSD DragonFly BSD Darwin and TrueOS These in turn have been used by proprietary operating systems including Apple s macOS and iOS which derived from them and Microsoft Windows since at least and XP which used at least part of its TCP IP code which was legal Code from FreeBSD was also used to create the operating systems for the PlayStation PlayStation PlayStation PlayStation Vita and Nintendo Switch br br br History br br The earliest distributions of Unix from Bell Labs in the s included the source code to the operating system allowing researchers at universities to modify and extend Unix The operating system arrived at Berkeley in at the request of computer science professor Bob Fabry who had been on the program committee for the Symposium on Operating Systems Principles where Unix was first presented A PDP was bought to run the system but for budgetary reasons this machine was shared with the mathematics and statistics groups at Berkeley who used RSTS so that Unix only ran on the machine eight hours per day sometimes during the day sometimes during the night A larger PDP was installed at Berkeley the following year using money from the Ingres database project br BSD began life as a variant of Unix that programmers at the University of California at Berkeley initially led by Bill Joy began developing in the late s br It included extra features which were intertwined with code owned by AT T br In Ken Thompson took a sabbatical from Bell Labs and came to Berkeley as a visiting professor He helped to install Version Unix and started working on a Pascal implementation for the system Graduate students Chuck Haley and Bill Joy improved Thompson s Pascal and implemented an improved text editor ex Other universities became interested in the software at Berkeley and so in Joy started compiling the first Berkeley Software Distribution BSD which was released on March BSD was an add on to Version Unix rather than a complete operating system in its own right Some thirty copies were sent out br The second Berkeley Software Distribution BSD released in May included updated versions of the BSD software as well as two new programs by Joy that persist on Unix systems to this day the vi text editor a visual version of ex and the C shell Some copies of BSD were sent out by Bill Joy br br A VAX computer was installed at Berkeley in but the port of Unix to the VAX architecture UNIX V did not take advantage of the VAX s virtual memory capabilities The kernel of V was largely rewritten to include Berkeley graduate student zalp Babao lu s virtual memory implementation and a complete operating system including the new kernel ports of the BSD utilities to the VAX and the utilities from V was released as BSD at the end of BSD was also alternatively called Virtual VAX UNIX or VMUNIX for Virtual Memory Unix and BSD kernel images were normally called vmunix until BSD br br After BSD was released in June it was determined that BSD would move away from the aging VAX platform The Power platform codenamed Tahoe developed by Computer Consoles Inc seemed promising at the time but was abandoned by its developers shortly thereafter Nonetheless the BSD Tahoe port June proved valuable as it led to a separation of machine dependent and machine independent code in BSD which would improve the system s future portability br In addition to portability the CSRG worked on an implementation of the OSI network protocol stack improvements to the kernel virtual memory system and with Van Jacobson of LBL new TCP IP algorithms to accommodate the growth of the Internet br Until then all versions of BSD used proprietary AT T Unix code and were therefore subject to an AT T software license Source code licenses had become very expensive and several outside parties had expressed interest in a separate release of the networking code which had been developed entirely outside AT T and would not be subject to the licensing requirement This led to Networking Release Net which was made available to non licensees of AT T code and was freely redistributable under the terms of the BSD license It was released in June br After Net BSD developer Keith Bostic proposed that more non AT T sections of the BSD system be released under the same license as Net To this end he started a project to reimplement most of the standard Unix utilities without using the AT T code Within eighteen months all of the AT T utilities had been replaced and it was determined that only a few AT T files remained in the kernel These files were removed and the result was the June release of Networking Release Net a nearly complete operating system that was freely distributable br Net was the basis for two separate ports of BSD to the Intel architecture the free BSD by William and Lynne Jolitz and the proprietary BSD later renamed BSD OS by Berkeley Software Design BSDi BSD itself was short lived but became the initial code base of the NetBSD and FreeBSD projects that were started shortly thereafter br BSDi soon found itself in legal trouble with AT T s Unix System Laboratories USL subsidiary then the owners of the System V copyright and the Unix trademark The USL v BSDi lawsuit was filed in and led to an injunction on the distribution of Net until the validity of USL s copyright claims on the source could be determined The lawsuit slowed development of the free software descendants of BSD for nearly two years while their legal status was in question and as a result systems based on the Linux kernel which did not have such legal ambiguity gained greater support The lawsuit was settled in January largely in Berkeley s favor Of the files in the Berkeley distribution only three had to be removed and modified to show USL copyright notices A further condition of the settlement was that USL would not file further lawsuits against users and distributors of the Berkeley owned code in the upcoming BSD release br The final release from Berkeley was s BSD Lite Release after which the CSRG was dissolved and development of BSD at Berkeley ceased Since then several variants based directly or indirectly on BSD Lite such as FreeBSD NetBSD OpenBSD and DragonFly BSD have been maintained br The permissive nature of the BSD license has allowed many other operating systems both open source and proprietary to incorporate BSD source code For example Microsoft Windows used BSD code in its implementation of TCP IP and bundles recompiled versions of BSD s command line networking tools since Windows Darwin the basis for Apple s macOS and iOS is based on BSD Lite and FreeBSD Various commercial Unix operating systems such as Solaris also incorporate BSD code br br br Relationship to Research Unix br Starting with the th Edition versions of Research Unix at Bell Labs had a close relationship to BSD This began when cBSD for the VAX was used as the basis for Research Unix th Edition This continued in subsequent versions such as the th Edition which incorporated source code and improvements from BSD The result was that these later versions of Research Unix were closer to BSD than they were to System V In a Usenet posting from Dennis Ritchie described this relationship between BSD and Research Unix br br Research Unix th Edition started from I think BSD c but with enormous amounts scooped out and replaced by our own stuff This continued with th and th The ordinary user command set was I guess a bit more BSD flavored than SysVish but it was pretty eclectic br br br Relationship to System V br Eric S Raymond summarizes the longstanding relationship between System V and BSD stating The divide was roughly between longhairs and shorthairs programmers and technical people tended to line up with Berkeley and BSD more business oriented types with AT T and System V br In David A Curry wrote about the differences between BSD and System V He characterized System V as being often regarded as the standard Unix However he described BSD as more popular among university and government computer centers due to its advanced features and performance br br Most university and government computer centers that use UNIX use Berkeley UNIX rather than System V There are several reasons for this but perhaps the two most significant are that Berkeley UNIX provides networking capabilities that until recently Release were completely unavailable in System V and that Berkeley UNIX is much more suited to a research environment which requires a faster file system better virtual memory handling and a larger variety of programming languages br br br Technology br br br Berkeley sockets br br Berkeley s Unix was the first Unix to include libraries supporting the Internet Protocol stacks Berkeley sockets A Unix implementation of IP s predecessor the ARPAnet s NCP with FTP and Telnet clients had been produced at the University of Illinois in and was available at Berkeley However the memory scarcity on the PDP forced a complicated design and performance problems br By integrating sockets with the Unix operating system s file descriptors it became almost as easy to read and write data across a network as it was to access a disk The AT T laboratory eventually released their own STREAMS library which incorporated much of the same functionality in a software stack with a different architecture but the wide distribution of the existing sockets library reduced the impact of the new API Early versions of BSD were used to form Sun Microsystems SunOS founding the first wave of popular Unix workstations br br br Binary compatibility br Some BSD operating systems can run native software of several other operating systems on the same architecture using a binary compatibility layer This is much simpler and faster than emulation for example it allows applications intended for Linux to be run at effectively full speed This makes BSDs not only suitable for server environments but also for workstation ones given the increasing availability of commercial or closed source software for Linux only This also allows administrators to migrate legacy commercial applications which may have only supported commercial Unix variants to a more modern operating system retaining the functionality of such applications until they can be replaced by a better alternative br br br Standards br Current BSD operating system variants support many of the common IEEE ANSI ISO and POSIX standards while retaining most of the traditional BSD behavior Like AT T Unix the BSD kernel is monolithic meaning that device drivers in the kernel run in privileged mode as part of the core of the operating system br br br BSD descendants br br Several operating systems are based on BSD including FreeBSD OpenBSD NetBSD MidnightBSD MirOS BSD GhostBSD Darwin and DragonFly BSD Both NetBSD and FreeBSD were created in They were initially derived from BSD also known as Jolix and merged the BSD Lite source code in OpenBSD was forked from NetBSD in and DragonFly BSD was forked from FreeBSD in br BSD was also used as the basis for several proprietary versions of Unix such as Sun s SunOS Sequent s DYNIX NeXT s NeXTSTEP DEC s Ultrix and OSF AXP now Tru UNIX NeXTSTEP later became the foundation for Apple Inc s macOS br br br See also br BSD Daemon br BSD licenses br Comparison of BSD operating systems br List of BSD operating systems br Lumina desktop environment br Unix wars br br br br br br Bibliography br Marshall K McKusick Keith Bostic Michael J Karels John S Quartermain The Design and Implementation of the BSD Operating System Addison Wesley ISBN br Marshall K McKusick George V Neville Neil The Design and Implementation of the FreeBSD Operating System Addison Wesley August ISBN br Samuel J Leffler Marshall K McKusick Michael J Karels John S Quarterman The Design and Implementation of the BSD UNIX Operating System Addison Wesley November ISBN br McKusick Marshall Kirk January Twenty Years of Berkeley Unix From AT T Owned to Freely Redistributable In DiBona Chris Ockman Sam Stone Mark eds Open Sources Voices from the Revolution first ed O Reilly ISBN br Peter H Salus The Daemon the GNU The Penguin Reed Media Services September ISBN br Peter H Salus A Quarter Century of UNIX Addison Wesley June ISBN br Peter H Salus Casting the Net Addison Wesley March ISBN br br br External links br Berkeley Software Distribution at Curlie br A timeline of BSD and Research UNIX br UNIX History History of UNIX and BSD using diagrams br The Design and Implementation of the BSD Operating System br The Unix Tree Source code and manuals for old versions of Unix br EuroBSDCon an annual event in Europe in September October or November founded Archived June at the Wayback Machine in br BSDCan a conference in Ottawa Ontario Canada held annually in May since in June since br AsiaBSDCon a conference in Tokyo held annually in March of each year since br mdoc su short manual page URLs for FreeBSD OpenBSD NetBSD and DragonFly BSD a web service written in nginx br BXR SU Super User s BSD Cross Reference a userland and kernel source code search engine based on OpenGrok and nginx