title: Per Brinch Hansen
id: 863750
Per Brinch Hansen November July was a Danish American computer scientist known for his work in operating systems concurrent programming and parallel and distributed computing br br br Biography br br br Early life and education br br Per Brinch Hansen was born in Frederiksberg an enclave surrounded by Copenhagen Denmark His father J rgen Brinch Hansen worked as a civil engineer becoming a leading expert in soil mechanics and later accepting a professorship at Technical University of Denmark His mother Elsebeth Brinch Hansen n e Ring was the daughter of Danish composer Oluf Ring and worked as a hairdresser before marrying br Brinch Hansen attended Skt J rgens Gymnasium and then studied electrical engineering at Technical University of Denmark where he sought an area to pursue that was still in its pioneering phase on the belief that If a subject was being taught it was probably already too late to make fundamental contributions After a seven week student internship at IBM s Hursley Laboratory in England he decided to dedicate his career to computers Initially focused on computer construction reading a book on the IBM Stretch project that described computer organization from a programmer s point of view refocused his interest toward becoming a computer architect br br br Regnecentralen br br After completing a Master of Science degree in electronic engineering in Brinch Hansen landed a job at Regnecentralen then a research institution under The Danish Academy of Technical Sciences Akademiet for de Tekniske Videnskaber working in the compiler group led by Peter Naur and J rn Jensen There his first significant project was writing a parser for a COBOL compiler for the Siemens computer br Subsequently he wrote a file system to be used during execution of the compiled COBOL programs later observing br br I now understand that it was really a small operating system I had programmed However in the mid s the dividing line between language implementation and operating systems was still not clearly understood br In Brinch Hansen moved to Henning Isaksson s hardware group at Regnecentralen by then a company with shareholders Together with Peter Kraft he defined the computer architecture and instruction set for Regnecentralen s third computer the RC using ALGOL as a hardware description language to produce a formal specification br Inexperienced with multiprogramming he used a copy of Cooperating Sequential Processes Edsger Dijkstra had sent him to understand process synchronization using semaphores and then implemented a specialized RC real time monitor for use in managing a fertilizer plant Peter Kraft and Charles Simonyi who was still a teenager wrote a p code interpreter and data logging task programs that were compiled to p code br In the summer of Brinch Hansen left Regnecentralen s hardware group to become head of RC software development where he led a team including J rn Jensen Peter Kraft and S ren Lauesen in defining a general purpose RC multiprogramming system with a goal to avoid developing a custom real time control operating system for every RC installation and to support batch processing and time sharing as well The resulting system was not a complete operating system but a small kernel providing the mechanisms upon which operating systems for different purposes could be built By the spring of a well documented reliable version of the RC multiprogramming system was running br br br Carnegie Mellon University br In late Brinch Hansen moved to Pittsburgh accepting an invitation from Alan Perlis to visit the department of computer science at Carnegie Mellon University as a research associate while he wrote the first systematic textbook on operating system principles During this time at the Summer School in Marktoberdorf and a symposium in Belfast Brinch Hansen Tony Hoare and Dijkstra began to discuss ideas that evolved into the monitor concept In the spring of after reading about the class concept invented by Ole Johan Dahl and Kristen Nygaard for Simula Brinch Hansen completed his text with a chapter on resource protection that proposed the first monitor notation using shared classes In Operating System Principles was published becoming the first comprehensive textbook on operating systems br br br California Institute of Technology br br In July Brinch Hansen joined the faculty of the California Institute of Technology Caltech as an Associate Professor of computer science where he began work on defining a programming language with concurrent processes and monitors In April he distributed a technical report on Concurrent Pascal A Concurrent Pascal compiler for the PDP written by Brinch Hansen s doctoral student Al Hartmann was released in January Subsequently Brinch Hansen began writing model operating systems in Concurrent Pascal to evaluate the language In May he completed Solo a single user operating system for development of Concurrent Pascal programs Next he rewrote the original RC real time scheduler in Concurrent Pascal taking three days to write it and three hours of machine time to systematically test it br When the Caltech computer science department shifted focus toward computer engineering and away from programming Brinch Hansen decided to leave rather than to seek tenure there br br br University of Southern California br In Brinch Hansen chose University of Southern California USC for his next post so that his family could remain in their Altadena home Joining the faculty as a tenured full professor and first chair of a newly created computer science department he led efforts to identify and attract top notch faculty to build a first rate department By USC s computer science department was ranked by the National Research Council as one of the top ten in the US br While at USC Brinch Hansen wrote his second book The Architecture of Concurrent Programs based on his work developing operating systems with Concurrent Pascal Published in it was the first book on concurrent programming In Brinch Hansen became the first computer scientist awarded the Doctor Technices degree the highest academic distinction within engineering and technological science in Denmark for the work documented in The Architecture of Concurrent Programs Later in Brinch Hansen published the Distributed Processes language concept proposing the use of remote procedure calls to synchronize processes running across a microcomputer network br Also in L J Sevins and Steve Goings from Mostek visited Brinch Hansen at USC where he outlined a low cost multiprocessor architecture Mostek began a project to implement such a multiprocessor with Brinch Hansen working as a consultant Brinch Hansen developed a new concurrent programming language Edison for the project As with the RC project Edison was also used as a formal specification language for the hardware Mostek got an initial node multiprocessor working and Brinch Hansen wrote a portable Edison compiler on a PDP but shortly after United Technologies acquired Mostek and cancelled the project In Brinch Hansen moved the Edison system to an IBM Personal Computer PC and then published his third book Programming a Personal Computer br In Brinch Hansen was named the first Henry Salvatori Professor of Computer Science at USC br br br University of Copenhagen br In feeling homesick for Denmark after years abroad Brinch Hansen left USC and joined the faculty of the University of Copenhagen as a Professor of datalogy In he was elected a Fellow of the Institute of Electrical and Electronics Engineers IEEE Later in his fourth book Brinch Hansen on Pascal Compilers which he used for his own compiler course was published br While designing a multicomputer operating system for Danish company GN Elmi Brinch Hansen concluded he needed a new language this time leveraging the message passing paradigm of Hoare s CSP The resulting language Joyce removed a major limitation of CSP by introducing parallel recursion Brinch Hansen developed a portable implementation on an IBM PC br br br Syracuse University br br After finding that neither he nor his family felt at home in Denmark Brinch Hansen decided to return to the US but discovered that their immigration status required them to do so very quickly Brinch Hansen contacted John Reynolds at Syracuse University and in he joined the faculty as a Distinguished Professor br Working with his student Rangachari Anand Joyce was moved to an Encore Multimax multiprocessor at SU s Northeast Parallel Architectures Center Recognizing the scaling limitations of multiprocessors however Brinch Hansen sought a suitable multicomputer for further work Acquiring a Meiko Computing Surface in he began experimenting with scientific applications by developing parallel programs for Householder s method reduction and then N body simulation as learning exercises and was surprised to find that both programs had nearly identical control structures Concluding that both fit an all pairs paradigm he then focused on exploring reusable parallel algorithm structures he termed programming paradigms or generic programs later popularly known as design patterns In Brinch Hansen s fifth book Studies in Computational Science Parallel Programming Paradigms was published with programs rewritten in SuperPascal a fully implemented publication language he created for parallel algorithms br br br Last years br In his later years Brinch Hansen published a retrospective of his most important papers The Search for Simplicity a text for a course in programming for non majors Programming for Everyone in Java a retrospective on the evolution of operating systems Classic Operating Systems From Batch Processing to Distributed Systems and a retrospective on the evolution of concurrent programming The Origin of Concurrent Programming From Semaphores to Remote Procedure Calls He self published a memoir A Programmer s Story The Life of a Computer Pioneer on his website br In Brinch Hansen was awarded the IEEE Computer Pioneer Award For pioneering development in operating systems and concurrent programming exemplified by work on the RC multiprogramming system monitors and Concurrent Pascal br On July Brinch Hansen died shortly after being diagnosed with terminal cancer br br br Personal life br Brinch Hansen met his wife Milena n e Hrastar on a class trip to Yugoslavia in They married in and had two children daughter Mette and son Thomas br br br Scientific contributions and influence br In a career spanning five decades Brinch Hansen made seminal contributions in the areas of operating systems concurrent computing and parallel and distributed computing that were influential in shaping the development of those fields and advancing them from ad hoc techniques to systematic engineering disciplines The influence of his work was amplified by his relentless search for simplicity his insistence on clarity writing and rewriting his papers many times before publishing them becoming one of the best explainers in the business and his commitment to testing concepts in working systems Brinch Hansen implemented and distributed working systems for new concepts he developed noting br br It is not uncommon for a computer scientist to make a proposal without testing whether it is any good in practice After spending days writing up the monitor proposal and years implementing it I can very well understand this temptation It is perhaps also sometimes a human response to the tremendous pressure on university professors to get funding and recognition fast br Nevertheless we must remember that only one thing counts in engineering Does it work not might it work or wouldn t it be nice if it did br br br Operating systems br The RC multiprogramming system introduced the now standard concept of an operating system kernel and the separation of mechanism and policy in operating system design Modern microkernel architectures trace their roots to the extensible nucleus architecture of the RC Improving microkernel performance was a major theme in operating system research for three decades after the RC br Brinch Hansen s text Operating System Principles was the first comprehensive textbook on operating systems Eventually published in six languages English Japanese German Czech Polish and Serbo Croatian it remained in print for decades and years after the RC system it described had become outdated In nearly two decades after its initial publication P J Plauger reviewed it saying br br This book is terribly dated It describes many of the RC s operating system algorithms The RC is slow small and starved for peripherals by today s standards The algorithms are presented in a subset of Pascal Why bother br The answer is that Brinch Hansen is one of the best explainers in the business He explains things clearly and to the point He has an eye for the general principle behind the example but manages to avoid unnecessary abstraction After all these years he is still a pleasure to read br In Association for Computing Machinery ACM members voted Operating System Principles a top classic book in a survey to choose out of print classic books to add to the ACM Digital Library Operating System Principles ranked th in the survey appearing on of ballots It is now available from the ACM Digital Library br Using Concurrent Pascal Brinch Hansen demonstrated that it was feasible to fully implement operating systems in high level languages and that doing so reduced the development effort by one to two orders of magnitude Furthermore entire operating systems could be published and understood in their entirety Brinch Hansen did precisely that in The Architecture of Concurrent Programs leading Roy Maddux and Harlan Mills to declare br br Part two of the book is indeed remarkable Here an entire operating system is visible with every line of program open to scrutiny There is no hidden mystery and after studying such extensive examples the reader feels that he could tackle similar jobs and that he could change the system at will Never before have we seen an operating system shown in such detail and in a manner so amenable to modification br br br Concurrent programming br Brinch Hansen and Hoare developed the monitor concept Brinch Hansen published the first monitor notation adopting the class concept of Simula and invented a queueing mechanism Hoare refined the rules of process resumption Brinch Hansen created the first implementation of monitors in Concurrent Pascal More than a dozen additional monitor based languages had been created by Simone Modula CSP k CCNPascal PLY Pascal Plus Mesa SB Mod Concurrent Euclid Pascalc Concurrent C Emerald Real time Euclid Pascal FC Turing Plus Predula br Concurrent Pascal was the first concurrent programming language the first language developed specifically for concurrent programming and more importantly the first language to demonstrate that it was possible to incorporate secure high level facilities for concurrency where the system could guarantee that processes access disjoint sets of variables only and do not interfere with each other in time dependent ways Hoare described it as an outstanding example of the best of academic research in this area br Source and portable code for Concurrent Pascal and the Solo operating system were distributed to at least companies and universities in countries resulting in its widespread adoption porting and adaptation in both industry and academia Greg Andrews observed that Concurrent Pascal and monitors greatly influenced most subsequent concurrent language proposals br Brinch Hansen s The Architecture of Concurrent Programs was the first book on concurrent programming and was eventually published in three languages English Japanese and German More than a dozen years after its publication P J Plauger observed br br Sure improvements have been made in the past dozen years We have better synchronization algorithms and fancier if not necessarily better languages with concurrency control But you won t find a better overview of concurrent programming than this book At least I haven t found one br In ACM members voted The Architecture of Concurrent Programs a top classic book ranking it th in the survey and appearing on of ballots It is now available from the ACM Digital Library br br br Distributed computing and remote procedure call br Remote procedure calls used in modern operating systems trace their roots back to the RC multiprogramming system which used a request response communication protocol for process synchronization br In his paper on distributed processes Brinch Hansen proposed a language for distributed computing based on external requests consisting of procedure calls between processes This later became known in an operating system context as the remote procedure call br Later Brinch Hansen developed two languages extending Hoare s CSP message passing paradigm with parallel recursion and showed how to efficiently implement such br br br Honors and awards br Doctor Technices Technical University of Denmark for The Architecture of Concurrent Programs br First Henry Salvatori Professor of Computer Science University of Southern California br IEEE Fellow br Distinguished Professor Syracuse University br Chancellor s Medal Syracuse University br IEEE Computer Pioneer Award for pioneering development in operating systems and concurrent programming exemplified by work on the RC multiprogramming system monitors and Concurrent Pascal br br br Programming languages br Concurrent Pascal br Distributed Processes br Edison br Joyce br SuperPascal br br br Quotations br Writing is a rigorous test of simplicity It is just not possible to write convincingly about ideas that cannot be understood br Programming is the art of writing essays in crystal clear prose and making them executable br br br Publications br Books br Operating System Principles ISBN br The Architecture of Concurrent Programs ISBN br Programming a Personal Computer ISBN br Brinch Hansen on Pascal Compilers ISBN br Studies in Computational Science Parallel Programming Paradigms ISBN br The Search for Simplicity Essays in Parallel Programming ISBN br Programming for Everyone in Java ISBN br Classic Operating Systems From Batch Processing to Distributed Systems editor ISBN X br The Origin of Concurrent Programming From Semaphores to Remote Procedure Calls editor ISBN br A Programmer s Story The Life of a Computer Pioneer available at http brinch hansen net br Selected papers br The Cobol compiler for the Siemens BIT with Roger House br Design Considerations for the RC Computer Regnecentralen Copenhagen Denmark with Peter Kraft br The logical structure of the RC computer BIT br The RC real time control system at Pulawy BIT br RC Software Multiprogramming System Part I General Description Regnecentralen Copenhagen Denmark br RC Software Multiprogramming System Complete Regnecentralen Copenhagen Denmark br RC Computer Reference Manual Regnecentralen Copenhagen Denmark br The nucleus of a multiprogramming system Communications of the ACM April br An outline of a course on operating system principles in Operating Systems Techniques Proceedings of a Seminar at Queen s University Belfast Northern Ireland August September C A R Hoare and R H Perrott Eds Academic Press New York br Structured multiprogramming Communications of the ACM July br Shared Classes in Operating System Principles Section Class Concept Prentice Hall Englewood Cliffs NJ July br Testing a multiprogramming system Software Practice and Experience April June br The programming language Concurrent Pascal IEEE Transactions on Software Engineering June br The Solo operating system a Concurrent Pascal program Software Practice and Experience April June br The Solo operating system processes monitors and classes Software Practice and Experience April June br The Programmer as a Young Dog English translation by the author of Programm ren som hvalp In Niels Ivar Bech en epoke i edbudviklingen i Danmark P Sveistrup P Naur H B Hansen and C Gram Eds in Danish Data Copenhagen Denmark br Experience with modular concurrent programming IEEE Transactions on Software Engineering March br Design Principles in The Architecture of Concurrent Programs Chapter Design Principles Prentice Hall Englewood Cliffs NJ July br Network A multiprocessor program IEEE Transactions on Software Engineering May br Distributed processes A concurrent programming concept Communications of the ACM November br Reproducible testing of monitors Software Practice and Experience November December br A keynote address on concurrent programming Keynote address for the IEEE Computer Software Applications Conference Chicago IL November Computer May br The Design of Edison Software Practice and Experience April br Joyce A programming language for distributed systems Software Practice and Experience January br The Joyce Language Report Software Practice and Experience June br A multiprocessor implementation of Joyce Software Practice and Experience June br The nature of parallel programming Inaugural Symposium at Syracuse University Syracuse NY March In Natural and Artificial Parallel Computation M A Arbib and J A Robinson Eds The MIT Press Cambridge MA br The linear search rediscovered Structured Programming br Householder reduction of linear equations ACM Computing Surveys June br Monitors and Concurrent Pascal A personal history nd ACM Conference on the History of Programming Languages Cambridge MA April In SIGPLAN Notices March br Model programs for computational science A programming methodology for multicomputers Concurrency Practice and Experience August br Parallel Cellular Automata A model program for computational science Concurrency Practice and Experience August br Multiple length division revisited A tour of the minefield Software Practice and Experience June br SuperPascal A publication language for parallel scientific computing Concurrency Practice and Experience August br Interference control in SuperPascal A block structured language parallel language The Computer Journal br Efficient parallel recursion SIGPLAN Notices December br The All Pairs Pipeline in Studies in Computational Science Chapter The all pairs pipeline Prentice Hall Englewood Cliffs NJ March br Balancing a Pipeline in Studies in Computational Science Chapter Balancing a pipeline Prentice Hall Englewood Cliffs NJ March br Java s insecure parallelism SIGPLAN Notices April br The evolution of operating systems In Classic Operating Systems From Batch Processing to Distributed Systems P Brinch Hansen Ed Springer Verlag New York br The invention of concurrent programming In The Origin of Concurrent Programming From Semaphores to Remote Procedure Calls P Brinch Hansen Ed Springer Verlag New York br br br See also br List of pioneers in computer science br br br br br br External links br br Official website memoirs selected papers detailed bibliography br Early papers by Per Brinch Hansen at Danish Datamuseum