title: Thoth (operating system)
id: 65514314
Thoth is a real time message passing operating system OS developed at the University of Waterloo in Waterloo Ontario Canada br br br History br Thoth was developed at the University of Waterloo in Waterloo Ontario Canada The curriculum at Waterloo includes a Real Time Operating Systems course and an associated Train lab where students must develop a real time operating system RTOS to control a model track with multiple trains br In the B programming language a derivative of BCPL was brought to Waterloo by Stephen C Johnson while on sabbatical from Bell Labs A new language derived from B named Eh was developed at Waterloo Thoth was written originally in Eh with some assembly language br Initial development of Thoth occurred on a Honeywell computer It was first run on a Data General Nova in May and was next ported to a Texas Instruments TI in August br In October the University of Waterloo published Laurence S Melen s Master s Thesis titled A Portable Real Time Executive Thoth br Eh was later upgraded in part with the addition of data types and renamed Zed Thoth was then rewritten in Zed br One of the early principal developers of Thoth was David Cheriton Cheriton would go on to develop the Verex kernel and the V System OS both influenced by Thoth Another early developer was Michael Malcolm who would later found Waterloo Microsystems Network Appliances Inc Blue Coat Systems and Kaliedescape several of whose operating systems are believed to have been derived from or influenced by Thoth br Certain papers describe DEMOS as the inspiration for Thoth As prior art Cheriton cited Per Brinch Hansen s RC then listed Thoth DEMOS and Accent together as later developments Other influences on the development of Thoth included Multics Data General s RTOS Honeywell GCLS and Unix Later references cite Thoth as the original implementation of its particular use of synchronous message passing and multiprocess program structure which were subsequently applied by other projects br Work on Thoth ended around br br br Features br Thoth was developed to meet four goals br br Easily portable to other hardware br Programs run as a set of inexpensive cooperating concurrent processes with efficient inter process communications IPC br Suitable for real time uses as to system response to external events br Adaptable and scalable to a wide range of real time uses br Thoth exposes the same abstract machine to application software regardless of the underlying physical machine This abstract machine was defined with certain minimal requirements such that meeting these requirements allowed a given computer to be included in the Thoth Domain of potential Thoth port targets br Processes running under Thoth can be grouped into Teams All processes within a team share a common address space and can share data This is similar to other systems concepts of lightweight processes or threads Processes not members of the same team communicate using Thoth s IPC br Inter Process Communication in Thoth is primarily accomplished by means of synchronous message passing This approach greatly simplified message queueing br Although the term was not current when the original papers were written Thoth has been called a microkernel br Thoth s synchronous message passing IPC lent itself to the application of an anthropomorphic programming model building on the work of Carl Hewitt s actor model and of Smalltalk br br br Legacy br The Thoth operating system provided either the basis or the inspiration for several later projects some of which are listed below br br br Academic br The microNet distributed file server system at the University of Waterloo ran on an operating system named WatSys that was similar to Thoth and Port WatSys debuted in br The National Research Council of Canada was the development home of the Harmony operating system a derivative of Thoth oriented towards real time robot control br Cheriton took a position at the University of British Columbia where he was involved in developing Verex and Distributed Verex using many of the ideas he had earlier explored in Thoth br Cheriton later moved to Stanford University in the US where he developed the V System which continued to build on earlier work with Thoth br The Sylvan Multiprocessing system s architecture included a coprocessor that implemented Thoth s synchronous message passing primitives and Ada s extended rendezvous in hardware br Thoth and its message passing IPC were used to underpin a multi process paint program that employed the anthropomorphic programming model br Thoth s message passing semantics were part of an experimental parallel processing version of the computer algebra system CAS Maple br The distributed Process Execution And Communication Environment PEACE was developed for high performance applications The paper cites Thoth as a major foundation for the project br The Eindhoven Multi Processor System EMPS executive put an emphasis on efficiency Thoth provided the inspiration for the design of the EMPS kernel br An experimental human computer interface environment named the Room system was built on Waterloo Port which was derived from Thoth and which used its IPC techniques The Room paper references earlier Thoth papers br The Flash web server a research project with an emphasis on efficiency and portability was said to resemble Thoth in its method of multi process structuring and concept of process teams communicating via message passing br br br Commercial br Gordon Bell and Dan Dodge developers of the QNX message passing realtime operating system both worked with Thoth while they were students at Waterloo br AT T s System Office Communication System was controlled by the Oryx kernel and the Pecos set of essential system processes jointly referred to as Oryx Pecos It used ideas from Thoth DEMOS and an internal AT T project br The commercial Waterloo Port network operating system was derived from Thoth The associated Zed language was upgraded to become the PORT language for Waterloo Port br Hayes Microcomputer Products acquired Waterloo Microsystems and rebranded and upgraded the Waterloo Port product to create LANstep br The Auspex storage company produced the Functional Multiprocessing Kernel FMK which employed concepts identified as having been first developed in Thoth Unlike the V System and Waterloo Port FMK had no memory management br Early versions of Network Appliance Inc s storage appliance operating system have been described as being very similar to Thoth NetApp s OS was written by David Hitz who had previously been at Auspex br In the CacheFlow web acceleration appliance company released their CacheOS which was based on Thoth In CacheFlow was renamed Blue Coat Systems and with the addition of a policy engine CacheOS became the Secure Gateway Operating System SGOS br br br br br br Further reading br Malcolm Michael A Stafford Gary J September The Thoth Assembler Writing Kit PDF University of Waterloo Computer Science Department Technical report br Cheriton D R Murphy W September Verex System Programmer s Manual Technical report University of British Columbia br Cheriton David R Designing an Operating System to be Verifiable Technical report br Cheriton D R September The Verex Kernel Technical report University of British Columbia br Cheriton D R November The Design of a Distributed Kernel Proceedings of ACM National Conference br Wallis Peter J L Portable programming Macmillan ISBN br Cheriton David R The Thoth system multi process structuring and portability North Holland ISBN br Malcolm Michael Alexander Dyment Doug December Experience designing the waterloo port user interface Proceedings of the ACM SIGSMALL symposium on Personal and small computers SIGSMALL pp doi ISBN S CID 