title: ChibiOS/RT
id: 14415710
ChibiOS RT is a compact and fast real time operating system supporting multiple architectures and released under a mix of the GNU General Public License version GPL and the Apache License depending on module It is developed by Giovanni Di Sirio br Commercial licenses are available from ChibiOS Additional products include ChibiOS HAL a hardware abstraction layer compatible with ChibiOS RT and ChibiStudio a free integrated development environment based on Eclipse the GNU Compiler Collection and the OpenOCD Joint Test Action Group JTAG debugging pod br br br Metrics br ChibiOS RT is designed for embedded applications on microcontrollers of and bits Size and execution efficiency are the main project goals As reference the kernel size can range from a minimum of KiB up to a maximum of KiB with all the subsystems activated on a STM Cortex M processor The kernel can achieve over created terminated threads per second and can perform a context switch in microseconds on an STM MHz Similar metrics for all the supported platforms are included in the source code distribution as test reports br br br Features br The ChibiOS RT microkernel supports br br Preemptive multithreading br priority queue levels br Round robin scheduling for threads at the same priority level br Software timers br Counting semaphores br Mutexes with support for the priority inheritance algorithm br Condition variables br Synchronous and asynchronous Messages br Event flags and handlers br Queues br Synchronous and asynchronous I O with timeout capability br Thread safe memory heap and memory pool allocators br Hardware Abstraction Layer with support for ADC CAN GPT general purpose timer EXT I C ICU MAC MMC SD PAL PWM RTC SDC Serial SPI and USB drivers br Support for the LwIP and uIP TCP IP stacks br Support for the FatFs file system library br All system objects such as threads semaphores timers etc can be created and deleted at runtime There is no upper limit except for the available memory To increase system reliability the kernel architecture is entirely static a memory allocator is not needed but is available as an option and there are no data structures with upper size limits like tables or arrays The system application programming interfaces APIs are designed to not have error conditions such as error codes or exceptions br The RTOS is designed for applications on embedded systems devices and includes demo applications for various microcontrollers br br STMicroelectronics STM F xx STM F xx STM F xx STM F xx STM L xx STM F xx STM S x STM S x STM L x ST Freescale SPC x MPC xx br NXP Semiconductors LPC xx LPC Uxx LPC xx LPC br Atmel AT SAM S AT SAM X megaAVR br Texas Instruments TI MSP x TM C G TM C br Microchip Technology PIC MX br Contributed ports are also available for the Coldfire and H S families br ChibiOS RT has also been ported to the Raspberry Pi and the following device drivers have been implemented Port GPIO Serial GPT General Purpose Timer I C SPI and PWM br It is also possible to run the kernel in a Win process in a software I O emulation mode allowing easy application development without the need for physical hardware An example is included for MinGW compiler br br br uGFX br ChibiOS RT is fully supported by the graphical user interface GUI toolkit GFX formerly named ChibiOS GFX br br br See also br br Comparison of open source operating systems br br br br br br External links br Official website