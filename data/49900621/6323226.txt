title: SymbOS
id: 6323226
SYmbiosis Multitasking Based Operating System SymbOS is a multitasking operating system for Zilog Z based bit computer systems br Unlike early bit operating systems SymbOS is based on a microkernel which provides preemptive and priority oriented multitasking and manages random access memory RAM with a size of up to KB It has a Windows like graphical user interface GUI supports hard disks with a capacity of up to GB and can already be booted on an unexpanded Amstrad CPC a K MSX and an Amstrad PCW br As of August it is available for the Amstrad CPC series of computers all MSX models starting from the MSX standard MSX with V graphics chip all Amstrad PCW models CPC TREX C ONE and the Enterprise computers br br br Motivation and rationale br br SymbOS was originally started as an experiment to find out to what extent it is possible to implement a multitasking operating system with a windowed GUI on an bit computer from GEOS contributed to the motivation but the structure and features of SymbOS aren t similar to that system The release in proved that such a mini windows system is possible on a then year old home computer with only quantitative limitations SymbOS is one of the largest retro computing software projects of recent years One of the goals of the project is to allow these old machines to be used like a modern PC using hardware extensions br Although only an bit CPU the Z can run a preemptive multitasking operating system Features such as memory protection which the Z lacks are not essential in such an OS For example AmigaOS also lacks memory protection The MP M OS proved that multitasking on the Z CPU was possible Yet it was generally unavailable for home computers br While the MOS Technology cannot move the stack pointer the Z can freely relocate it to any position in memory which makes it easier to implement preemptive multitasking The existence of an alternative register set accelerates context switching between tasks dramatically The restriction of Z system to a KB address space can be solved with bank switching In this way computers like the Amstrad CPC and PCW MSX Enterprise or SAM Coup can access hundreds or thousands of kilobytes of memory br br br Design br SymbOS includes a microkernel which can perform task management memory management and inter process communication br br br Task management br For task management a combination of preemptive and cooperative multitasking was chosen which makes different task priorities possible Preemptive means that tasks are interrupted after a certain amount of time by the operating system in order to share the CPU time with other tasks Cooperatively means that a task stops using CPU time by itself It does that if it s finished with its current job or waiting for a certain event Because of this combination it is possible to assign priorities Tasks with low priority get CPU time only if all tasks with higher priorities are not then working br br br Memory and banking management br br Memory management divides the entire RAM into small byte blocks which can be assigned dynamically Applications are always running in a secondary KB RAM bank where no memory space is occupied by the operating system or the video memory That makes it possible to reserve up to KB in one piece br Banking management ensures that the system can administer memory with a size of up to one megabyte even though the Z CPU has only a bit address bus It makes transparent access to memory and functions placed in other KB banks possible br br br Interprocess communication br Communication between different tasks and the operating system usually does not take place via calls but is done via messages This is necessary inside a multitasking environment to avoid organization problems with the stack global variables and shared system resources The SymbOS kernel supports synchronous and asynchronous IPC br br br File system management br SymbOS supports the file systems CP M AMSDOS and File Allocation Table FAT on all platforms With the last one SymbOS can address mass storage devices with a capacity of up to GB Also the ability to administer files with a size of up to GB is uncommon for an bit system Because of the FAT support data exchange with other computers is quite easy as most and bit operating systems do support the three FAT file systems br br br Interface br br The graphical user interface GUI of SymbOS works in a fully object oriented manner The look and feel mimics that of Microsoft Windows It contains the well known task bar with the clock and the start menu and can open up to windows that can be moved resized and scrolled The whole system is written in optimized assembly language meaning that the GUI runs as fast as the host machine supports br Content of a window is defined with controls that are primitive GUI elements such as sliders check boxes text lines buttons or graphics The background or invisible areas of a window don t need to be saved in a separate bitmap buffer If an area needs to be restored on the display its contents will be redrawn instead This makes SymbOS GUI much more memory friendly compared to most other bit GUIs br br br Applications br There are several standard applications available for SymbOS which are designed to resemble similar software available on other operating systems Examples include Notepad SymCommander similar to Norton Commander SymShell cmd exe SymZilla Mozilla Firefox SymPlay QuickTime SymAmp Winamp and Minesweeper br br br Commands br The following list of commands is supported by SymShell br br br Development and release br SymbOS was originally developed for the Amstrad CPC Its modular structure with strict separation of general and hardware components makes porting to other Z based systems comparatively easy br The MSX computers starting with the MSX standard have been supported since summer The Amstrad PCW port has been available since August Versions for the Enterprise the SAM Coup and such clones of ZXSpectrum as ATM turbo and ZX Evolution BaseConf are possible too as they fulfill the requirements for SymbOS br By keeping a basic condition for an operating system the strict separation of hardware and application software by an intermediate layer SymbOS applications run platform independently on each computer and doesn t need to be adapted for different systems with the obvious exception of applications that directly access particular hardware br br br See also br Contiki br MSX DOS br OS br br br br br br External links br Official website br SymbOS installation help file br SymbOS mailing list br Page at the CPCWiki br SymbOS demo video running on a real MSX turboR GT with MP MSX cartridge