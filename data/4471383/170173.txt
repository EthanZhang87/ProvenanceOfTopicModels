title: Interface (object-oriented programming)
id: 170173
In object oriented programming an interface or protocol type is a data type that acts as an abstraction of a class It describes a set of method signatures the implementations of which may be provided by multiple classes that are otherwise not necessarily related to each other A class which provides the methods listed in a protocol is said to adopt the protocol or to implement the interface br If objects are fully encapsulated then the protocol is the only way in which they may be accessed by other objects For example in Java the Comparable interface specifies a method compareTo which implementing classes must implement This means that a sorting method for example can sort a collection of any objects of types which implement the Comparable interface without having to know anything about the inner nature of the class except that two of these objects can be compared by means of compareTo br Some programming languages provide explicit language support for protocols Ada C D Dart Delphi Go Java Logtalk Object Pascal Objective C OCaml PHP Racket Seed Swift Python In languages supporting multiple inheritance such as C interfaces are implemented as abstract classes br In languages without explicit support protocols are often still present as conventions This is known as duck typing For example in Python any class can implement an iter method and be used as a collection br Type classes in languages like Haskell or module signatures in ML and OCaml are used for many of the things that protocols are used for br In Rust interfaces are called traits br br br See also br Concept generic programming br Delegation programming br Protocols in Objective C br Class computer science br Encapsulation computer science br Public interface br Interface Java br Application programming interface br Interface computing br List of basic computer science topics br br br Notes br br br 