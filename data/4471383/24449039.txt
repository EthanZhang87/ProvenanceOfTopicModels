title: Refinement type
id: 24449039
In type theory a refinement type is a type endowed with a predicate which is assumed to hold for any element of the refined type Refinement types can express preconditions when used as function arguments or postconditions when used as return types for instance the type of a function which accepts natural numbers and returns natural numbers greater than may be written as br br br br f br br br N br br br br n br br br N br br br br br br br n br br br br br br displaystyle f mathbb N rightarrow n in mathbb N n br br Refinement types are thus related to behavioral subtyping br br br History br The concept of refinement types was first introduced in Freeman and Pfenning s Refinement types for ML which presents a type system for a subset of Standard ML The type system preserves the decidability of ML s type inference whilst still allowing more errors to be detected at compile time In more recent times refinement type systems have been developed for languages such as Haskell TypeScript Rust and Scala br br br See also br Liquid Haskell br Dependent types br br br 