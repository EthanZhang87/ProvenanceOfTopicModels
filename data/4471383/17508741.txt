title: Manifest typing
id: 17508741
In computer science manifest typing is explicit identification by the software programmer of the type of each variable being declared For example if variable X is going to store integers then its type must be declared as integer The term manifest typing is often used with the term latent typing to describe the difference between the static compile time type membership of the object and its run time type identity br In contrast some programming languages use implicit typing a k a type inference where the type is deduced from context at compile time or allow for dynamic typing in which the variable is just declared and may be assigned a value of any type at runtime br br br Examples br Consider the following example written in the C programming language br br The variables s x and y were declared as a character array floating point number and an integer respectively The type system rejects at compile time such fallacies as trying to add s and x Since C type inference can be used in C with the keyword auto Using that feature the preceding example could become br br Similarly to the second example in Standard ML the types do not need to be explicitly declared Instead the type is determined by the type of the assigned expression br br There are no manifest types in this program but the compiler still infers the types string real and int for them and would reject the expression s x as a compile time error br br br br br br External links br Manifest typing