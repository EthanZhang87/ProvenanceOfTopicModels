title: WireGuard
id: 57257634
WireGuard is a communication protocol and free and open source software that implements encrypted virtual private networks VPNs It aims to be lighter and better performing than IPsec and OpenVPN two common tunneling protocols The WireGuard protocol passes traffic over UDP br In March the Linux version of the software reached a stable production release and was incorporated into the Linux kernel and backported to earlier Linux kernels in some Linux distributions The Linux kernel components are licensed under the GNU General Public License GPL version other implementations are under GPLv or other free open source licenses br The name WireGuard is a registered trademark of Jason A Donenfeld br br br Protocol br WireGuard uses the following br br Curve for key exchange br ChaCha for symmetric encryption br Poly for message authentication codes br SipHash for hashtable keys br BLAKE s for cryptographic hash function br HKDF for key derivation function br UDP based only br Base encoded private keys public keys and preshared keys br In May researchers from INRIA published a machine checked proof of the WireGuard protocol produced using the CryptoVerif proof assistant br br br Optional pre shared symmetric key mode br WireGuard supports pre shared symmetric key mode which provides an additional layer of symmetric encryption to mitigate future advances in quantum computing This addresses the risk that traffic may be stored until quantum computers are capable of breaking Curve at which point traffic could be decrypted Pre shared keys are usually troublesome from a key management perspective and might be more likely stolen but in the shorter term if the symmetric key is compromised the Curve keys still provide more than sufficient protection br br br Networking br WireGuard uses only UDP due to the potential disadvantages of TCP over TCP Tunneling TCP over a TCP based connection is known as TCP over TCP and doing so can induce a dramatic loss in transmission performance a problem known as TCP meltdown TCP meltdown occurs when a TCP connection is stacked on top of another The underlying layer may detect a problem and attempt to compensate and the layer above it then overcompensates because of that and this overcompensation causes said delays and degraded transmission performance br Its default server port is UDP br WireGuard fully supports IPv both inside and outside of tunnel It supports only layer for both IPv and IPv and can encapsulate v in v and vice versa br br br MTU overhead br The overhead of WireGuard breaks down as follows br br byte IPv header or bytes IPv header br byte UDP header br byte type br byte key index br byte nonce br N byte encrypted data br byte authentication tag br br br MTU operational considerations br Assuming the underlay network transporting the WireGuard packets maintains a bytes MTU configuring the WireGuard interface to bytes MTU for all involved peers is ideal for transporting IPv IPv traffic However when exclusively carrying legacy IPv traffic a higher MTU of bytes for the WireGuard interface suffices br From an operational perspective and for network configuration uniformity choosing to configure a MTU network wide for the WireGuard interfaces would be advantageous This approach ensures consistency and facilitates a smoother transition to enabling IPv for the WireGuard peers and interfaces in the future br br br Caveat br There may be situations where for instance a peer is behind a network with bytes MTU and a second peer is behind a wireless network such as an LTE network where often times the carrier opted to use an MTU that is far lower than bytes In such cases the underlying IP networking stack of the host will fragment the UDP encapsulated packet and send the packets through the packets inside the tunnel however will remain consistent and will not be required to fragment as PMTUD will detect the MTU between the peers in this example that would be bytes and send a fixed packet size between the peers br br br Extensibility br WireGuard is designed to be extended by third party programmes and scripts This has been used to augment WireGuard with various features including more user friendly management interfaces including easier setting up of keys logging dynamic firewall updates dynamic IP assignment and LDAP integration br Excluding such complex features from the minimal core codebase improves its stability and security For ensuring security WireGuard restricts the options for implementing cryptographic controls limits the choices for key exchange processes and maps algorithms to a small subset of modern cryptographic primitives If a flaw is found in any of the primitives a new version can be released that resolves the issue br br br Reception br A review by Ars Technica found that WireGuard was easy to set up and use used strong ciphers and had a minimal codebase that provided for a small attack surface br WireGuard has received funding from the Open Technology Fund and donations from Mullvad Private Internet Access IVPN the NLnet Foundation and OVPN br Oregon senator Ron Wyden has recommended to the National Institute of Standards and Technology NIST that they evaluate WireGuard as a replacement for existing technologies br br br Availability br br br Implementations br Implementations of the WireGuard protocol include br br Donenfeld s initial implementation written in C and Go br Cloudflare s BoringTun a user space implementation written in Rust br Matt Dunwoodie s implementation for OpenBSD written in C br Ryota Ozaki s wg implementation for NetBSD written in C br The FreeBSD implementation is written in C and shares most of the data path with the OpenBSD implementation br Native Windows kernel implementation named wireguard nt since August br AVM Fritz Box modem routers that support Fritz OS version and later Permits site to site WireGuard connections from version onwards br br br History br Early snapshots of the code base exist from June Four early adopters of WireGuard were the VPN service providers Mullvad AzireVPN IVPN and cryptostorm br On December David Miller primary maintainer of the Linux networking stack accepted the WireGuard patches into the net next maintainer tree for inclusion in an upcoming kernel br On January Linus Torvalds merged David Miller s net next tree and WireGuard entered the mainline Linux kernel tree br On March Debian developers enabled the module build options for WireGuard in their kernel config for the Debian version testing br On March WireGuard was incorporated into the Linux release tree The Windows version of the software remains at beta br On March Android developers added native kernel support for WireGuard in their Generic Kernel Image br On April NetworkManager developer Beniamino Galvani merged GUI support for WireGuard in GNOME br On May Matt Dunwoodie proposed patches for native kernel support of WireGuard in OpenBSD br On June after the work of Matt Dunwoodie and Jason A Donenfeld WireGuard support was imported into OpenBSD br On November Jason A Donenfeld released an update of the Windows package improving installation stability ARM support and enterprise features br On November WireGuard support was imported into the FreeBSD kernel br On January WireGuard support was added for preview in pfSense Community Edition CE development snapshots br In March kernel mode WireGuard support was removed from FreeBSD still in testing after an urgent code cleanup in FreeBSD WireGuard could not be completed quickly FreeBSD based pfSense Community Edition CE and pfSense Plus removed kernel based WireGuard as well br In May WireGuard support was re introduced back into pfSense CE and pfSense Plus development snapshots as an experimental package written by a member of the pfSense community Christian McDonald The WireGuard package for pfSense incorporates the ongoing kernel mode WireGuard development work by Jason A Donenfeld that was originally sponsored by Netgate br In June the official package repositories for both pfSense CE and pfSense Plus included the WireGuard package br In WireGuard got over Euros support from Germany s Sovereign Tech Fund br br br See also br Comparison of virtual private network services br Secure Shell SSH a cryptographic network protocol used to secure services over an unsecured network br br br Notes br br br 