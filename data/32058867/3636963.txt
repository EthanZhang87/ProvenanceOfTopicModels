title: Bouncy Castle (cryptography)
id: 3636963
Bouncy Castle is a collection of APIs used in cryptography It includes APIs for both the Java and the C programming languages The APIs are supported by a registered Australian charitable organization Legion of the Bouncy Castle Inc br Bouncy Castle is Australian in origin and therefore American restrictions on the export of cryptography from the United States do not apply to it br br br History br Bouncy Castle started when two colleagues were tired of having to re invent a set of cryptography libraries each time they changed jobs working in server side Java SE One of the developers was active in Java ME J ME at that time development as a hobby and a design consideration was to include the greatest range of Java VMs for the library including those on J ME This design consideration led to the architecture that exists in Bouncy Castle br The project founded in May was originally written in Java only but added a C API in The original Java API consisted of approximately lines of code including test code and provided support for J ME a JCE JCA provider and basic X certificate generation In comparison the release consists of lines of code including test code It supports the same functionality as the original release with a larger number of algorithms plus PKCS PKCS CMS S MIME OpenPGP DTLS TLS OCSP TSP CMP CRMF DVCS DANE EST and Attribute Certificates The C API is around lines of code and supports most of what the Java API does br Some key properties of the project are br br Strong emphasis on standards compliance and adaptability br Public support facilities include an issue tracker dev mailing list and a wiki all available on the website br Commercial support provided under resources for the relevant API listed on the Bouncy Castle website br On October a not for profit association the Legion of the Bouncy Castle Inc was established in the state of Victoria Australia by the core developers and others to take ownership of the project and support the ongoing development of the APIs The association was recognised as an Australian charity with a purpose of advancement in education and a purpose that is beneficial to the community by the Australian Charities and Not For Profits Commission on November The association was authorised to fundraise to support its purposes on November by Consumer Affairs Victoria br br br Architecture br br The Bouncy Castle architecture consists of two main components that support the base cryptographic capabilities These are known as the light weight API and the Java Cryptography Extension JCE provider Further components built upon the JCE provider support additional functionality such as PGP support S MIME etc br The low level or light weight API is a set of APIs that implement all the underlying cryptographic algorithms The APIs were designed to be simple enough to use if needed but provided the basic building blocks for the JCE provider The intent is to use the low level API in memory constrained devices JavaME or when easy access to the JCE libraries is not possible such as distribution in an applet As the light weight API is just Java code the Java virtual machine JVM does not impose any restrictions on the operation of the code and at early times of the Bouncy Castle history it was the only way to develop strong cryptography that was not crippled by the Jurisdiction Policy files that prevented JCE providers from performing strong encryption br The JCE compatible provider is built upon the low level APIs As such the source code for the JCE provider is an example of how to implement many of the common crypto problems using the low level API Many projects have been built using the JCE provider including an Open Source Certificate Authority EJBCA br br br Certified releases br The C and Java releases have FIPS Level certified streams as well These differ from the regular releases in that while the modules are designed in a similar fashion to the regular releases the low level APIs are quite different largely to support the enforcement of controls that FIPS requires when an algorithm is used In the case of the JCE level of the Java API the provider is still largely a drop in replacement for the regular release The first FIPS certified releases were made available in November with the latest Java version being assigned certification number and the latest C version being assigned certification number br br br Spongy Castle br The Android operating system as of early includes a customized version of Bouncy Castle Due to class name conflicts this prevents Android applications from including and using the official release of Bouncy Castle as is A third party project called Spongy Castle distributes a renamed version of the library to work around this issue br br br Stripy Castle br Originally it was assumed a FIPS version of Spongy Castle could also be done It turned out due to Android s DEX file processing that for FIPS purposes the provider needs to be installed on the device separate from the application The FIPS release for Android is now called Stripy Castle and is packaged under org stripycastle This was needed in order to avoid clashes with Android s version of Bouncy Castle as well as clashes for applications that might be using Spongy Castle and not requiring FIPS certified services br br br See also br Comparison of cryptography libraries br br br br br br External links br Official website