title: Homomorphic encryption
id: 4939073
Homomorphic encryption is a form of encryption that allows computations to be performed on encrypted data without first having to decrypt it The resulting computations are left in an encrypted form which when decrypted result in an output that is identical to that produced had the operations been performed on the unencrypted data Homomorphic encryption can be used for privacy preserving outsourced storage and computation This allows data to be encrypted and outsourced to commercial cloud environments for processing all while encrypted br Homomorphic encryption eliminates the need for processing data in the clear thereby preventing attacks that would enable a hacker to access that data while it is being processed using privilege escalation br For sensitive data such as healthcare information homomorphic encryption can be used to enable new services by removing privacy barriers inhibiting data sharing or increasing security to existing services For example predictive analytics in healthcare can be hard to apply via a third party service provider due to medical data privacy concerns But if the predictive analytics service provider could operate on encrypted data instead without having the decryption keys these privacy concerns are diminished Moreover even if the service provider s system is compromised the data would remain secure br br br Description br Homomorphic encryption is a form of encryption with an additional evaluation capability for computing over encrypted data without access to the secret key The result of such a computation remains encrypted Homomorphic encryption can be viewed as an extension of public key cryptography Homomorphic refers to homomorphism in algebra the encryption and decryption functions can be thought of as homomorphisms between plaintext and ciphertext spaces br Homomorphic encryption includes multiple types of encryption schemes that can perform different classes of computations over encrypted data The computations are represented as either Boolean or arithmetic circuits Some common types of homomorphic encryption are partially homomorphic somewhat homomorphic leveled fully homomorphic and fully homomorphic encryption br br Partially homomorphic encryption encompasses schemes that support the evaluation of circuits consisting of only one type of gate e g addition or multiplication br Somewhat homomorphic encryption schemes can evaluate two types of gates but only for a subset of circuits br Leveled fully homomorphic encryption supports the evaluation of arbitrary circuits composed of multiple types of gates of bounded pre determined depth br Fully homomorphic encryption FHE allows the evaluation of arbitrary circuits composed of multiple types of gates of unbounded depth and is the strongest notion of homomorphic encryption br For the majority of homomorphic encryption schemes the multiplicative depth of circuits is the main practical limitation in performing computations over encrypted data Homomorphic encryption schemes are inherently malleable In terms of malleability homomorphic encryption schemes have weaker security properties than non homomorphic schemes br br br History br Homomorphic encryption schemes have been developed using different approaches Specifically fully homomorphic encryption schemes are often grouped into generations corresponding to the underlying approach br br br Pre FHE br The problem of constructing a fully homomorphic encryption scheme was first proposed in within a year of publishing of the RSA scheme For more than years it was unclear whether a solution existed During that period partial results included the following schemes br br RSA cryptosystem unbounded number of modular multiplications br ElGamal cryptosystem unbounded number of modular multiplications br Goldwasser Micali cryptosystem unbounded number of exclusive or operations br Benaloh cryptosystem unbounded number of modular additions br Paillier cryptosystem unbounded number of modular additions br Sander Young Yung system after more than years solved the problem for logarithmic depth circuits br Boneh Goh Nissim cryptosystem unlimited number of addition operations but at most one multiplication br Ishai Paskin cryptosystem polynomial size branching programs br br br First generation FHE br Craig Gentry using lattice based cryptography described the first plausible construction for a fully homomorphic encryption scheme in Gentry s scheme supports both addition and multiplication operations on ciphertexts from which it is possible to construct circuits for performing arbitrary computation The construction starts from a somewhat homomorphic encryption scheme which is limited to evaluating low degree polynomials over encrypted data it is limited because each ciphertext is noisy in some sense and this noise grows as one adds and multiplies ciphertexts until ultimately the noise makes the resulting ciphertext indecipherable br Gentry then shows how to slightly modify this scheme to make it bootstrappable i e capable of evaluating its own decryption circuit and then at least one more operation Finally he shows that any bootstrappable somewhat homomorphic encryption scheme can be converted into a fully homomorphic encryption through a recursive self embedding For Gentry s noisy scheme the bootstrapping procedure effectively refreshes the ciphertext by applying to it the decryption procedure homomorphically thereby obtaining a new ciphertext that encrypts the same value as before but has lower noise By refreshing the ciphertext periodically whenever the noise grows too large it is possible to compute an arbitrary number of additions and multiplications without increasing the noise too much br Gentry based the security of his scheme on the assumed hardness of two problems certain worst case problems over ideal lattices and the sparse or low weight subset sum problem Gentry s Ph D thesis provides additional details The Gentry Halevi implementation of Gentry s original cryptosystem reported a timing of about minutes per basic bit operation Extensive design and implementation work in subsequent years have improved upon these early implementations by many orders of magnitude runtime performance br In Marten van Dijk Craig Gentry Shai Halevi and Vinod Vaikuntanathan presented a second fully homomorphic encryption scheme which uses many of the tools of Gentry s construction but which does not require ideal lattices Instead they show that the somewhat homomorphic component of Gentry s ideal lattice based scheme can be replaced with a very simple somewhat homomorphic scheme that uses integers The scheme is therefore conceptually simpler than Gentry s ideal lattice scheme but has similar properties with regards to homomorphic operations and efficiency The somewhat homomorphic component in the work of Van Dijk et al is similar to an encryption scheme proposed by Levieil and Naccache in and also to one that was proposed by Bram Cohen in br Cohen s method is not even additively homomorphic however The Levieil Naccache scheme supports only additions but it can be modified to also support a small number of multiplications Many refinements and optimizations of the scheme of Van Dijk et al were proposed in a sequence of works by Jean S bastien Coron Tancr de Lepoint Avradip Mandal David Naccache and Mehdi Tibouchi Some of these works included also implementations of the resulting schemes br br br Second generation FHE br The homomorphic cryptosystems of this generation are derived from techniques that were developed starting in by Zvika Brakerski Craig Gentry Vinod Vaikuntanathan and others These innovations led to the development of much more efficient somewhat and fully homomorphic cryptosystems These include br br The Brakerski Gentry Vaikuntanathan BGV scheme building on techniques of Brakerski Vaikuntanathan br The NTRU based scheme by Lopez Alt Tromer and Vaikuntanathan LTV br The Brakerski Fan Vercauteren BFV scheme building on Brakerski s scale invariant cryptosystem br The NTRU based scheme by Bos Lauter Loftus and Naehrig BLLN building on LTV and Brakerski s scale invariant cryptosystem br The security of most of these schemes is based on the hardness of the Ring Learning With Errors RLWE problem except for the LTV and BLLN schemes that rely on an overstretched variant of the NTRU computational problem This NTRU variant was subsequently shown vulnerable to subfield lattice attacks which is why these two schemes are no longer used in practice br All the second generation cryptosystems still follow the basic blueprint of Gentry s original construction namely they first construct a somewhat homomorphic cryptosystem and then convert it to a fully homomorphic cryptosystem using bootstrapping br A distinguishing characteristic of the second generation cryptosystems is that they all feature a much slower growth of the noise during the homomorphic computations Additional optimizations by Craig Gentry Shai Halevi and Nigel Smart resulted in cryptosystems with nearly optimal asymptotic complexity Performing br br br br T br br br displaystyle T br br operations on data encrypted with security parameter br br br br k br br br displaystyle k br br has complexity of only br br br br T br br br p br o br l br y br l br o br g br br br k br br br br displaystyle T cdot mathrm polylog k br br These optimizations build on the Smart Vercauteren techniques that enable packing of many plaintext values in a single ciphertext and operating on all these plaintext values in a SIMD fashion Many of the advances in these second generation cryptosystems were also ported to the cryptosystem over the integers br Another distinguishing feature of second generation schemes is that they are efficient enough for many applications even without invoking bootstrapping instead operating in the leveled FHE mode br br br Third generation FHE br In Craig Gentry Amit Sahai and Brent Waters GSW proposed a new technique for building FHE schemes that avoids an expensive relinearization step in homomorphic multiplication Zvika Brakerski and Vinod Vaikuntanathan observed that for certain types of circuits the GSW cryptosystem features an even slower growth rate of noise and hence better efficiency and stronger security Jacob Alperin Sheriff and Chris Peikert then described a very efficient bootstrapping technique based on this observation br These techniques were further improved to develop efficient ring variants of the GSW cryptosystem FHEW and TFHE The FHEW scheme was the first to show that by refreshing the ciphertexts after every single operation it is possible to reduce the bootstrapping time to a fraction of a second FHEW introduced a new method to compute Boolean gates on encrypted data that greatly simplifies bootstrapping and implemented a variant of the bootstrapping procedure The efficiency of FHEW was further improved by the TFHE scheme which implements a ring variant of the bootstrapping procedure using a method similar to the one in FHEW br br br Fourth generation FHE br In Cheon Kim Kim and Song CKKS proposed an approximate homomorphic encryption scheme that supports a special kind of fixed point arithmetic that is commonly referred to as block floating point arithmetic The CKKS scheme includes an efficient rescaling operation that scales down an encrypted message after a multiplication For comparison such rescaling requires bootstrapping in the BGV and BFV schemes The rescaling operation makes CKKS scheme the most efficient method for evaluating polynomial approximations and is the preferred approach for implementing privacy preserving machine learning applications The scheme introduces several approximation errors both nondeterministic and deterministic that require special handling in practice br A article by Baiyu Li and Daniele Micciancio discusses passive attacks against CKKS suggesting that the standard IND CPA definition may not be sufficient in scenarios where decryption results are shared The authors apply the attack to four modern homomorphic encryption libraries HEAAN SEAL HElib and PALISADE and report that it is possible to recover the secret key from decryption results in several parameter configurations The authors also propose mitigation strategies for these attacks and include a Responsible Disclosure in the paper suggesting that the homomorphic encryption libraries already implemented mitigations for the attacks before the article became publicly available Further information on the mitigation strategies implemented in the homomorphic encryption libraries has also been published br br br Partially homomorphic cryptosystems br In the following examples the notation br br br br br br E br br br br x br br br br displaystyle mathcal E x br br is used to denote the encryption of the message br br br br x br br br displaystyle x br br br Unpadded RSA br If the RSA public key has modulus br br br br n br br br displaystyle n br br and encryption exponent br br br br e br br br displaystyle e br br then the encryption of a message br br br br m br br br displaystyle m br br is given by br br br br br br E br br br br m br br br br m br br e br br br br br mod br br br br br n br br br displaystyle mathcal E m m e bmod n br br The homomorphic property is then br br br br br br br br br br br E br br br br br m br br br br br br br br br E br br br br br m br br br br br br br br br br br m br br br br br e br br br br m br br br br br e br br br br br mod br br br br br n br br br br br br br br br br m br br br br br br m br br br br br br br br e br br br br br mod br br br br br n br br br br br br br br br br E br br br br br m br br br br br br br m br br br br br br br br br br br br displaystyle begin aligned mathcal E m cdot mathcal E m m e m e bmod n pt m m e bmod n pt mathcal E m cdot m end aligned br br br ElGamal br In the ElGamal cryptosystem in a cyclic group br br br br G br br br displaystyle G br br of order br br br br q br br br displaystyle q br br with generator br br br br g br br br displaystyle g br br if the public key is br br br br br G br br q br br g br br h br br br br displaystyle G q g h br br where br br br br h br br br g br br x br br br br br displaystyle h g x br br and br br br br x br br br displaystyle x br br is the secret key then the encryption of a message br br br br m br br br displaystyle m br br is br br br br br br E br br br br m br br br br br g br br r br br br br m br br br h br br r br br br br br br displaystyle mathcal E m g r m cdot h r br br for some random br br br br r br br br br br br br q br br br br br br displaystyle r in ldots q br br The homomorphic property is then br br br br br br br br br br br E br br br br br m br br br br br br br br br E br br br br br m br br br br br br br br br br br br g br br br r br br br br br br br br br m br br br br br br br h br br br r br br br br br br br br br br g br br br r br br br br br br br br br m br br br br br br br h br br br r br br br br br br br br br br br br br br br br br g br br br r br br br br br br br r br br br br br br br br br br m br br br br br br br m br br br br br br br h br br br r br br br br br br br r br br br br br br br br br br br br br br br br br E br br br br br m br br br br br br br m br br br br br br br br br br br br br displaystyle begin aligned mathcal E m cdot mathcal E m g r m cdot h r g r m cdot h r pt g r r m cdot m h r r pt mathcal E m cdot m end aligned br br br Goldwasser Micali br In the Goldwasser Micali cryptosystem if the public key is the modulus br br br br n br br br displaystyle n br br and quadratic non residue br br br br x br br br displaystyle x br br then the encryption of a bit br br br br b br br br displaystyle b br br is br br br br br br E br br br br b br br br br x br br b br br br br r br br br br br br br mod br br br br br n br br br displaystyle mathcal E b x b r bmod n br br for some random br br br br r br br br br br br br n br br br br br br displaystyle r in ldots n br br The homomorphic property is then br br br br br br br br br br br E br br br br br b br br br br br br br br br E br br br br br b br br br br br br br br br br br x br br br b br br br br br br br br r br br br br br br br br br x br br br b br br br br br br br br r br br br br br br br br br br mod br br br br br n br br br br br br br br br x br br br b br br br br br br br b br br br br br br br br br r br br br br br br r br br br br br br br br br br br br br mod br br br br br n br br br br br br br br br br E br br br br br b br br br br br br br b br br br br br br br br br br br br br displaystyle begin aligned mathcal E b cdot mathcal E b x b r x b r bmod n pt x b b r r bmod n pt mathcal E b oplus b end aligned br br br where br br br br br br br displaystyle oplus br br denotes addition modulo i e exclusive or br Benaloh br In the Benaloh cryptosystem if the public key is the modulus br br br br n br br br displaystyle n br br and the base br br br br g br br br displaystyle g br br with a blocksize of br br br br c br br br displaystyle c br br then the encryption of a message br br br br m br br br displaystyle m br br is br br br br br br E br br br br m br br br br g br br m br br br br r br br c br br br br br mod br br br br br n br br br displaystyle mathcal E m g m r c bmod n br br for some random br br br br r br br br br br br br n br br br br br br displaystyle r in ldots n br br The homomorphic property is then br br br br br br br br br br br E br br br br br m br br br br br br br br br E br br br br br m br br br br br br br br br br br br g br br br m br br br br br br br br r br br br br br c br br br br br br g br br br m br br br br br br br br r br br br br br c br br br br br br mod br br br br br n br br br br br br br br br g br br br m br br br br br br br m br br br br br br br br br r br br br br br br r br br br br br br br br c br br br br br mod br br br br br n br br br br br br br br br br E br br br br br m br br br br br br br m br br br br br br br mod br br br br br c br br br br br br br br br displaystyle begin aligned mathcal E m cdot mathcal E m g m r c g m r c bmod n pt g m m r r c bmod n pt mathcal E m m bmod c end aligned br br br Paillier br In the Paillier cryptosystem if the public key is the modulus br br br br n br br br displaystyle n br br and the base br br br br g br br br displaystyle g br br then the encryption of a message br br br br m br br br displaystyle m br br is br br br br br br E br br br br m br br br br g br br m br br br br r br br n br br br br br mod br br br br br br n br br br br br br br displaystyle mathcal E m g m r n bmod n br br for some random br br br br r br br br br br br br n br br br br br br displaystyle r in ldots n br br The homomorphic property is then br br br br br br br br br br br E br br br br br m br br br br br br br br br E br br br br br m br br br br br br br br br br br br g br br br m br br br br br br br br r br br br br br n br br br br br br g br br br m br br br br br br br br r br br br br br n br br br br br br mod br br br br br br n br br br br br br br br br br br br br g br br br m br br br br br br br m br br br br br br br br br r br br br br br br r br br br br br br br br n br br br br br mod br br br br br br n br br br br br br br br br br br br br br E br br br br br m br br br br br br br m br br br br br br br br br br br br br displaystyle begin aligned mathcal E m cdot mathcal E m g m r n g m r n bmod n pt g m m r r n bmod n pt mathcal E m m end aligned br br br Other partially homomorphic cryptosystems br br Okamoto Uchiyama cryptosystem br Naccache Stern cryptosystem br Damg rd Jurik cryptosystem br Sander Young Yung encryption scheme br Boneh Goh Nissim cryptosystem br Ishai Paskin cryptosystem br Joye Libert cryptosystem br Castagnos Laguillaumie cryptosystem br br br Fully homomorphic encryption br A cryptosystem that supports arbitrary computation on ciphertexts is known as fully homomorphic encryption FHE Such a scheme enables the construction of programs for any desirable functionality which can be run on encrypted inputs to produce an encryption of the result Since such a program need never decrypt its inputs it can be run by an untrusted party without revealing its inputs and internal state Fully homomorphic cryptosystems have great practical implications in the outsourcing of private computations for instance in the context of cloud computing br br br Implementations br br A list of open source FHE libraries implementing second generation BGV BFV third generation FHEW TFHE and or fourth generation CKKS FHE schemes is provided below br There are several open source implementations of fully homomorphic encryption schemes Second generation and fourth generation FHE scheme implementations typically operate in the leveled FHE mode though bootstrapping is still available in some libraries and support efficient SIMD like packing of data they are typically used to compute on encrypted integers or real complex numbers Third generation FHE scheme implementations often bootstrap after each operation but have limited support for packing they were initially used to compute Boolean circuits over encrypted bits but have been extended to support integer arithmetics and univariate function evaluation The choice of using a second generation vs third generation vs fourth generation scheme depends on the input data types and the desired computation br br br Standardization br In researchers from IBM Microsoft Intel the NIST and others formed the open Homomorphic Encryption Standardization Consortium which maintains a community security Homomorphic Encryption Standard br br br See also br Homomorphic secret sharing br Homomorphic signatures for network coding br Private biometrics br Verifiable computing using a fully homomorphic scheme br Client side encryption br Confidential computing br Searchable symmetric encryption br Secure multi party computation br Format preserving encryption br Polymorphic code br Private set intersection br br br br br br External links br FHE org Community conference meetup and discussion group br Daniele Micciancio s FHE references br Vinod Vaikuntanathan s FHE references br Alice and Bob in Cipherspace American Scientist September Retrieved br A list of homomorphic encryption implementations maintained on GitHub