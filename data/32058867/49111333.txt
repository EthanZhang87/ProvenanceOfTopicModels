title: Double Ratchet Algorithm
id: 49111333
In cryptography the Double Ratchet Algorithm previously referred to as the Axolotl Ratchet is a key management algorithm that was developed by Trevor Perrin and Moxie Marlinspike in It can be used as part of a cryptographic protocol to provide end to end encryption for instant messaging After an initial key exchange it manages the ongoing renewal and maintenance of short lived session keys It combines a cryptographic so called ratchet based on the Diffie Hellman key exchange DH and a ratchet based on a key derivation function KDF such as a hash function and is therefore called a double ratchet br The algorithm provides forward secrecy for messages and implicit renegotiation of forward keys properties for which the protocol is named br br br History br The Double Ratchet Algorithm was developed by Trevor Perrin and Moxie Marlinspike Open Whisper Systems in and introduced as part of the Signal Protocol in February The Double Ratchet Algorithm s design is based on the DH ratchet that was introduced by Off the Record Messaging OTR and combines it with a symmetric key ratchet modeled after the Silent Circle Instant Messaging Protocol SCIMP The ratchet was initially named after the critically endangered aquatic salamander axolotl which has extraordinary self healing capabilities In March the developers renamed the Axolotl Ratchet as the Double Ratchet Algorithm to better differentiate between the ratchet and the full protocol because some had used the name Axolotl when referring to the Signal Protocol br br br Overview br br The Double Ratchet Algorithm features properties that have been commonly available in end to end encryption systems for a long time encryption of contents on the entire way of transport as well as authentication of the remote peer and protection against manipulation of messages As a hybrid of DH and KDF ratchets it combines several desired features of both principles From OTR messaging it takes the properties of forward secrecy and automatically reestablishing secrecy in case of compromise of a session key forward secrecy with a compromise of the secret persistent main key and plausible deniability for the authorship of messages Additionally it enables session key renewal without interaction with the remote peer by using secondary KDF ratchets An additional key derivation step is taken to enable retaining session keys for out of order messages without endangering the following keys br It is said to detect reordering deletion and replay of sent messages and improve forward secrecy properties against passive eavesdropping in comparison to OTR messaging br Combined with public key infrastructure for the retention of pregenerated one time keys prekeys it allows for the initialization of messaging sessions without the presence of the remote peer asynchronous communication The usage of triple Diffie Hellman key exchange DH as initial key exchange method improves the deniability properties An example of this is the Signal Protocol which combines the Double Ratchet Algorithm prekeys and a DH handshake The protocol provides confidentiality integrity authentication participant consistency destination validation forward secrecy backward secrecy aka future secrecy causality preservation message unlinkability message repudiation participation repudiation and asynchronicity It does not provide anonymity preservation and requires servers for the relaying of messages and storing of public key material br br br Functioning br br A client attempts to renew session key material interactively with the remote peer using a Diffie Hellman DH ratchet If this is impossible the clients renew the session key independently using a hash ratchet With every message a client advances one of two hash ratchets one for sending and one for receiving These two hash ratchets get seeded with a common secret from a DH ratchet At the same time it tries to use every opportunity to provide the remote peer with a new public DH value and advance the DH ratchet whenever a new DH value from the remote peer arrives As soon as a new common secret is established a new hash ratchet gets initialized br As cryptographic primitives the Double Ratchet Algorithm uses br br for the DH ratchet br Elliptic curve Diffie Hellman ECDH with Curve br for message authentication codes MAC authentication br Keyed hash message authentication code HMAC based on SHA br for symmetric encryption br the Advanced Encryption Standard AES partially in cipher block chaining mode CBC with padding as per PKCS and partially in counter mode CTR without padding br for the hash ratchet br HMAC br br br Applications br The following is a list of applications that use the Double Ratchet Algorithm or a custom implementation of it br br br Notes br br br br br br Literature br br br External links br Specification by Open Whisper Systems br Advanced cryptographic ratcheting abstract description by Moxie Marlinspike br Olm C implementation under the Apache license br Vodozemac Rust implementation of the Olm variation under the Apache license