title: Opus (audio format)
id: 31953149
Opus is a lossy audio coding format developed by the Xiph Org Foundation and standardized by the Internet Engineering Task Force designed to efficiently code speech and general audio in a single format while remaining low latency enough for real time interactive communication and low complexity enough for low end embedded processors Opus replaces both Vorbis and Speex for new applications and several blind listening tests have ranked it higher quality than any other standard audio format at any given bitrate until transparency is reached including MP AAC and HE AAC br Opus combines the speech oriented LPC based SILK algorithm and the lower latency MDCT based CELT algorithm switching between or combining them as needed for maximal efficiency Bitrate audio bandwidth complexity and algorithm can all be adjusted seamlessly in each frame Opus has the low algorithmic delay ms by default necessary for use as part of a real time communication link networked music performances and live lip sync by trading off quality or bitrate the delay can be reduced down to ms Its delay is exceptionally low compared to competing codecs which require well over ms yet Opus performs very competitively with these formats in terms of quality per bitrate br As an open format standardized through RFC a reference implementation called libopus is available under the New BSD License The reference has both fixed point and floating point optimizations for low and high end devices with SIMD optimizations on platforms that support them All known software patents that cover Opus are licensed under royalty free terms Opus is widely used as a voice over IP VoIP codec in applications such as Discord WhatsApp and the PlayStation br br br Features br br Opus supports constant and variable bitrate encoding from kbit s to kbit s or up to kbit s per channel for multi channel tracks frame sizes from ms to ms and five sampling rates from kHz with kHz bandwidth to kHz with kHz bandwidth the human hearing range An Opus stream can support up to audio channels and it allows channel coupling between channels in groups of two using mid side coding br Opus has very short latency ms using the default ms frames and default application setting which makes it suitable for real time applications such as telephony Voice over IP and videoconferencing research by Xiph led to the CELT codec which allows the highest quality while maintaining low delay In any Opus stream the bitrate bandwidth and delay can be continually varied without introducing any distortion or discontinuity even mixing packets from different streams will cause a smooth change rather than the distortion common in other codecs Unlike Vorbis Opus does not require large codebooks for each individual file making it more efficient for short clips of audio and more resilient br br The Opus format is based on a combination of the full bandwidth CELT format and the speech oriented SILK format both heavily modified CELT is based on the modified discrete cosine transform MDCT that most music codecs use using CELP techniques in the frequency domain for better prediction while SILK uses linear predictive coding LPC and an optional Long Term Prediction filter to model speech In Opus both were modified to support more frame sizes as well as further algorithmic improvements and integration such as using CELT s range encoder for both types To minimize overhead at low bitrates if latency is not as pressing SILK has support for packing multiple ms frames together sharing context and headers SILK also allows Low Bitrate Redundancy LBRR frames allowing low quality packet loss recovery CELT includes both spectral replication and noise generation similar to AAC s SBR and PNS and can further save bits by filtering out all harmonics of tonal sounds entirely then replicating them in the decoder Better tone detection is an ongoing project to improve quality br The format has three different modes speech hybrid and CELT When compressing speech SILK is used for audio frequencies up to kHz If wider bandwidth is desired a hybrid mode uses CELT to encode the frequency range above kHz The third mode is pure CELT designed for general audio SILK is inherently VBR and cannot hit a bitrate target while CELT can always be encoded to any specific number of bytes enabling hybrid and CELT mode when CBR is required br SILK supports frame sizes of and ms CELT supports frame sizes of and ms Thus hybrid mode only supports frame sizes of and ms frames shorter than ms will always use CELT mode A typical Opus packet contains a single frame but packets of up to ms are produced by combining multiple frames per packet Opus can transparently switch between modes frame sizes bandwidths and channel counts on a per packet basis although specific applications may choose to limit this br The reference implementation is written in C and compiles on hardware architectures with or without a floating point unit although floating point is currently required for audio bandwidth detection dynamic switching between SILK CELT and hybrid encoding and most speed optimizations br br br Containers br Opus packets are not self delimiting but are designed to be used inside a container of some sort which supplies the decoder with each packet s length Opus was originally specified for encapsulation in Ogg containers specified as audio ogg codecs opus and for Ogg Opus files the opus filename extension is recommended Opus streams are also supported in Matroska WebM MPEG TS and MP br Alternatively each Opus packet may be wrapped in a network packet which supplies the packet length Opus packets may be sent over an ordered datagram protocol such as RTP br An optional self delimited packet format is defined in an appendix to the specification This uses one or two additional bytes per packet to encode the packet length allowing packets to be concatenated without encapsulation br br br Bandwidth and sampling rate br br Opus allows the following bandwidths during encoding Opus compression does not depend on the input sample rate timestamps are measured in kHz units even if the full bandwidth is not used Likewise the output sample rate may be freely chosen For example audio can be input at kHz yet be set to encode only narrowband audio br br br History br br Opus was proposed for the standardization of a new audio format at the IETF which was eventually accepted and granted by the codec working group It is based on two initially separate standard proposals from the Xiph Org Foundation and Skype Technologies S A now Microsoft Its main developers are Jean Marc Valin Xiph Org Octasic Mozilla Corporation Amazon Koen Vos Skype and Timothy B Terriberry Xiph Org Mozilla Corporation Amazon Among others Juin Hwey Raymond Chen Broadcom Gregory Maxwell Xiph Org Wikimedia and Chris Montgomery Xiph Org were also involved br The development of the CELT part of the format goes back to thoughts on a successor for Vorbis under the working name Ghost As a newer speech codec from the Xiph Org Foundation Opus replaces Xiph s older speech codec Speex an earlier project of Jean Marc Valin CELT has been worked on since November br The SILK part has been under development at Skype since January as the successor of their SVOPC an internal project to make the company independent from third party codecs like iSAC and iLBC and respective license payments br In March Skype suggested the development and standardization of a wideband audio format within the IETF Nearly a year passed with much debate on the formation of an appropriate working group Representatives of several companies which were taking part in the standardization of patent encumbered competing format including Polycom and Ericsson the creators and licensors of G as well as France T l com Huawei and the Orange Labs department of France T l com which were involved in the creation of G stated objections against the start of the standardization process for a royalty free format Some of the opponents would later claim patent rights that Xiph dismissed see below The working group finally formed in February and even the corresponding Study Group from the ITU T pledged to support its work br In July a prototype of a hybrid format was presented that combined the two proposed format candidates SILK and CELT In September Opus was submitted to the IETF as proposal for standardization For a short time the format went under the name of Harmony before it got its present name in October At the beginning of February the bitstream format was tentatively frozen subject to last changes Near the end of July Jean Marc Valin was hired by the Mozilla Corporation to continue working on Opus br br br Finalization br In November the working group issued the last call for changes on the bitstream format The bitstream has been frozen since January On July Opus was approved by the IETF for standardization The reference software entered release candidate state on August The final specification was released as RFC on September and versions and of the reference implementation libopus were released the day after br On July libopus brought bug fixes and a new Surround sound API that improves channel allocation and quality especially for LFE br br br br On December libopus was released incorporating overall speed improvements and significant encoder quality improvements Tonality estimation boosts bitrate and quality for previously problematic samples like harpsichords automated speech music detection improves quality in mixed audio mid side stereo reduces the bitrate needs of many songs band precision boosting for improved transients and DC rejection below Hz Two new VBR modes were added unconstrained for more consistent quality and temporal VBR that boosts louder frames and generally improves quality br libopus was released on November and on January both adding speed optimizations and bug fixes July saw the release of version and includes bug fixes optimizations documentation updates and experimental Ambisonics work br br br br libopus Beta was released on May libopus was released on June Improvements brought in allow it to create fullband music at bitrates as low as kbit s and wideband speech at just kbit s br libopus includes optional support for the decoder specification changes made in drafts of RFC improving the quality of output from such low rate streams br br br br libopus was released on October The Opus major release again brings quality improvements new features and bug fixes Changes since x include br br Improvements to voice activity detection VAD and speech music classification using a recurrent neural network RNN br Support for ambisonics coding using channel mapping families and br Improvements to stereo speech coding at low bitrate br Using wideband speech encoding down to kbit s mediumband is no longer used br Making it possible to use SILK down to bitrates around kbit s br Minor quality improvement on tones br Enabling the spec fixes in RFC by default br Security hardening improvements br Notable bug fixes include br br Fixes to the CELT PLC br Bandwidth detection fixes br br br br libopus was released on April This Opus minor release fixes an issue with the analysis on files with digital silence all zeros especially on x builds mostly affects bit builds It also includes two new features br br A new OPUS GET IN DTX query to know if the encoder is in DTX mode last frame was either a comfort noise frame or not encoded at all br A new and still experimental CMake based build system that is eventually meant to replace the VS build system the autotools build system will stay br br br br libopus was released on April Opus brings the following improvements and fixes br br Improved tuning of the Opus in band FEC called LBRR Low bitrate redundancy which previously was causing a significant drop in audio quality under certain circumstances br Added a OPUS SET INBAND FEC option that turns on FEC but does not force SILK mode FEC will be disabled in CELT mode br Improved tuning and various fixes to DTX br Added Meson support improved CMake support br br br br libopus was released on March It added the following backward compatible improvements br br Improved packet loss concealment using a deep neural network br Improved redundancy to prevent packet loss using a rate distortion optimized variational autoencoder br Improved concealment of coding artifacts by adjusting post filter coefficients using a deep neural network br Support for additional SIMD CPU instructions AVX on x and NEON on Aarch br br br Current development br The codec is under active development The current focus is on adding a deep learning based redundancy encoder that enhances packet loss concealment by embedding one second of recovery data in each encoded packet The deep redundancy DRED algorithm was developed by among others Jean Marc Valin Ahmed Mustafa Jan B the Timothy Terriberry Chris Montgomery Michael Klingbeil and Paris Smaragdis from Amazon Web Services with sponsorship to open source the algorithm and subsequently extend the IETF standard from Sid Rao This encoder is a backwards compatible change to the codec enabling customers to easily upgrade applications to take advantage of this machine learning capability A draft RFC is underway to standardize the new capability This RFC is one of the first attempts to standardize a deep learning algorithm in the IETF br br br Quality comparison and low latency performance br br Opus performs well at both low and high bitrates br br In listening tests around kbit s Opus shows superior quality compared to HE AAC codecs which were previously dominant due to their use of the patented spectral band replication SBR technology In listening tests around kbit s Opus shows slightly superior quality compared to AAC and significantly better quality compared to Vorbis and MP br Opus has very low algorithmic delay a necessity for use as part of a low audio latency communication link which can permit natural conversation networked music performances or lip sync at live events Total algorithmic delay for an audio format is the sum of delays that must be incurred in the encoder and the decoder of a live audio stream regardless of processing speed and transmission speed such as buffering audio samples into blocks or frames allowing for window overlap and possibly allowing for noise shaping look ahead in a decoder and any other forms of look ahead or for an MP encoder the use of bit reservoir br Total one way latency below ms is the preferred target of most VoIP systems to enable natural conversation with turn taking little affected by delay Musicians typically feel in time with up to around ms audio latency roughly in accord with the fusion time of the Haas effect though matching playback delay of each user s own instrument to the round trip latency can also help It is suggested for lip sync that around ms audio latency may be acceptable br Opus permits trading off reduced quality or increased bitrate to achieve an even smaller algorithmic delay ms minimum While the reference implementation s default Opus frame is ms long the SILK layer requires a further ms lookahead plus ms for resampling giving a default delay of ms When the CELT layer is active it requires ms lookahead for window overlap to which a matching delay of ms is added by default to synchronize with the SILK layer If the encoder is instantiated in the special restricted low delay mode the ms matching delay is removed and the SILK layer is disabled permitting the minimal algorithmic delay of ms br br br Support br The format and algorithms are openly documented and the reference implementation is published as free software Xiph s reference implementation is called libopus and a package called opus tools provides command line encoder and decoder utilities It is published under the terms of a BSD like license It is written in C and can be compiled for hardware architectures with or without a floating point unit The accompanying diagnostic tool opusinfo reports detailed technical information about Opus files including information on the standard compliance of the bitstream format It is based on ogginfo from the vorbis tools and therefore unlike the encoder and decoder is available under the terms of version of the GPL br br br Implementations br RFC contains a complete source code for an older version of the reference implementation written in C RFC contains errata Libopus is the more up to date but non normative branch of the reference implementation br The FFmpeg project has encoder and decoder implementations not derived from the reference library The documentation describes it as CELT only and poorer quality than the reference br The libopus reference library has been ported to both C and Java as part of a project called Concentus These ports sacrifice performance for the sake of being easily integrated into cross platform applications br br br Software and content providers br br Digital Radio Mondiale a digital radio format for AM frequencies can broadcast and receive Opus audio albeit not recognised in official standard using Dream software defined radio br The Wikimedia Foundation sponsored a free and open source online JavaScript Opus encoder for browsers supporting the required HTML features br A list of radio stations that stream using Opus audio codec can be found on the Xiph Org Foundation Icecast directory br In late and Google s video platform YouTube started offering Opus audio along with VP video in the WebM file format through DASH streaming br Since WhatsApp has been using Opus as its audio file format br Signal switched from Speex to Opus audio codec for better audio quality in the beginning of br In SoundCloud switched from MP to Opus reducing half of its required bandwidth for music streaming br In January Vimeo introduced Opus to its video platform br In the Danish journalism website Zetland switched from MP to Opus for its articles audio recordings which attained a percent reduction in bandwidth and reduced climate footprint br br br Operating system support br Most end user software relies on multimedia frameworks provided by the operating system Native Opus codec support is implemented in most major multimedia frameworks for Unix like operating systems including GStreamer FFmpeg and Libav libraries br The WebM container webm is mostly used on online video platforms e g YouTube and is usually treated as a video file by operating systems media players Even if a WebM file contains only Opus audio and no video some music players do not recognize WebM files as audio files and do not support reading of file metadata br The Ogg container opus is preferred for audio only files and most media players have support for audio file metadata tagged in the Vorbis comment format br Google added native support for Opus audio playback in Android Lollipop However it was limited to Opus audio encapsulated in Matroska and WebM containers such as mkv mka and webm files Android Nougat introduced support for Opus audio encapsulated in Ogg containers Android finally added native support for opus extensions br Due to the addition of WebRTC support in Apple s WebKit rendering engine macOS High Sierra and iOS were released with native playback support for Opus audio encapsulated in Core Audio Format containers macOS Sonoma added support for mono and stereo Opus audio encapsulated in MPEG and WebM containers in Safari br On Windows version Microsoft provided native support for Opus audio encapsulated in Matroska and WebM containers On version support for Opus audio encapsulated in Ogg containers was made available through a pre installed add on called Web Media Extensions On Windows version native support for the opus extension was added On Windows and older third party decoders such as LAV Filters are available to provide support for the format A January update for Windows caused File Explorer to freeze up when renaming or deleting Ogg files including oga ogg ogm ogv ogx opus due to bugs involving the MF Media Source Pack Property Handler shell extension by Microsoft and the Web Media Extensions package in Windows which were not patched before the Windows Updates were rolled out br iOS includes support for natively encoding and decoding the Opus codec through the operating system s AudioToolbox framework Playback of Ogg files in the opus container is supported through the Files application Opus is additionally supported within the Core Audio Format caf container the QuickTime mov container and the ISOBMFF or MP file format mp container As the AudioToolbox framework is shared with macOS similar support should be present in both operating systems as they further develop br br br Media player support br While support in multimedia frameworks automatically enables Opus support in software which is built on top of such frameworks several applications developers made additional efforts for supporting the Opus audio format in their software Such support was added to AIMP Amarok cmus Music Player Daemon foobar Mpxplay MusicBee SMplayer VLC media player Winamp and XMPlay audio players Icecast Airtime software audio streaming software and Asunder audio CD ripper CDBurnerXP CD burner FFmpeg Libav and MediaCoder media encoding tools Streaming Icecast radio trials are live since September and January SteamOS uses Opus or Vorbis for streaming audio br br br Browser support br Opus support is mandatory for WebRTC implementations Opus is supported in Mozilla Firefox Chromium and Google Chrome Blink based Opera as well as all browsers for Unix like systems relying on GStreamer for multimedia formats support Although Internet Explorer will not provide Opus playback natively support for the format is built into the Edge browser along with VP for full WebM support Safari supports Opus as of iOS and macOS High Sierra br br br VoIP support br Due to its abilities Opus gained early interest from voice over IP VoIP software vendors Several SIP clients including Acrobits Softphone CSipSimple via additional plug in Empathy via GStreamer Jitsi Tuenti Line currently only on iOS Linphone Phoner and PhonerLite SFLphone Telephone Mumble Discord and TeamSpeak voice chat software also support Opus TrueConf supports Opus in its VoIP products Asterisk lacked builtin Opus support for legal reasons but a third party patch was available for download and official support via a binary blob was added in September Tox P P videoconferencing software uses Opus exclusively Classified ads distributed messaging app sends raw opus frames inside TLS socket in its VoIP implementation br Opus is widely used as the voice codec in WhatsApp which has over billion users worldwide WhatsApp uses Opus at kHz sampling rates with the Real time Transport Protocol RTP The PlayStation video game console also uses the CELT Opus codec for its PlayStation Network system party chat The Source Engine uses Opus for its voice chat system It is also used in the Zoom videoconferencing app br br br Hardware br Since version Rockbox enables Opus playback on supported portable media players including some products from the iPod series by Apple devices made by iriver Archos and Sandisk and on Android devices using Rockbox as an Application All recent Grandstream IP phones support Opus audio both for encoding and decoding OBihai OBi OBi and OBi IP phones all support Opus Recent BlueSound wireless speakers support Opus playback Devices running Hiby OS like the Hiby R are capable of decoding Opus files natively br Many broadcast IP codecs include Opus such as those manufactured by Comrex GatesAir and Tieline br The Sony PlayStation supports capturing p and p footage using VP video and Opus audio in a WebM container br Android supports Opus as a bluetooth headphone A DP codec motivated by its low latency which is important for head tracked spatial audio Google s Pixel Buds Pro supports this A DP codec br br br Patent claims br As an open standard the algorithms are openly documented and a reference implementation including the source code is published Broadcom and the Xiph Org Foundation own software patents on some of the CELT algorithms and Skype Technologies Microsoft own some on the SILK algorithms each offers a royalty free perpetual license for use with Opus reserving only the right to make use of their patents to defend against infringement suits of third parties Qualcomm Huawei France Telecom and Ericsson have claimed that their patents may apply which Xiph s legal counsel denies and none have pursued any legal action The Opus license automatically and retroactively terminates for any entity that attempts to file a patent suit br br br Notes br br br br br br Citations br br br Sources br br br External links br br Official website br Opus on Hydrogenaudio Knowledgebase br br br See also br br Comparison of audio coding formats br Streaming media br xHE AAC