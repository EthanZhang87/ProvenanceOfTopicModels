title: Encrypting File System
id: 628391
The Encrypting File System EFS on Microsoft Windows is a feature introduced in version of NTFS that provides filesystem level encryption The technology enables files to be transparently encrypted to protect confidential data from attackers with physical access to the computer br EFS is available in all versions of Windows except the home versions see Supported operating systems below from Windows onwards By default no files are encrypted but encryption can be enabled by users on a per file per directory or per drive basis Some EFS settings can also be mandated via Group Policy in Windows domain environments br Cryptographic file system implementations for other operating systems are available but the Microsoft EFS is not compatible with any of them See also the list of cryptographic file systems br br br Basic ideas br br When an operating system is running on a system without file encryption access to files normally goes through OS controlled user authentication and access control lists However if an attacker gains physical access to the computer this barrier can be easily circumvented One way for example would be to remove the disk and put it in another computer with an OS installed that can read the filesystem another would be to simply reboot the computer from a boot CD containing an OS that is suitable for accessing the local filesystem br The most widely accepted solution to this is to store the files encrypted on the physical media disks USB pen drives tapes CDs and so on br In the Microsoft Windows family of operating systems EFS enables this measure although on NTFS drives only and does so using a combination of public key cryptography and symmetric key cryptography to make decrypting the files extremely difficult without the correct key br However the cryptography keys for EFS are in practice protected by the user account password and are therefore susceptible to most password attacks In other words the encryption of a file is only as strong as the password to unlock the decryption key br br br Operation br br EFS works by encrypting a file with a bulk symmetric key also known as the File Encryption Key or FEK It uses a symmetric encryption algorithm because it takes less time to encrypt and decrypt large amounts of data than if an asymmetric key cipher is used The symmetric encryption algorithm used will vary depending on the version and configuration of the operating system see Algorithms used by Windows version below The FEK the symmetric key that is used to encrypt the file is then encrypted with a public key that is associated with the user who encrypted the file and this encrypted FEK is stored in the EFS alternative data stream of the encrypted file To decrypt the file the EFS component driver uses the private key that matches the EFS digital certificate used to encrypt the file to decrypt the symmetric key that is stored in the EFS stream The EFS component driver then uses the symmetric key to decrypt the file Because the encryption decryption operations are performed at a layer below NTFS it is transparent to the user and all their applications br Folders whose contents are to be encrypted by the file system are marked with an encryption attribute The EFS component driver treats this encryption attribute in a way that is analogous to the inheritance of file permissions in NTFS if a folder is marked for encryption then by default all files and subfolders that are created under the folder are also encrypted When encrypted files are moved within an NTFS volume the files remain encrypted However there are a number of occasions in which the file could be decrypted without the user explicitly asking Windows to do so br Files and folders are decrypted before being copied to a volume formatted with another file system like FAT Finally when encrypted files are copied over the network using the SMB CIFS protocol the files are decrypted before they are sent over the network br The most significant way of preventing the decryption on copy is using backup applications that are aware of the Raw APIs Backup applications that have implemented these Raw APIs will simply copy the encrypted file stream and the EFS alternative data stream as a single file In other words the files are copied e g into the backup file in encrypted form and are not decrypted during backup br Starting with Windows Vista a user s private key can be stored on a smart card Data Recovery Agent DRA keys can also be stored on a smart card br br br Security br br br Vulnerabilities br Two significant security vulnerabilities existed in Windows EFS and have been variously targeted since br In Windows the local administrator is the default Data Recovery Agent capable of decrypting all files encrypted with EFS by any local user br EFS in Windows cannot function without a recovery agent so there is always someone who can decrypt encrypted files of the users Any non domain joined Windows computer will be susceptible to unauthorized EFS decryption by anyone who can take over the local Administrator account which is trivial given many tools available freely on the Internet br In Windows XP and later there is no default local Data Recovery Agent and no requirement to have one Setting SYSKEY to mode or syskey typed in during bootup or stored on a floppy disk will mitigate the risk of unauthorized decryption through the local Administrator account This is because the local user s password hashes stored in the SAM file are encrypted with the Syskey and the Syskey value is not available to an offline attacker who does not possess the Syskey passphrase floppy br br br Accessing private key via password reset br In Windows the user s RSA private key is not only stored in a truly encrypted form but there is also a backup of the user s RSA private key that is more weakly protected If an attacker gains physical access to the Windows computer and resets a local user account s password the attacker can log in as that user or recovery agent and gain access to the RSA private key which can decrypt all files This is because the backup of the user s RSA private key is encrypted with an LSA secret which is accessible to any attacker who can elevate their login to LocalSystem again trivial given numerous tools on the Internet br In Windows XP and beyond the user s RSA private key is backed up using an offline public key whose matching private key is stored in one of two places the password reset disk if Windows XP is not a member of a domain or in the Active Directory if Windows XP is a member of a domain This means that an attacker who can authenticate to Windows XP as LocalSystem still does not have access to a decryption key stored on the PC s hard drive br In Windows XP or later the user s RSA private key is encrypted using a hash of the user s NTLM password hash plus the user name use of a salted hash makes it extremely difficult to reverse the process and recover the private key without knowing the user s passphrase Also again setting Syskey to mode or Syskey typed in during bootup or stored on a floppy disk will mitigate this attack since the local user s password hash will be stored encrypted in the SAM file br br br Other issues br Once a user is logged on successfully access to his own EFS encrypted data requires no additional authentication decryption happens transparently Thus any compromise of the user s password automatically leads to access to that data Windows can store versions of user account passphrases with reversible encryption though this is no longer default behaviour it can also be configured to store and will by default on the original version of Windows XP and lower Lan Manager hashes of the local user account passphrases which can be attacked and broken easily It also stores local user account passphrases as NTLM hashes which can be fairly easily attacked using rainbow tables if the passwords are weak Windows Vista and later versions don t allow weak passwords by default To mitigate the threat of trivial brute force attacks on local passphrases older versions of Windows need to be configured using the Security Settings portion of Group Policy to never store LM hashes and of course to not enable Autologon which stores plaintext passphrases in the registry Further using local user account passphrases over characters long prevents Windows from storing an LM hash in the SAM and has the added benefit of making brute force attacks against the NTLM hash harder br When encrypting files with EFS when converting plaintext files to encrypted files the plaintext files are not wiped but simply deleted i e data blocks flagged as not in use in the filesystem This means that unless they for example happen to be stored on an SSD with TRIM support they can be easily recovered unless they are overwritten To fully mitigate known non challenging technical attacks against EFS encryption should be configured at the folder level so that all temporary files like Word document backups which are created in these directories are also encrypted When encrypting individual files they should be copied to an encrypted folder or encrypted in place followed by securely wiping the disk volume The Windows Cipher utility can be used with the W option to wipe free space including that which still contains deleted plaintext files various third party utilities may work as well br Anyone who can gain Administrators access can overwrite override or change the Data Recovery Agent configuration This is a very serious issue since an attacker can for example hack the Administrator account using third party tools set whatever DRA certificate they want as the Data Recovery Agent and wait This is sometimes referred to as a two stage attack which is a significantly different scenario than the risk due to a lost or stolen PC but which highlights the risk due to malicious insiders br When the user encrypts files after the first stage of such an attack the FEKs are automatically encrypted with the designated DRA s public key The attacker only needs to access the computer once more as Administrator to gain full access to all those subsequently EFS encrypted files Even using Syskey mode or does not protect against this attack because the attacker could back up the encrypted files offline restore them elsewhere and use the DRA s private key to decrypt the files If such a malicious insider can gain physical access to the computer all security features are to be considered irrelevant because they could also install rootkits software or even hardware keyloggers etc on the computer which is potentially much more interesting and effective than overwriting DRA policy br br br Recovery br Files encrypted with EFS can only be decrypted by using the RSA private key s matching the previously used public key s The stored copy of the user s private key is ultimately protected by the user s logon password Accessing encrypted files from outside Windows with other operating systems Linux for example is not possible not least of which because there is currently no third party EFS component driver Further using special tools to reset the user s login password will render it impossible to decrypt the user s private key and thus useless for gaining access to the user s encrypted files The significance of this is occasionally lost on users resulting in data loss if a user forgets his or her password or fails to back up the encryption key This led to coining of the term delayed recycle bin to describe the seeming inevitability of data loss if an inexperienced user encrypts his or her files br If EFS is configured to use keys issued by a Public Key Infrastructure and the PKI is configured to enable Key Archival and Recovery encrypted files can be recovered by recovering the private key first br br br Keys br user password or smart card private key used to generate a decryption key to decrypt the user s DPAPI Master Key br DPAPI Master Key used to decrypt the user s RSA private key s br RSA private key used to decrypt each file s FEK br File Encryption Key FEK used to decrypt encrypt each file s data in the primary NTFS stream br SYSKEY used to encrypt the cached domain verifier and the password hashes stored in the SAM br br br Supported operating systems br br br Windows br Windows Professional Server Advanced Server and Datacenter editions br Windows XP Professional also in Tablet PC Edition Media Center Edition and x Edition br Windows Server and Windows Server R in both x and x editions br Windows Vista Business Enterprise and Ultimate editions br Windows Professional Enterprise and Ultimate editions br Windows Server and Windows Server R br Windows and Pro and Enterprise editions br Windows Server and Windows Server R br Windows Pro Enterprise and Education editions br Windows Pro Enterprise and Education editions br Windows Server br Windows Server br br br Other operating systems br No other operating systems or file systems have native support for EFS br br br New features available by Windows version br Windows XP br Encryption of the Client Side Cache Offline Files database br Protection of DPAPI Master Key backup using domain wide public key br Autoenrollment of user certificates including EFS certificates br Multiple user shared access to encrypted files on a file by file basis and revocation checking on certificates used when sharing encrypted files br Encrypted files can be shown in an alternative color green by default br No requirement for mandatory Recovery Agent br Warning when files may be getting silently decrypted when moving to an unsupported file system br Password reset disk br EFS over WebDAV and remote encryption for servers delegated in Active Directory br Windows XP SP br Support for and default use of AES symmetric encryption algorithm for all EFS encrypted files br Windows XP SP KB br Prevent enrollment of self signed EFS certificates br Windows Server br Digital Identity Management Service br Enforcement of RSAKeyLength setting for enforcing a minimum key length when enrolling self signed EFS certificates br Windows Vista and Windows Server br Per user encryption of Client Side Cache Offline Files br Support for storing user or DRA RSA private keys on a PC SC smart card br EFS Re Key Wizard br EFS Key backup prompts br Support for deriving DPAPI Master Key from PC SC smart card br Support for encryption of pagefile sys br Protection of EFS related secrets using BitLocker Enterprise or Ultimate edition of Windows Vista br Group Policy controls to enforce br Encryption of Documents folder br Offline files encryption br Indexing of encrypted files br Requiring smart card for EFS br Creating a caching capable user key from smart card br Displaying a key backup notification when a user key is created or changed br Specifying the certificate template used for enrolling EFS certificates automatically br Windows Server br EFS self signed certificates enrolled on the Windows Server server will default to bit RSA key length br All EFS templates user and data recovery agent certificates default to bit RSA key length br Windows and Windows Server R br Elliptic curve cryptographic algorithms ECC Windows supports a mixed mode operation of ECC and RSA algorithms for backward compatibility br EFS self signed certificates when using ECC will use bit key by default br EFS can be configured to use K k k k k bit keys when using self signed RSA certificates or bit keys when using ECC certificates br Windows version and Windows Server br Add EFS support on FAT and exFAT br br br Algorithms used by Windows version br Windows EFS supports a range of symmetric encryption algorithms depending on the version of Windows in use when the files are encrypted br br br See also br BitLocker br Data Protection API br Disk encryption br Disk encryption software br eCryptfs br EncFS br Filesystem level encryption br Hardware based full disk encryption br br br br br br Further reading br br Implementing the Encrypting File System in Windows Windows Evaluated Configuration Administrators Guide Microsoft Retrieved December br Bragg Roberta The Encrypting File System TechNet Microsoft br Encrypting File System Windows Server Windows Vista TechNet Microsoft February br Encrypting File System in Windows XP and Windows Server TechNet Microsoft April br Network Associates Laboratories How to Use the Encrypting File System Windows Server Windows XP Professional MSDN Microsoft br Using Encrypting File System Windows XP Resource Kit Microsoft November br Encrypting File System Windows Resource Kit Microsoft br How EFS Works Windows Resource Kit Microsoft 