title: OpenSSL
id: 438819
OpenSSL is a software library for applications that provide secure communications over computer networks against eavesdropping and identify the party at the other end It is widely used by Internet servers including the majority of HTTPS websites br OpenSSL contains an open source implementation of the SSL and TLS protocols The core library written in the C programming language implements basic cryptographic functions and provides various utility functions Wrappers allowing the use of the OpenSSL library in a variety of computer languages are available br The OpenSSL Software Foundation OSF represents the OpenSSL project in most legal capacities including contributor license agreements managing donations and so on OpenSSL Software Services OSS also represents the OpenSSL project for support contracts br OpenSSL is available for most Unix like operating systems including Linux macOS and BSD Microsoft Windows and OpenVMS br br br Project history br The OpenSSL project was founded in to provide a free set of encryption tools for the code used on the Internet It is based on a fork of SSLeay by Eric Andrew Young and Tim Hudson which unofficially ended development on December when Young and Hudson both went to work for RSA Security The initial founding members were Mark Cox Ralf Engelschall Stephen Henson Ben Laurie and Paul Sutton br In OpenSSL version numbering skipped from to omitting as a major version number to avoid a conflict with one of OpenSSL s modules Version was the first to use the Apache License br As of May the OpenSSL management committee consisted of seven people and there are seventeen developers with commit access many of whom are also part of the OpenSSL management committee There are only two full time employees fellows and the remainder are volunteers br The project has a budget of less than million USD per year and relies primarily on donations Development of TLS was sponsored by Akamai br br br Major version releases br br br Algorithms br OpenSSL supports a number of different cryptographic algorithms br br Ciphers br br AES Blowfish Camellia Chacha Poly SEED CAST DES IDEA RC RC RC Triple DES GOST SM br Cryptographic hash functions br br MD MD MD SHA SHA SHA RIPEMD MDC GOST R BLAKE Whirlpool SM br Public key cryptography br br RSA DSA Diffie Hellman key exchange Elliptic curve X Ed X Ed GOST R SM br Perfect forward secrecy is supported using elliptic curve Diffie Hellman since version br br br FIPS validation br FIPS is a U S Federal program for the testing and certification of cryptographic modules An early FIPS certificate for OpenSSL s FOM was revoked in July when questions were raised about the validated module s interaction with outside software The module was re certified in February before giving way to FIPS OpenSSL supported the use of the OpenSSL FIPS Object Module FOM which was built to deliver FIPS approved algorithms in a FIPS validated environment OpenSSL controversially decided to categorize the architecture as end of life or EOL effective December despite objections that it was the only version of OpenSSL that was currently available with support for FIPS mode As a result of the EOL many users were unable to properly deploy the FOM and fell out of compliance because they did not secure extended support for the architecture although the FOM itself remained validated for eight months further br The FIPS Object Module remained FIPS validated in several formats until September when NIST deprecated the usage of FIPS for Digital Signature Standard and designated all non compliant modules as Historical This designation includes a caution to federal agencies that they should not include the module in any new procurements All three of the OpenSSL validations were included in the deprecation the OpenSSL FIPS Object Module certificate OpenSSL FIPS Object Module SE certificate and OpenSSL FIPS Object Module RE certificate Many private label OpenSSL based validations and clones created by consultants were also moved to the Historical List although some FIPS validated modules with replacement compatibility avoided the deprecation such as BoringCrypto from Google and CryptoComply from SafeLogic br The OpenSSL Management Committee announced a change in the versioning scheme br Due to this change the major number of the next major version would have been doubled since the OpenSSL FIPS module already occupied this number Therefore the decision was made to skip the OpenSSL version number and continue with OpenSSL br OpenSSL restored FIPS mode and underwent FIPS testing but with significant delays The effort was first kicked off in with support from SafeLogic and further support from Oracle in but the process has been challenging br On October the OpenSSL FIPS Provider was added to the CMVP Implementation Under Test List which reflected an official engagement with a testing lab to proceed with a FIPS validation This resulted in a slew of certifications in the following months br br br Licensing br OpenSSL was dual licensed under the OpenSSL License and the SSLeay License which means that the terms of either licenses can be used The OpenSSL License is Apache License and SSLeay License bears some similarity to a clause BSD License br As the OpenSSL License was Apache License but not Apache License it requires the phrase this product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit to appear in advertising material and any redistributions Sections and of the OpenSSL License Due to this restriction the OpenSSL License and the Apache License are incompatible with the GNU GPL br Some GPL developers have added an OpenSSL exception to their licenses that specifically permits using OpenSSL with their system GNU Wget and climm both use such exceptions Some packages like Deluge explicitly modify the GPL license by adding an extra section at the beginning of the license documenting the exception Other packages use the LGPL licensed GnuTLS BSD licensed Botan or MPL licensed NSS which perform the same task br OpenSSL announced in August that it would require most contributors to sign a Contributor License Agreement CLA and that OpenSSL would eventually be relicensed under the terms of Apache License This process commenced in March and was complete in br On September OpenSSL was released under the Apache License br br br Notable vulnerabilities br br br Denial of service ASN parsing br OpenSSL k has a bug where certain ASN sequences triggered a large number of recursions on Windows machines discovered on November Windows could not handle large recursions correctly so OpenSSL would crash as a result Being able to send arbitrary large numbers of ASN sequences would cause OpenSSL to crash as a result br br br OCSP stapling vulnerability br When creating a handshake the client could send an incorrectly formatted ClientHello message leading to OpenSSL parsing more than the end of the message Assigned the identifier CVE by the CVE project this affected all OpenSSL versions h to q and OpenSSL to c Since the parsing could lead to a read on an incorrect memory address it was possible for the attacker to cause a DoS It was also possible that some applications expose the contents of parsed OCSP extensions leading to an attacker being able to read the contents of memory that came after the ClientHello br br br ASN BIO vulnerability br When using Basic Input Output BIO or FILE based functions to read untrusted DER format data OpenSSL is vulnerable This vulnerability was discovered on April and was assigned the CVE identifier CVE While not directly affecting the SSL TLS code of OpenSSL any application that was using ASN functions particularly d i X and d i PKCS were also not affected br br br SSL TLS and DTLS plaintext recovery attack br In handling CBC cipher suites in SSL TLS and DTLS OpenSSL was found vulnerable to a timing attack during the MAC processing Nadhem Alfardan and Kenny Paterson discovered the problem and published their findings on February The vulnerability was assigned the CVE identifier CVE br br br Predictable private keys Debian specific br OpenSSL s pseudo random number generator acquires entropy using complex programming methods To keep the Valgrind analysis tool from issuing associated warnings a maintainer of the Debian distribution applied a patch to Debian s variant of the OpenSSL suite which inadvertently broke its random number generator by limiting the overall number of private keys it could generate to The broken version was included in the Debian release of September version c also compromising other Debian based distributions for example Ubuntu Ready to use exploits are easily available br The error was reported by Debian on May On the Debian distribution etch these problems were fixed in version c etch while fixes for the Debian distribution lenny were provided in version g br br br Heartbleed br br OpenSSL versions through f have a severe memory handling bug in their implementation of the TLS Heartbeat Extension that could be used to reveal up to KB of the application s memory with every heartbeat CVE By reading the memory of the web server attackers could access sensitive data including the server s private key This could allow attackers to decode earlier eavesdropped communications if the encryption protocol used does not ensure perfect forward secrecy Knowledge of the private key could also allow an attacker to mount a man in the middle attack against any future communications The vulnerability might also reveal unencrypted parts of other users sensitive requests and responses including session cookies and passwords which might allow attackers to hijack the identity of another user of the service br At its disclosure on April around or half a million of the Internet s secure web servers certified by trusted authorities were believed to have been vulnerable to the attack However Heartbleed can affect both the server and client br br br CCS injection vulnerability br The CCS Injection Vulnerability CVE is a security bypass vulnerability that results from a weakness in OpenSSL methods used for keying material br This vulnerability can be exploited through the use of a man in the middle attack where an attacker may be able to decrypt and modify traffic in transit A remote unauthenticated attacker could exploit this vulnerability by using a specially crafted handshake to force the use of weak keying material Successful exploitation could lead to a security bypass condition where an attacker could gain access to potentially sensitive information The attack can only be performed between a vulnerable client and server br OpenSSL clients are vulnerable in all versions of OpenSSL before the versions za m and h Servers are only known to be vulnerable in OpenSSL and beta Users of OpenSSL servers earlier than are advised to upgrade as a precaution br br br ClientHello sigalgs DoS br This vulnerability CVE allows anyone to take a certificate read its contents and modify it accurately to abuse the vulnerability causing a certificate to crash a client or server If a client connects to an OpenSSL server and renegotiates with an invalid signature algorithms extension a null pointer dereference occurs This can cause a DoS attack against the server br A Stanford Security researcher David Ramos had a private exploit and presented it to the OpenSSL team which then patched the issue br OpenSSL classified the bug as a high severity issue noting version was found vulnerable br br br Key recovery attack on Diffie Hellman small subgroups br This vulnerability CVE allows when some particular circumstances are met to recover the OpenSSL server s private Diffie Hellman key An Adobe System Security researcher Antonio Sanso privately reported the vulnerability br OpenSSL classified the bug as a high severity issue noting only version was found vulnerable br br br Forks br br br Agglomerated SSL br In after frustrations with the original OpenSSL API Marco Peereboom an OpenBSD developer at the time forked the original API by creating Agglomerated SSL assl which reuses OpenSSL API under the hood but provides a much simpler external interface It has since been deprecated in light of the LibreSSL fork circa br br br LibreSSL br br In April in the wake of Heartbleed members of the OpenBSD project forked OpenSSL starting with the g branch to create a project named LibreSSL In the first week of pruning the OpenSSL s codebase more than lines of C code had been removed from the fork br br br BoringSSL br In June Google announced its own fork of OpenSSL dubbed BoringSSL Google plans to co operate with OpenSSL and LibreSSL developers Google has since developed a new library Tink based on BoringSSL br br br Criticisms br br br Backwards compatibility br Among developers communities OpenSSL is often cited for introducing API compatibility breakage with each new major version which requires software adaptations that tend to delay new version adoptions This combined with the fact that previous releases are generally maintained for no more than two years after a new major one is released tends to force some vendors to anticipate software migrations very early while still having little time left to update to a new release sometimes at the risk of losing some compatibility with existing software or risking regressions br br br Delay between releases br While LTS long term supported releases are maintained for years accumulated delays in release time frames tend to force operating system vendors to stay on the last supported release longer leaving less margin when the new version is available For example OpenSSL was initially expected for Q and was finally issued months later without extending the expected end of support for previously supported version and this despite the significant changes that required adaptations to existing software br br br Significant performance regressions br The reduced support delay of version mentioned above causes further concerns to users whose workloads are sensitive to performance Some time after general availability of some users started to report serious performance regressions affecting this version in multi threaded environments many citing the inefficient use of locks in frequent low level operations citing slowdowns from to times The OpenSSL team has created a meta issue to try to centralize reports of such massive performance regressions About half of these reporters indicate the impossibility for them to upgrade to from earlier versions adding to the trouble caused by the limited support time left on previous version br br br Consideration for users requirements br While the QUIC transport layer was being worked on to support the third version of the HTTP protocol it was proposed to use TLS to provide security and identified that some adaptations to TLS libraries would be needed Such modifications were brought to BoringSSL which was the library being primarily used by QUIC developers by then and later ported to other libraries A port of this work was quickly proposed to OpenSSL While some discussion started the same day it quickly stalled and was first blocked on license considerations then kept on hold once these concerns were cleared Finally months later the OpenSSL Management Committee announced on a blog post that this patch set would not be adopted for on the fear that the API would change over time Finally more than one year after planned release of which was still not coming a team of volunteers from Akamai and Microsoft decided to fork the project as QuicTLS and support these patches on top of the OpenSSL code in order to unblock QUIC development This action was generally welcome by the community Finally after OpenSSL was finally released the QUIC patch set was reconsidered and decided against causing tens to hundreds of reactions of disappointment among the community The pull request was closed while users felt the need to publicly express their disappointment or beg operating system vendors to support the alternative QuicTLS fork or seek for alternative solutions Finally Rich Salz co founder of the QuicTLS fork announced his interest in seeing an Apache project forked from QuicTLS As of February there is still no QUIC compatible long term supported TLS library available by default in operating systems without requiring end users to rebuild it themselves from sources br br br See also br br Comparison of TLS implementations br Comparison of cryptography libraries br List of free and open source software packages br POSSE project br LibreSSL br wolfSSL br br br Notes br br br br br br External links br br Official website br OpenSSL Manpages br OpenSSL Programming Guide archived br The OpenSSL License and the GPL by Mark McLoughlin br OpenSSL programming tutorial br OpenSSL Community Wiki