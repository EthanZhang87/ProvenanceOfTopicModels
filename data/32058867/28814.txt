title: Secure Shell
id: 28814
The Secure Shell Protocol SSH is a cryptographic network protocol for operating network services securely over an unsecured network Its most notable applications are remote login and command line execution br SSH was designed for Unix like operating systems as a replacement for Telnet and unsecured remote Unix shell protocols such as the Berkeley Remote Shell rsh and the related rlogin and rexec protocols which all use insecure plaintext methods of authentication like passwords br Since mechanisms like Telnet and Remote Shell are designed to access and operate remote computers sending the authentication tokens e g username and password for this access to these computers across a public network in an unsecured way poses a great risk of rd parties obtaining the password and achieving the same level of access to the remote system as the telnet user Secure Shell mitigates this risk through the use of encryption mechanisms that are intended to hide the contents of the transmission from an observer even if the observer has access to the entire data stream br SSH was first designed in by Finnish computer scientist Tatu Yl nen to replace the Telnet network protocol Subsequent development of the protocol suite proceeded in several developer groups producing several variants of implementation The protocol specification distinguishes two major versions referred to as SSH and SSH The most commonly implemented software stack is OpenSSH released in as open source software by the OpenBSD developers Implementations are distributed for all types of operating systems in common use including embedded systems br SSH applications are based on a client server architecture connecting an SSH client instance with an SSH server SSH operates as a layered protocol suite comprising three principal hierarchical components the transport layer provides server authentication confidentiality and integrity the user authentication protocol validates the user to the server and the connection protocol multiplexes the encrypted tunnel into multiple logical communication channels br br br Definition br SSH uses public key cryptography to authenticate the remote computer and allow it to authenticate the user if necessary br SSH may be used in several methodologies In the simplest manner both ends of a communication channel use automatically generated public private key pairs to encrypt a network connection and then use a password to authenticate the user br When the public private key pair is generated by the user manually the authentication is essentially performed when the key pair is created and a session may then be opened automatically without a password prompt In this scenario the public key is placed on all computers that must allow access to the owner of the matching private key which the owner keeps private While authentication is based on the private key the key is never transferred through the network during authentication SSH only verifies that the same person offering the public key also owns the matching private key br In all versions of SSH it is important to verify unknown public keys i e associate the public keys with identities before accepting them as valid Accepting an attacker s public key without validation will authorize an unauthorized attacker as a valid user br br br Authentication OpenSSH key management br On Unix like systems the list of authorized public keys is typically stored in the home directory of the user that is allowed to log in remotely in the file ssh authorized keys This file is respected by SSH only if it is not writable by anything apart from the owner and root When the public key is present on the remote end and the matching private key is present on the local end typing in the password is no longer required However for additional security the private key itself can be locked with a passphrase br The private key can also be looked for in standard places and its full path can be specified as a command line setting the option i for ssh The ssh keygen utility produces the public and private keys always in pairs br br br Use br br SSH is typically used to log into a remote computer s shell or command line interface CLI and to execute commands on a remote server It also supports mechanisms for tunneling forwarding of TCP ports and X connections and it can be used to transfer files using the associated SSH File Transfer Protocol SFTP or Secure Copy Protocol SCP br SSH uses the client server model An SSH client program is typically used for establishing connections to an SSH daemon such as sshd accepting remote connections Both are commonly present on most modern operating systems including macOS most distributions of Linux OpenBSD FreeBSD NetBSD Solaris and OpenVMS Notably versions of Windows prior to Windows version do not include SSH by default but proprietary freeware and open source versions of various levels of complexity and completeness did and do exist see Comparison of SSH clients In Microsoft began porting the OpenSSH source code to Windows and in Windows version an official Win port of OpenSSH is now available br File managers for UNIX like systems e g Konqueror can use the FISH protocol to provide a split pane GUI with drag and drop The open source Windows program WinSCP provides similar file management synchronization copy remote delete capability using PuTTY as a back end Both WinSCP and PuTTY are available packaged to run directly off a USB drive without requiring installation on the client machine The secure shell extension to the Chrome browser also allows SSH connections without any software installation and even allows SSH from a Chromebook computer Setting up an SSH server in Windows typically involves enabling a feature in the Settings app br SSH is important in cloud computing to solve connectivity problems avoiding the security issues of exposing a cloud based virtual machine directly on the Internet An SSH tunnel can provide a secure path over the Internet through a firewall to a virtual machine br The IANA has assigned TCP port UDP port and SCTP port for this protocol IANA had listed the standard TCP port for SSH servers as one of the well known ports as early as SSH can also be run using SCTP rather than TCP as the connection oriented transport layer protocol br br br Historical development br br br Version br In Tatu Yl nen a researcher at Helsinki University of Technology in Finland designed the first version of the protocol now called SSH prompted by a password sniffing attack at his university network The goal of SSH was to replace the earlier rlogin TELNET FTP and rsh protocols which did not provide strong authentication nor guarantee confidentiality He chose the port number because it is between telnet port and ftp port br Yl nen released his implementation as freeware in July and the tool quickly gained in popularity Towards the end of the SSH user base had grown to users in fifty countries br In December Yl nen founded SSH Communications Security to market and develop SSH The original version of the SSH software used various pieces of free software such as GNU libgmp but later versions released by SSH Communications Security evolved into increasingly proprietary software br It was estimated that by the number of users had grown to million br br br Version br In after being discussed in a working group named secsh a revised version of the SSH protocol SSH was adopted as a standard This version offers improved security and new features but is not compatible with SSH For example it introduces new key exchange mechanisms like Diffie Hellman key exchange improved data integrity checking via message authentication codes like MD or SHA which can be negotiated between client and server SSH also adds stronger encryption methods like AES which eventually replaced weaker and compromised ciphers from the previous standard like des New features of SSH include the ability to run any number of shell sessions over a single SSH connection Due to SSH s superiority and popularity over SSH some implementations such as libssh v Lsh and Dropbear eventually supported only the SSH protocol br br br Version br In January well after version was established RFC specified that an SSH server supporting as well as prior versions should identify its protocol version as This version number does not reflect a historical software revision but a method to identify backward compatibility br br br OpenSSH and OSSH br In developers desiring availability of a free software version restarted software development from the release of the original SSH program which was the last released under an open source license This served as a code base for Bj rn Gr nvall s OSSH software Shortly thereafter OpenBSD developers forked Gr nvall s code and created OpenSSH which shipped with Release of OpenBSD From this version a portability branch was formed to port OpenSSH to other operating systems br As of OpenSSH was the single most popular SSH implementation being the default version in a large number of operating system distributions OSSH meanwhile has become obsolete OpenSSH continues to be maintained and supports the SSH protocol having expunged SSH support from the codebase in the OpenSSH release br br br Uses br br SSH is a protocol that can be used for many applications across many platforms including most Unix variants Linux the BSDs including Apple s macOS and Solaris as well as Microsoft Windows Some of the applications below may require features that are only available or compatible with specific SSH clients or servers For example using the SSH protocol to implement a VPN is possible but presently only with the OpenSSH server and client implementation br br For login to a shell on a remote host replacing Telnet and rlogin br For executing a single command on a remote host replacing rsh br For setting up automatic passwordless login to a remote server for example using OpenSSH br In combination with rsync to back up copy and mirror files efficiently and securely br For forwarding a port br For tunneling not to be confused with a VPN which routes packets between different networks or bridges two broadcast domains into one br For using as a full fledged encrypted VPN Note that only OpenSSH server and client supports this feature br For forwarding X from a remote host possible through multiple intermediate hosts br For browsing the web through an encrypted proxy connection with SSH clients that support the SOCKS protocol br For securely mounting a directory on a remote server as a filesystem on a local computer using SSHFS br For automated remote monitoring and management of servers through one or more of the mechanisms discussed above br For development on a mobile or embedded device that supports SSH br For securing file transfer protocols br br br File transfer protocols br The Secure Shell protocols are used in several file transfer mechanisms br br Secure copy SCP which evolved from RCP protocol over SSH br rsync intended to be more efficient than SCP Generally runs over an SSH connection br SSH File Transfer Protocol SFTP a secure alternative to FTP not to be confused with FTP over SSH or FTPS br Files transferred over shell protocol FISH released in which evolved from Unix shell commands over SSH br Fast and Secure Protocol FASP aka Aspera uses SSH for control and UDP ports for data transfer br br br Architecture br br The SSH protocol has a layered architecture with three separate components br br The transport layer RFC typically uses the Transmission Control Protocol TCP of TCP IP reserving port number as a server listening port This layer handles initial key exchange as well as server authentication and sets up encryption compression and integrity verification It exposes to the upper layer an interface for sending and receiving plaintext packets with a size of up to bytes each but more can be allowed by each implementation The transport layer also arranges for key re exchange usually after GB of data has been transferred or after one hour has passed whichever occurs first br The user authentication layer RFC handles client authentication and provides a suite of authentication algorithms Authentication is client driven when one is prompted for a password it may be the SSH client prompting not the server The server merely responds to the client s authentication requests Widely used user authentication methods include the following br password a method for straightforward password authentication including a facility allowing a password to be changed Not all programs implement this method br publickey a method for public key based authentication usually supporting at least DSA ECDSA or RSA keypairs with other implementations also supporting X certificates br keyboard interactive RFC a versatile method where the server sends one or more prompts to enter information and the client displays them and sends back responses keyed in by the user Used to provide one time password authentication such as S Key or SecurID Used by some OpenSSH configurations when PAM is the underlying host authentication provider to effectively provide password authentication sometimes leading to inability to log in with a client that supports just the plain password authentication method br GSSAPI authentication methods which provide an extensible scheme to perform SSH authentication using external mechanisms such as Kerberos or NTLM providing single sign on capability to SSH sessions These methods are usually implemented by commercial SSH implementations for use in organizations though OpenSSH does have a working GSSAPI implementation br The connection layer RFC defines the concept of channels channel requests and global requests which define the SSH services provided A single SSH connection can be multiplexed into multiple logical channels simultaneously each transferring data bidirectionally Channel requests are used to relay out of band channel specific data such as the changed size of a terminal window or the exit code of a server side process Additionally each channel performs its own flow control using the receive window size The SSH client requests a server side port to be forwarded using a global request Standard channel types include br shell for terminal shells SFTP and exec requests including SCP transfers br direct tcpip for client to server forwarded connections br forwarded tcpip for server to client forwarded connections br The SSHFP DNS record RFC provides the public host key fingerprints in order to aid in verifying the authenticity of the host br This open architecture provides considerable flexibility allowing the use of SSH for a variety of purposes beyond a secure shell The functionality of the transport layer alone is comparable to Transport Layer Security TLS the user authentication layer is highly extensible with custom authentication methods and the connection layer provides the ability to multiplex many secondary sessions into a single SSH connection a feature comparable to BEEP and not available in TLS br br br Algorithms br EdDSA ECDSA RSA and DSA for public key cryptography br ECDH and Diffie Hellman for key exchange br HMAC AEAD and UMAC for MAC br AES and deprecated RC DES DES for symmetric encryption br AES GCM and ChaCha Poly for AEAD encryption br SHA and deprecated MD for key fingerprint br br br Vulnerabilities br br br SSH br In a vulnerability was described in SSH which allowed the unauthorized insertion of content into an encrypted SSH stream due to insufficient data integrity protection from CRC used in this version of the protocol A fix known as SSH Compensation Attack Detector was introduced into most implementations Many of these updated implementations contained a new integer overflow vulnerability that allowed attackers to execute arbitrary code with the privileges of the SSH daemon typically root br In January a vulnerability was discovered that allows attackers to modify the last block of an IDEA encrypted session The same month another vulnerability was discovered that allowed a malicious server to forward a client authentication to another server br Since SSH has inherent design flaws which make it vulnerable it is now generally considered obsolete and should be avoided by explicitly disabling fallback to SSH Most modern servers and clients support SSH br br br CBC plaintext recovery br In November a theoretical vulnerability was discovered for all versions of SSH which allowed recovery of up to bits of plaintext from a block of ciphertext that was encrypted using what was then the standard default encryption mode CBC The most straightforward solution is to use CTR counter mode instead of CBC mode since this renders SSH resistant to the attack br br br Suspected decryption by NSA br On December Der Spiegel published classified information leaked by whistleblower Edward Snowden which suggests that the National Security Agency may be able to decrypt some SSH traffic The technical details associated with such a process were not disclosed A analysis of the CIA hacking tools BothanSpy and Gyrfalcon suggested that the SSH protocol was not compromised br br br Terrapin attack br br A novel man in the middle attack against most current ssh implementations was discovered in It was named the Terrapin attack by its discoverers However the risk is mitigated by the requirement to intercept a genuine ssh session and that the attack is restricted in its scope fortuitously resulting mostly in failed connections The ssh developers have stated that the major impact of the attack is to degrade the keystroke timing obfuscation features of ssh The vulnerability was fixed in OpenSSH but requires both client and server to be upgraded for the fix to be fully effective br br br Standards documentation br The following RFC publications by the IETF secsh working group document SSH as a proposed Internet standard br br RFC The Secure Shell SSH Protocol Assigned Numbers br RFC The Secure Shell SSH Protocol Architecture br RFC The Secure Shell SSH Authentication Protocol br RFC The Secure Shell SSH Transport Layer Protocol br RFC The Secure Shell SSH Connection Protocol br RFC Using DNS to Securely Publish Secure Shell SSH Key Fingerprints br RFC Generic Message Exchange Authentication for the Secure Shell Protocol SSH br RFC The Secure Shell SSH Session Channel Break Extension br RFC The Secure Shell SSH Transport Layer Encryption Modes br RFC Improved Arcfour Modes for the Secure Shell SSH Transport Layer Protocol br The protocol specifications were later updated by the following publications br br RFC Diffie Hellman Group Exchange for the Secure Shell SSH Transport Layer Protocol March br RFC RSA Key Exchange for the Secure Shell SSH Transport Layer Protocol March br RFC Generic Security Service Application Program Interface GSS API Authentication and Key Exchange for the Secure Shell SSH Protocol May br RFC The Secure Shell SSH Public Key File Format November br RFC Secure Shell Public Key Subsystem March br RFC AES Galois Counter Mode for the Secure Shell Transport Layer Protocol August br RFC Elliptic Curve Algorithm Integration in the Secure Shell Transport Layer December br RFC X v Certificates for Secure Shell Authentication March br RFC Suite B Cryptographic Suites for Secure Shell SSH May br RFC Use of the SHA Algorithm with RSA Digital Signature Algorithm DSA and Elliptic Curve DSA ECDSA in SSHFP Resource Records April br RFC SHA Data Integrity Verification for the Secure Shell SSH Transport Layer Protocol July br RFC Ed SSHFP Resource Records March br RFC Secure Shell Transport Model for the Simple Network Management Protocol SNMP June br RFC Using the NETCONF Protocol over Secure Shell SSH June br RFC Use of RSA Keys with SHA and SHA in the Secure Shell SSH Protocol March br draft gerhards syslog transport ssh SSH transport mapping for SYSLOG July br draft ietf secsh filexfer SSH File Transfer Protocol July br In addition the OpenSSH project includes several vendor protocol specifications extensions br br OpenSSH PROTOCOL overview br OpenSSH certificate key overview br draft miller ssh agent SSH Agent Protocol December br br br See also br Brute force attack br Comparison of SSH clients br Comparison of SSH servers br Corkscrew br Ident br OpenSSH br Secure Shell tunneling br Web based SSH br br br br br br Further reading br Barrett Daniel J Silverman Richard E Byrnes Robert G SSH The Secure Shell The Definitive Guide nd ed O Reilly ISBN br Stahnke Michael Pro OpenSSH Apress ISBN br Tatu Yl nen July Announcement Ssh Secure Shell Remote Login Program comp security unix Original announcement of Ssh br Dwivedi Himanshu Implementing SSH Wiley ISBN br br br External links br br SSH Protocols br M Joseph J Susoy November P R s Secure Shell Public Key Subsystem doi RFC RFC br Original SSH source tarball