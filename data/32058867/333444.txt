title: TOC protocol
id: 333444
The TOC protocol or Talk to OSCAR protocol was a protocol used by some third party AOL Instant Messenger clients and several clients that AOL produced itself Sometime near August AOL discontinued support for the protocol and no longer uses it in any of the instant messaging clients it actively maintains such as its Windows and Mac clients for the AOL Instant Messenger and ICQ systems However it once did produce several of its own TOC clients including TiK and TAC which are written in Tcl Tk TNT which is written in Emacs Lisp all of which are open source and a Java client originally called TIC which later became the Quick Buddy web applet AOL also provided the TOC protocol specification openly to developers in the hopes that they will use it instead of the proprietary OSCAR protocol they use themselves In July AOL turned off the TOC servers and it is no longer possible to connect to AIM using this protocol br TOC was an ASCII based protocol while OSCAR is a binary protocol In addition TOC contained fewer features than its OSCAR counterpart OSCAR provides such functionality as buddy icons file transfer and advertising br br br How it works br TOC acted as a wrapper for the OSCAR protocol In the grand scheme of things the TOC server was nothing but an OSCAR client that happened to listen on a socket translating messages between the two protocols Upon login the TOC client specified an OSCAR login server presumably either login oscar aol com or login icq com that the TOC server used on behalf of the client br TOC used FLAP to encapsulate its messages just as OSCAR does however FLAP has been hacked in such a way that it can be implemented on the same port as an HTTP server By default the TOC server operated in HTTP mode indistinguishable from a typical web server If a connecting client in place of an HTTP request writes the string FLAPON followed by two CRLFs TOC would switch gears and start reading FLAP messages Upon getting a user s profile the client was expected to re connect to TOC and use it as an HTTP server which would host the user s profile in HTML br Once connected two basic message formats for communications inside of FLAP existed Client to server messages were sent in a format resembling a Unix style command line commands with whitespace separated arguments quoting and backslash escape sequences Server to client messages were much simpler they were sent as colon separated ASCII strings in a manner similar to many Unix config files Thus it was quite easy to write a client as the incoming messages were very easy to parse and outgoing commands were easy to generate br This is in contrast to OSCAR which due to the binary representation of data can be more difficult to understand br br br TOC br The TOC protocol is an updated version of the TOC protocol or Talk to OSCAR protocol Its existence was never documented by AOL and it is only used in a few AOL Instant Messenger clients Some clients are beginning to offer plugins for TOC in light of AOL s recent shutdown of their TOC servers Like its predecessor TOC is an ASCII protocol and lacks some features of OSCAR but unlike TOC TOC is known to support buddy icons and receiving file transfers not sending TOC operates in essentially the same way as TOC as a wrapper for OSCAR Porting code from TOC to TOC is remarkably easy as well br Because of the similarities between TOC and TOC they are better defined by their differences of which there are only a few br br In TOC connecting with an empty buddy list would make it so that others are not able to see you online This has been corrected in TOC br In TOC there is a toc add deny command but no toc remove deny TOC corrects this as well br The sign on process is basically the same as TOC but with a few new parameters version a number and a code created based on the username and password The purpose of the number is unknown The default is and it seems to have no effect if changed br Permitting and denying have been revamped and are much easier and full featured in TOC The commands toc add permit toc remove permit toc add deny and toc remove deny are all present and accessible at any time br Buddy list commands have also been improved Group management is easier with the toc new group and toc del group commands Also it is possible to add or remove more than one buddy at a time and choose the groups they are in br A few syntax changes have also been made and parameters have been added to some commands The uses of these parameters are still undetermined br Aside from this the only changes from TOC are the fact that a was added on most commands both CLIENT SERVER and vice versa E g IM IN UPDATE BUDDY etc br TOC also limits the number of ScreenNames that can log in from a single IP address br br br See also br Comparison of instant messaging protocols br br br br br br External links br Detailed Specification br TOC Protocol specification br TOC Protocol specification Archived at the Wayback Machine br History of AIM OSCAR and TOC br br br Implementations br TOC br br Py TOC python br Net AIM perl br PHPTocLib php br Tik Tcl Tk br TNT Emacs Lisp br TAC Tcl non GUI br AOL Quick Buddy Applet TIC Java Applet br naim ncurses non GUI br miniaim C br SimpleAIM Java br TOC br br Fluent Toc C br Raven Aim perl br Plugin for Miranda Instant Messenger br PHPTocLib PHP br BlueTOC PHP br TerraIM C br TNT Emacs Lisp 