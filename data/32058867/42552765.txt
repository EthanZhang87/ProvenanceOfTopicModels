title: LibreSSL
id: 42552765
LibreSSL is an open source implementation of the Transport Layer Security TLS protocol The implementation is named after Secure Sockets Layer SSL the deprecated predecessor of TLS for which support was removed in release The OpenBSD project forked LibreSSL from OpenSSL g in April as a response to the Heartbleed security vulnerability with the goals of modernizing the codebase improving security and applying development best practices br br br History br After the Heartbleed security vulnerability was discovered in OpenSSL the OpenBSD team audited the codebase and decided it was necessary to fork OpenSSL to remove dangerous code The libressl org domain was registered on April the project announced the name on April In the first week of development more than lines of C code were removed Unused code was removed and support for obsolete operating systems Classic Mac OS NetWare OS bit Windows and some older operating systems OpenVMS was removed br LibreSSL was initially developed as an intended replacement for OpenSSL in OpenBSD and was ported to other platforms once a stripped down version of the library was stable As of April the project was seeking a stable commitment of external funding On May Bob Beck presented LibreSSL The First Days and What The Future Holds during the BSDCan conference in which he described the progress made in the first month On June several OpenSSL bugs became public While several projects were notified in advance LibreSSL was not Theo de Raadt accused the OpenSSL developers of intentionally withholding this information from OpenBSD and LibreSSL br On June Google created another fork of OpenSSL called BoringSSL and promised to exchange fixes with LibreSSL Google has already relicensed some of its contributions under the ISC license as it was requested by the LibreSSL developers On June Theo de Raadt welcomed BoringSSL and outlined the plans for LibreSSL portable Starting on July code porting for macOS and Solaris began while the initial porting to Linux began on June br As of OpenBSD uses LibreSSL as the primary SSL library Alpine Linux supported LibreSSL as its primary TLS library for three years until release in January Gentoo supported LibreSSL until February Python dropped LibreSSL after being supported since Python br br br Adoption br LibreSSL is the default provider of TLS for br br Dragonfly BSD br OpenBSD br Hyperbola GNU Linux libre br OpenSSH on Windows br LibreSSL is the default provider of TLS for these now discontinued systems br br OpenELEC br TrueOS packages br LibreSSL is a selectable provider of TLS for br br FreeBSD packages br Gentoo packages support dropped as of February br OPNsense packages will be dropped after br macOS br br br Changes br br br Memory related br Changes include replacement of custom memory calls to ones in a standard library for example strlcpy calloc asprintf reallocarray etc This process may help later on to catch buffer overflow errors with more advanced memory analysis tools or by observing program crashes via ASLR use of the NX bit stack canaries etc br Fixes for potential double free scenarios have also been cited in the VCS commit logs including explicit assignments of null pointer values There have been extra sanity checks also cited in the commit logs related to ensuring length arguments unsigned to signed variable assignments pointer values and method returns br br br Proactive measures br In order to maintain good programming practice a number of compiler options and flags designed for safety have been enabled by default to help in spotting potential issues so they can be fixed earlier Wall Werror Wextra Wuninitialized There have also been code readability updates which help future contributors in verifying program correctness KNF white space line wrapping etc Modification or removal of unneeded method wrappers and macros also help with code readability and auditing Error and I O abstraction library references br Changes were made to ensure that LibreSSL will be year compatible along with maintaining portability for other similar platforms In addition explicit bzero and bn clear calls were added to prevent the compiler from optimizing them out and prevent attackers from reading previously allocated memory br br br Cryptographic br There were changes to help ensure proper seeding of random number generator based methods via replacements of insecure seeding practices taking advantage of features offered by the kernel itself natively In terms of notable additions made OpenBSD has added support for newer and more reputable algorithms ChaCha stream cipher and Poly message authentication code along with a safer set of elliptic curves brainpool curves from RFC up to bits in strength br br br Added features br The initial release of LibreSSL added a number of features the ChaCha and Poly algorithm the Brainpool and ANSSI elliptic curves and the AES GCM and ChaCha Poly AEAD modes br Later versions added the following br br Automatic ephemeral EC keys br Built in arc random implementation on macOS and FreeBSD br Reworked GOST cipher suite support br ALPN support br Support for SHA and Camellia cipher suites br TLS FALLBACK SCSV server side support br certhash as a replacement of the c rehash script br X STORE load mem API for loading certificates from memory enhance chroot support br Experimental Windows binaries br Minor update mainly for improving Windows support first working and bit binaries br libtls declared stable and enabled by default br AIX and Cygwin support br Addition of EC curve nid nist and EC curve nist nid from OpenSSL initial Windows XP support br Defines LIBRESSL VERSION NUMBER added TLS methods as a replacement for the SSLv method calls cmake build support br br br Old insecure features br The initial release of LibreSSL disabled a number of features by default Some of the code for these features was later removed including Kerberos US Export ciphers TLS compression DTLS heartbeat SSL v and SSL v br Later versions disabled more features br br Following the discovery of the POODLE vulnerability in the legacy SSL protocol LibreSSL now disables the use of SSL by default br GOST R signature authentication br Removal of Dynamic Engine and MDC DES support br Removal of SSL from the openssl binary removal of Internet Explorer workarounds RSAX engine br Complete removal of SSL SHA and DTLS BAD VER br br br Code removal br The initial release of LibreSSL has removed a number of features that were deemed insecure unnecessary or deprecated as part of OpenBSD br br In response to Heartbleed the heartbeat functionality was one of the first features to be removed br Support for obsolete platforms Classic Mac OS NetWare OS bit Windows were removed br Support for some older platforms OpenVMS was removed br Support for platforms that do not exist such as big endian i and amd br Support for old compilers br The IBM Broadcom ubsec Sureware Nuron GOST GMP CSwift CHIL CAPI Atalla and AEP engines were removed due to irrelevance of hardware or dependency on non free libraries br The OpenSSL PRNG was removed and replaced with ChaCha based implementation of arc random br Preprocessor macros that have been deemed unnecessary or insecure or had already been deprecated in OpenSSL for a long time e g des old h br Older unneeded files for assembly language C and Perl e g EGD br MD SEED functionality br SSL SHA DTLS BAD VER br The Dual EC DRBG algorithm which is suspected of having a back door was cut along with support for the FIPS standard that required it Unused protocols and insecure algorithms have also been removed including the support for FIPS MD MD J PAKE and SRP br br br Bug backlog br One of the complaints of OpenSSL was the number of open bugs reported in the bug tracker that had gone unfixed for years Older bugs are now being fixed in LibreSSL br br br See also br br Comparison of TLS implementations br Comparison of cryptography libraries br OpenSSH br wolfSSH br br br br br br External links br Official website br LibreSSL and libtls source code OpenGrok br LibreSSL Portable on GitHub