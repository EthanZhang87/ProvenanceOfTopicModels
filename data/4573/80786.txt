title: XPCOM
id: 80786
Cross Platform Component Object Model XPCOM is a cross platform component model from Mozilla It is similar to Component Object Model COM Common Object Request Broker Architecture CORBA and system object model SOM It features multiple language bindings and interface description language IDL descriptions thus programmers can plug their custom functions into the framework and connect it with other components br The most prominent usage of XPCOM is within the Firefox web browser Many of its internal components interact via XPCOM interfaces Furthermore Firefox used to allow add ons extensive XPCOM access but this was removed in and replaced with the less permissive WebExtensions API Two forks of Firefox still support XPCOM add on capability Pale Moon and Basilisk br br br Model br XPCOM is one of the main things making the Mozilla application environment an actual framework It is a development environment that provides the following features for the cross platform software developer br br Component management br File abstraction br Object message passing br Memory management br This component object model makes virtually all of the functionality of Gecko available as a series of components or reusable cross platform libraries that can be accessed from the web browser or scripted from any Mozilla application Applications that must access the various Mozilla XPCOM libraries networking security DOM etc use a special layer of XPCOM called XPConnect which reflects the library interfaces into JavaScript or other languages XPConnect glues the front end to the C C or Rust programming language based components in XPCOM and it can be extended to include scripting support for other languages PyXPCOM already offers support for Python wxWidgets provide support for Perl and there are efforts underway to add Common Language Infrastructure CLI and Ruby language support for XPConnect br For developers XPCOM allows writing components in C C JavaScript Python or other languages for which special bindings have been created and compile and run those components on dozens of different platforms including these and others where Mozilla is supported br The flexibility to reuse the XPCOM components from the Gecko library and develop new components that run on different platforms facilitates rapid application development and results in an application that is more productive and easier to maintain The networking library for example is a set of XPCOM components that can be accessed and used by any Mozilla application File I O security password management and profiles are also separate XPCOM components that programmers can use in their own application development br br br Past overuse br XPCOM adds a lot of code for marshalling objects and in the Netscape era XPCOM was overused for internal interfaces where it wasn t truly necessary resulting in software bloat This was a key reason why in Apple forked KHTML not Gecko to create the WebKit engine for its Safari browser br Mozilla has since cleaned up some of the XPCOM bloat By this combined with other efforts resulted in big performance improvements for Gecko br br br br br br External links br XPCOM API Reference br XPCOM Documentation br A Simple XPCOM Tutorial