title: Apache SpamAssassin
id: 274137
Apache SpamAssassin is a computer program used for e mail spam filtering It uses a variety of spam detection techniques including DNS and fuzzy checksum techniques Bayesian filtering external programs blacklists and online databases It is released under the Apache License and is a part of the Apache Foundation since br The program can be integrated with the mail server to automatically filter all mail for a site It can also be run by individual users on their own mailbox and integrates with several mail programs Apache SpamAssassin is highly configurable if used as a system wide filter it can still be configured to support per user preferences br br br History br Apache SpamAssassin was created by Justin Mason who had maintained a number of patches against an earlier program named filter plx by Mark Jeftovic which in turn was begun in August Mason rewrote all of Jeftovic s code from scratch and uploaded the resulting codebase to SourceForge on April br In Summer the project became an Apache Software Foundation project and later officially renamed to Apache SpamAssassin br br br Methods of usage br Apache SpamAssassin is a Perl based application Mail SpamAssassin in CPAN which is usually used to filter all incoming mail for one or several users It can be run as a standalone application or as a subprogram of another application such as a Milter SA Exim Exiscan MailScanner MIMEDefang Amavis or as a client spamc that communicates with a daemon spamd The client server or embedded mode of operation has performance benefits but under certain circumstances may introduce additional security risks br Typically either variant of the application is set up in a generic mail filter program or it is called directly from a mail user agent that supports this whenever new mail arrives Mail filter programs such as procmail can be made to pipe all incoming mail through Apache SpamAssassin with an adjustment to a user s procmailrc file br br br Operation br Apache SpamAssassin comes with a large set of rules which are applied to determine whether an email is spam or not Most rules are based on regular expressions that are matched against the body or header fields of the message but Apache SpamAssassin also employs a number of other spam fighting techniques The rules are called tests in the SpamAssassin documentation br Each test has a score value that will be assigned to a message if it matches the test s criteria The scores can be positive or negative with positive values indicating spam and negative ham non spam messages A message is matched against all tests and Apache SpamAssassin combines the results into a global score which is assigned to the message The higher the score the higher the probability that the message is spam br Apache SpamAssassin has an internal configurable score threshold to classify a message as spam Usually a message will only be considered as spam if it matches multiple criteria matching just a single test will not usually be enough to reach the threshold br If Apache SpamAssassin considers a message to be spam it can be further rewritten In the default configuration the content of the mail is appended as a MIME attachment with a brief excerpt in the message body and a description of the tests which resulted in the mail being classified as spam If the score is lower than the defined settings by default the information about the tests passed and total score is still added to the email headers and can be used in post processing for less severe actions such as tagging the mail as suspicious br Apache SpamAssassin allows for a per user configuration of its behavior even if installed as system wide service the configuration can be read from a file or a database In their configuration users can specify individuals whose emails are never considered spam or change the scores for certain rules The user can also define a list of languages which they want to receive mail in and Apache SpamAssassin then assigns a higher score to all mails that appear to be written in another language br Apache SpamAssassin is based on heuristics pattern recognition and such software exhibits false positives and false negatives br br br Network based filtering methods br Apache SpamAssassin also supports br br DNS based blacklists and DNS based whitelists br Fuzzy checksum based spam detection filters such as the Distributed Checksum Clearinghouse Vipul s Razor Archived March at the Wayback Machine and the Cloudmark Authority plugins commercial br Hashcash email stamps based on proof of work br Sender Policy Framework and DomainKeys Identified Mail br URI blacklists such as SURBL or URIBL which track spam websites br More methods can be added reasonably easily by writing a Perl plug in for Apache SpamAssassin br br br Bayesian filtering br Apache SpamAssassin reinforces its rules through Bayesian filtering where a user or administrator feeds examples of good ham and bad spam into the filter in order to learn the difference between the two For this purpose Apache SpamAssassin provides the command line tool sa learn which can be instructed to learn a single mail or an entire mailbox as either ham or spam br Typically the user will move unrecognized spam to a separate folder and then run sa learn on the folder of non spam and on the folder of spam separately Alternatively if the mail user agent supports it sa learn can be called for individual emails Regardless of the method used to perform the learning SpamAssassin s Bayesian test will help score future e mails based on this learning to improve the accuracy br br br Licensing br Apache SpamAssassin is free open source software licensed under the Apache License Versions prior to are dual licensed under the Artistic License and the GNU General Public License br br br sa compile br sa compile is a utility distributed with Apache SpamAssassin that compiles a SpamAssassin ruleset into a deterministic finite automaton that allows Apache SpamAssassin to use processor power more efficiently br br br Testing br Apache SpamAssassin is designed to trigger on the GTUBE a byte string similar to the antivirus EICAR test file If this string is inserted in an RFC formatted message and passed through the Apache SpamAssassin engine Apache SpamAssassin will trigger with a weight of br br br See also br br Anti spam techniques br br br Notes br br br br br br External links br Official website br Apache SpamAssassin Wiki br Apache SpamAssassin Rule Updates Wiki Automatically updating Apache SpamAssassin br KAM cf KAM Ruleset for Apache SpamAssassin