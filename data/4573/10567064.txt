title: Roundup (issue tracker)
id: 10567064
Roundup is an open source issue or bug tracking system featuring a command line web and e mail interface It is written in Python and designed to be highly customizable br br br History br Roundup was designed by Ka Ping Yee for the Software Carpentry project and was developed from to under the direction of Richard Jones Since then it has been developed by the Roundup community It was the issue tracker for the Python programming language for years before migrating to GitHub It was once described as like Bugzilla without the six years of training or RT without that tedious MySQL rubbish br br br Features br The standard configuration of Roundup features br br a web interface for viewing editing and searching issues br REST and XMLRPC interfaces for remote automation and web applications br a Mail gateway allowing creation and changing of issues br a database abstraction layer currently supporting among others Python s built in anydbm module PostgreSQL MySQL and SQLite br issue specific nosy lists used for e mail notifications and conversation each issue effectively becoming a mini mailing list br an authorization system based on roles of users classes and objects br an interactive shell for backup and restore tasks and for manipulation of objects br Roundup supports several web backends It can be run standalone as a background daemon process as a CGI script or as WSGI application br br br Concepts br Roundup is customized by changing the contents of the tracker instance directory br br br Database schema br The database schema is defined in a Python file in the tracker instance s root directory it is br re read whenever the server is started anew When changes are found e g new attributes the tables of the underlying RDBS are altered accordingly br br br Page templates br Roundup uses the Template Attribute Language TAL to create HTML or XHTML output Version adds experimental support for alternative template engines such as Jinja br Templates are named after the classes in database Roundup automatically chooses template based on class name requested from URL Some templates are used for several classes e g generic index html which allows authorized users to change the objects of all classes which lack an own index template br When an issue is requested this designator is split in the issue class and the id By default an item template is chosen First an issue item html template file is looked for if it can t be found generic item html is used as a fallback option If this is missing equally an error occurs br br br Detectors br Many Roundup functions including some of the standard functionality are implemented using so called detectors which are located in the detectors sub directory of the tracker instance They are Python subroutines which have access to the object to change if already created and the requested attribute changes br Detectors are distinguished between auditors and reactors Auditors are used primarily for several automatic changes in the standard configuration the assignedto user is automatically added to the nosy list of the issue and to refuse un allowed changes reactors are executed thereafter and used e g for the e mail notification feature sending notification mails to all users interested in a certain issue when a comment is added to it br Detectors are triggered whenever one of the actions br br create br set change of attributes br retire br restore br is requested They can be used to create an elaborated custom workflow br br br Extensions br The instance subdirectory extensions can hold additional files which are needed for extended functionalities which can t conveniently be done with TAL even totally new actions are possible br Python modules which are used by both detectors and extensions can be put in the lib subdirectory br br br See also br Comparison of issue tracking systems br br br br br br External links br Official website br Repository