title: SpiderMonkey
id: 189327
SpiderMonkey is an open source JavaScript and WebAssembly engine by the Mozilla Foundation br It is the first JavaScript engine written by Brendan Eich at Netscape Communications and later released as open source and currently maintained by the Mozilla Foundation It is used in the Firefox web browser br br br History br Eich wrote JavaScript in ten days in br having been recruited to Netscape with the promise of doing Scheme in the browser br The idea of using Scheme was abandoned when engineering management decided that the language must look like Java In late Eich needing to pay off the substantial technical debt left from the first year stayed home for two weeks to rewrite Mocha as the codebase that became known as SpiderMonkey Mocha was the original working name for the language br In Eich transferred management of the SpiderMonkey code to Dave Mandelin br br br Versions br br br Standards br SpiderMonkey implements the ECMA specification ECMAScript ECMA ECMAScript for XML E X was dropped in early br br br Internals br SpiderMonkey is written in C C and contains an interpreter the IonMonkey JIT compiler and a garbage collector br br br TraceMonkey br TraceMonkey was the first JIT compiler written for the JavaScript language Initially introduced as an option in a beta release and introduced in Brendan Eich s blog on August the compiler became part of the mainline release as part of SpiderMonkey in Firefox providing performance improvements ranging between and times faster than the baseline interpreter in Firefox br Instead of compiling whole functions TraceMonkey was a tracing JIT which operates by recording control flow and data types during interpreter execution This data then informed the construction of trace trees highly specialized paths of native code br Improvements to J gerMonkey eventually made TraceMonkey obsolete especially with the development of the SpiderMonkey type inference engine TraceMonkey is absent from SpiderMonkey from Firefox onward br br br J gerMonkey br J gerMonkey internally named MethodJIT was a whole method JIT compiler designed to improve performance in cases where TraceMonkey could not generate stable native code It was first released in Firefox and eventually entirely supplanted TraceMonkey It has itself been replaced by IonMonkey br J gerMonkey operated very differently from other compilers in its class while typical compilers worked by constructing and optimizing a control flow graph representing the function J gerMonkey instead operated by iterating linearly forward through SpiderMonkey bytecode the internal function representation Although this prohibits optimizations that require instruction reordering J gerMonkey compiling has the advantage of being very fast which is useful for JavaScript since recompiling due to changing variable types is frequent br Mozilla implemented a number of critical optimizations in J gerMonkey most importantly polymorphic inline caches and type inference br The difference between TraceMonkey and J gerMonkey JIT techniques and the need for both was explained in a hacks mozilla org article A more in depth explanation of the technical details was provided by Chris Leary one of SpiderMonkey s developers in a blog post Archived December at archive today More technical information can be found in other developer s blogs dvander dmandelin br br br IonMonkey br IonMonkey was a JavaScript JIT compiler of Mozilla which was aimed to enable many new optimizations that were impossible with the prior J gerMonkey architecture br IonMonkey was a more traditional compiler it translated SpiderMonkey bytecode into a control flow graph using static single assignment form SSA for the intermediate representation This architecture enabled well known optimizations from other programming languages to be used for JavaScript including type specialization function inlining linear scan register allocation dead code elimination and loop invariant code motion br The compiler can emit fast native code translations of JavaScript functions on the ARM x and x platforms It has been the default engine since Firefox br br br OdinMonkey br OdinMonkey is the name of Mozilla s new optimization module for asm js an easily compilable subset of JavaScript OdinMonkey itself is not a JIT compiler it uses the current JIT compiler It s included with Firefox from release br br br WarpMonkey br The WarpMonkey JIT replaces the former IonMonkey engine from version It is able to inline other scripts and specialize code based on the data and arguments being processed br It translates the bytecode and Inline Cache data into a Mid level Intermediate Representation Ion MIR representation This graph is transformed and optimized before being lowered to a Low level Intermediate Representation Ion LIR This LIR performs register allocation and then generates native machine code in a process called Code Generation br The optimizations here assume that a script continues to see data similar what has been seen before The Baseline JITs are essential to success here because they generate ICs that match observed data If after a script is compiled with Warp it encounters data that it is not prepared to handle it performs a bailout The bailout mechanism reconstructs the native machine stack frame to match the layout used by the Baseline Interpreter and then branches to that interpreter as though we were running it all along Building this stack frame may use special side table saved by Warp to reconstruct values that are not otherwise available br br br Use br SpiderMonkey is intended to be embedded in other applications that provide host environments for JavaScript An incomplete list follows br br Mozilla Firefox Thunderbird SeaMonkey and other applications that use the Mozilla application framework br Forks of Firefox including the Pale Moon Basilisk and Waterfox web browsers br Data storage applications br MongoDB moved from V to SpiderMonkey in version br Riak uses SpiderMonkey as the runtime for JavaScript MapReduce operations br CouchDB database system written in Erlang JavaScript is used for defining maps filters reduce functions and viewing data for example in HTML format br Adobe Acrobat and Adobe Reader Adobe Flash Professional and Adobe Dreamweaver Adobe Acrobat DC uses Spidermonkey with ECMA support forward ported br GNOME desktop environment version and later br Yahoo Widgets formerly named Konfabulator br FreeSWITCH open source telephony engine uses SpiderMonkey to allow users to write call management scripts in JavaScript br PythonMonkey uses SpiderMonkey to allow users to write programs where JavaScript and Python functions types and events interoperate and where possible share memory storage br The text based web browser ELinks uses SpiderMonkey to support JavaScript br Parts of SpiderMonkey are used in the Wine project s JScript re implementation br Synchronet a BBS e mail Web and application server using the SpiderMonkey engine br JavaScript OSA a SpiderMonkey inter process communication language for the Mac computer br A D a real time strategy game br Wasmer has incorporated SpiderMonkey into their WinterJS open source project a JavaScript runtime environment br SpiderMonkey is also used in many other open source projects an external list is maintained at Mozilla s developer site br SpiderMonkey includes a JavaScript Shell for interactive JavaScript development and for command line invocation of JavaScript program files br br br See also br br Rhino JavaScript engine br List of ECMAScript engines br br br br br br External links br Official website SpiderMonkey JavaScript C engine br Firefox and Spidermonkey Release Calendar