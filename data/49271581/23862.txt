title: Python (programming language)
id: 23862
Python is a high level general purpose programming language Its design philosophy emphasizes code readability with the use of significant indentation br Python is dynamically typed and garbage collected It supports multiple programming paradigms including structured particularly procedural object oriented and functional programming It is often described as a batteries included language due to its comprehensive standard library br Guido van Rossum began working on Python in the late s as a successor to the ABC programming language and first released it in as Python Python was released in Python released in was a major revision not completely backward compatible with earlier versions Python released in was the last release of Python br Python consistently ranks as one of the most popular programming languages and has gained widespread use in the machine learning community br br br History br br Python was invented in the late s by Guido van Rossum at Centrum Wiskunde Informatica CWI in the Netherlands as a successor to the ABC programming language which was inspired by SETL capable of exception handling and interfacing with the Amoeba operating system Its implementation began in December Van Rossum shouldered sole responsibility for the project as the lead developer until July when he announced his permanent vacation from his responsibilities as Python s benevolent dictator for life BDFL a title the Python community bestowed upon him to reflect his long term commitment as the project s chief decision maker he s since come out of retirement and is self titled BDFL emeritus In January active Python core developers elected a five member Steering Council to lead the project br Python was released on October with many major new features such as list comprehensions cycle detecting garbage collection reference counting and Unicode support Python released on December with many of its major features backported to Python x and x Releases of Python include the to utility which automates the translation of Python code to Python br Python s end of life was initially set for then postponed to out of concern that a large body of existing code could not easily be forward ported to Python No further security patches or other improvements will be released for it Currently only and later are supported security issues were fixed in e g the final x release While Python and older is officially unsupported a different unofficial Python implementation PyPy continues to support Python i e plus and with the plus meaning at least some backported security updates br In and again twice in security updates were expedited since all Python versions were insecure including because of security issues leading to possible remote code execution and web cache poisoning In Python and were expedited and because of many security issues When Python was released in May it was announced that the series joining the older series and would only receive security fixes in the future On September four new releases were made due to a potential denial of service attack and br Every Python release since has added some syntax to the language added the union type operator and the match and case keywords for structural pattern matching statements expanded exception handling functionality Python added the new keyword type br Notable changes in from include increased program execution speed and improved error reporting Python claims to be between and faster than Python and Python adds another on top of that It also has improved error messages and many other changes br As of April Python is the stable release and is the only version with active as opposed to just security support br Since June Python is the oldest supported version of Python albeit in the security support phase due to Python reaching end of life br Python introduced an incremental garbage collector producing shorter pauses for collection in programs with a lot of objects an experimental JIT compiler and removals from the C API Some standard library modules and many deprecated classes functions and methods will be removed in Python and or Starting with it and later versions have years of full support up from one and a half followed by years of security support for same total support as before br br br Design philosophy and features br Python is a multi paradigm programming language Object oriented programming and structured programming are fully supported and many of their features support functional programming and aspect oriented programming including metaprogramming and metaobjects Many other paradigms are supported via extensions including design by contract and logic programming br Python uses dynamic typing and a combination of reference counting and a cycle detecting garbage collector for memory management It uses dynamic name resolution late binding which binds method and variable names during program execution br Its design offers some support for functional programming in the Lisp tradition It has filter mapandreduce functions list comprehensions dictionaries sets and generator expressions The standard library has two modules itertools and functools that implement functional tools borrowed from Haskell and Standard ML br Its core philosophy is summarized in the Zen of Python PEP which includes aphorisms such as br br Beautiful is better than ugly br Explicit is better than implicit br Simple is better than complex br Complex is better than complicated br Readability counts br However Python features regularly violate these principles and have received criticism for adding unnecessary language bloat Responses to these criticisms are that the Zen of Python is a guideline rather than a rule The addition of some new features had been so controversial that Guido van Rossum resigned as Benevolent Dictator for Life following vitriol over the addition of the assignment expression operator in Python br Nevertheless rather than building all of its functionality into its core Python was designed to be highly extensible via modules This compact modularity has made it particularly popular as a means of adding programmable interfaces to existing applications Van Rossum s vision of a small core language with a large standard library and easily extensible interpreter stemmed from his frustrations with ABC which espoused the opposite approach br Python claims to strive for a simpler less cluttered syntax and grammar while giving developers a choice in their coding methodology In contrast to Perl s there is more than one way to do it motto Python embraces a there should be one and preferably only one obvious way to do it philosophy In practice however Python provides many ways to achieve the same task There are for example at least three ways to format a string literal with no certainty as to which one a programmer should use Alex Martelli a Fellow at the Python Software Foundation and Python book author wrote To describe something as clever is not considered a compliment in the Python culture br Python s developers usually strive to avoid premature optimization and reject patches to non critical parts of the CPython reference implementation that would offer marginal increases in speed at the cost of clarity Execution speed can be improved by moving speed critical functions to extension modules written in languages such as C or by using a just in time compiler like PyPy It is also possible to cross compile to other languages but it either doesn t provide the full speed up that might be expected since Python is a very dynamic language or a restricted subset of Python is compiled and possibly semantics are slightly changed br Python s developers aim for it to be fun to use This is reflected in its name a tribute to the British comedy group Monty Python and in occasionally playful approaches to tutorials and reference materials such as the use of the terms spam and eggs a reference to a Monty Python sketch in examples instead of the often used foo and bar A common neologism in the Python community is pythonic which has a wide range of meanings related to program style Pythonic code may use Python idioms well be natural or show fluency in the language or conform with Python s minimalist philosophy and emphasis on readability Code that is difficult to understand or reads like a rough transcription from another programming language is called unpythonic br br br Syntax and semantics br br Python is meant to be an easily readable language Its formatting is visually uncluttered and often uses English keywords where other languages use punctuation Unlike many other languages it does not use curly brackets to delimit blocks and semicolons after statements are allowed but rarely used It has fewer syntactic exceptions and special cases than C or Pascal br br br Indentation br br Python uses whitespace indentation rather than curly brackets or keywords to delimit blocks An increase in indentation comes after certain statements a decrease in indentation signifies the end of the current block Thus the program s visual structure accurately represents its semantic structure This feature is sometimes termed the off side rule Some other languages use indentation this way but in most indentation has no semantic meaning The recommended indent size is four spaces br br br Statements and control flow br Python s statements include br br The assignment statement using a single equals sign br The if statement which conditionally executes a block of code along with else and elif a contraction of else if br The for statement which iterates over an iterable object capturing each element to a local variable for use by the attached block br The while statement which executes a block of code as long as its condition is true br The try statement which allows exceptions raised in its attached code block to be caught and handled by except clauses or new syntax except in Python for exception groups it also ensures that clean up code in a finally block is always run regardless of how the block exits br The raise statement used to raise a specified exception or re raise a caught exception br The class statement which executes a block of code and attaches its local namespace to a class for use in object oriented programming br The def statement which defines a function or method br The with statement which encloses a code block within a context manager for example acquiring a lock before it is run then releasing the lock or opening and closing a file allowing resource acquisition is initialization RAII like behavior and replacing a common try finally idiom br The break statement which exits a loop br The continue statement which skips the rest of the current iteration and continues with the next br The del statement which removes a variable deleting the reference from the name to the value and producing an error if the variable is referred to before it is redefined br The pass statement serving as a NOP syntactically needed to create an empty code block br The assert statement used in debugging to check for conditions that should apply br The yield statement which returns a value from a generator function and also an operator used to implement coroutines br The return statement used to return a value from a function br The import and from statements used to import modules whose functions or variables can be used in the current program br The match and case statements an analog of the switch statement construct that compares an expression against one or more cases as a control of flow measure br The assignment statement binds a name as a reference to a separate dynamically allocated object Variables may subsequently be rebound at any time to any object In Python a variable name is a generic reference holder without a fixed data type however it always refers to some object with a type This is called dynamic typing in contrast to statically typed languages where each variable may contain only a value of a certain type br Python does not support tail call optimization or first class continuations and according to Van Rossum it never will However better support for coroutine like functionality is provided by extending Python s generators Before generators were lazy iterators data was passed unidirectionally out of the generator From Python on it is possible to pass data back into a generator function and from version it can be passed through multiple stack levels br br br Expressions br Python s expressions include br br The and operators for mathematical addition subtraction and multiplication are similar to other languages but the behavior of division differs There are two types of divisions in Python floor division or integer division and floating point division Python uses the operator for exponentiation br Python uses the operator for string concatenation Python uses the operator for duplicating a string a specified number of times br The infix operator It is intended to be used by libraries such as NumPy for matrix multiplication br The syntax called the walrus operator was introduced in Python It assigns values to variables as part of a larger expression br In Python compares by value Python s is operator may be used to compare object identities comparison by reference and comparisons may be chained for example a b c br Python uses and or and not as Boolean operators br Python has a type of expression named a list comprehension and a more general expression named a generator expression br Anonymous functions are implemented using lambda expressions however there may be only one expression in each body br Conditional expressions are written as x if c else y different in order of operands from the c x y operator common to many other languages br Python makes a distinction between lists and tuples Lists are written as are mutable and cannot be used as the keys of dictionaries dictionary keys must be immutable in Python Tuples written as are immutable and thus can be used as keys of dictionaries provided all of the tuple s elements are immutable The operator can be used to concatenate two tuples which does not directly modify their contents but produces a new tuple containing the elements of both Thus given the variable t initially equal to executing t t first evaluates t which yields which is then assigned back to t thereby effectively modifying the contents of t while conforming to the immutable nature of tuple objects Parentheses are optional for tuples in unambiguous contexts br Python features sequence unpacking where multiple expressions each evaluating to anything that can be assigned to a variable writable property etc are associated in an identical manner to that forming tuple literals and as a whole are put on the left hand side of the equal sign in an assignment statement The statement expects an iterable object on the right hand side of the equal sign that produces the same number of values as the provided writable expressions when iterated through them it assigns each of the produced values to the corresponding expression on the left br Python has a string format operator that functions analogously to printf format strings in C e g spam s eggs d blah evaluates to spam blah eggs In Python and this was supplemented by the format method of the str class e g spam eggs format blah Python added f strings spam blah eggs f spam spam eggs eggs br Strings in Python can be concatenated by adding them with the same operator as for adding integers and floats e g spam eggs returns spameggs If strings contain numbers they are added as strings rather than integers e g returns br Python has various string literals br Delimited by single or double quotes unlike in Unix shells Perl and Perl influenced languages single and double quotes work the same Both use the backslash as an escape character String interpolation became available in Python as formatted string literals br Triple quoted beginning and ending with three single or double quotes which may span multiple lines and function like here documents in shells Perl and Ruby br Raw string varieties denoted by prefixing the string literal with r Escape sequences are not interpreted hence raw strings are useful where literal backslashes are common such as regular expressions and Windows style paths Compare quoting in C br Python has array index and array slicing expressions in lists denoted as a key a start stop or a start stop step Indexes are zero based and negative indexes are relative to the end Slices take elements from the start index up to but not including the stop index The third slice parameter called step or stride allows elements to be skipped and reversed Slice indexes may be omitted for example a returns a copy of the entire list Each element of a slice is a shallow copy br In Python a distinction between expressions and statements is rigidly enforced in contrast to languages such as Common Lisp Scheme or Ruby This leads to duplicating some functionality For example br br List comprehensions vs for loops br Conditional expressions vs if blocks br The eval vs exec built in functions in Python exec is a statement the former is for expressions the latter is for statements br Statements cannot be a part of an expression so list and other comprehensions or lambda expressions all being expressions cannot contain statements A particular case is that an assignment statement such as a cannot form part of the conditional expression of a conditional statement br br br Methods br Methods on objects are functions attached to the object s class the syntax instance method argument is for normal methods and functions syntactic sugar for Class method instance argument Python methods have an explicit self parameter to access instance data in contrast to the implicit self or this in some other object oriented programming languages e g C Java Objective C Ruby Python also provides methods often called dunder methods due to their names beginning and ending with double underscores to allow user defined classes to modify how they are handled by native operations including length comparison in arithmetic operations and type conversion br br br Typing br br Python uses duck typing and has typed objects but untyped variable names Type constraints are not checked at compile time rather operations on an object may fail signifying that it is not of a suitable type Despite being dynamically typed Python is strongly typed forbidding operations that are not well defined for example adding a number to a string rather than silently attempting to make sense of them br Python allows programmers to define their own types using classes most often used for object oriented programming New instances of classes are constructed by calling the class for example SpamClass or EggsClass and the classes are instances of the metaclass type itself an instance of itself allowing metaprogramming and reflection br Before version Python had two kinds of classes both using the same syntax old style and new style current Python versions only support the semantics of the new style br Python supports optional type annotations These annotations are not enforced by the language but may be used by external tools such as mypy to catch errors Mypy also supports a Python compiler called mypyc which leverages type annotations for optimization br br br Arithmetic operations br Python has the usual symbols for arithmetic operators the floor division operator and the modulo operation where the remainder can be negative e g It also has for exponentiation e g and and a matrix multiplication operator These operators work like in traditional math with the same precedence rules the operators infix and can also be unary to represent positive and negative numbers respectively br The division between integers produces floating point results The behavior of division has changed significantly over time br br Current Python i e since changed to always be floating point division e g br The floor division operator was introduced So and Adding from future import division causes a module used in Python to use Python rules for division see above br In Python terms is true division or simply division and is floor division before version is classic division br Rounding towards negative infinity though different from most languages adds consistency For instance it means that the equation a b b a b is always true It also means that the equation b a b a b a is valid for both positive and negative values of a However maintaining the validity of this equation means that while the result of a b is as expected in the half open interval b where b is a positive integer it has to lie in the interval b when b is negative br Python provides a round function for rounding a float to the nearest integer For tie breaking Python uses round to even round and round both produce Versions before used round away from zero round is round is br Python allows Boolean expressions with multiple equality relations in a manner that is consistent with general use in mathematics For example the expression a b c tests whether a is less than b and b is less than c C derived languages interpret this expression differently in C the expression would first evaluate a b resulting in or and that result would then be compared with c br Python uses arbitrary precision arithmetic for all integer operations The Decimal type class in the decimal module provides decimal floating point numbers to a pre defined arbitrary precision and several rounding modes The Fraction class in the fractions module provides arbitrary precision for rational numbers br Due to Python s extensive mathematics library and the third party library NumPy that further extends the native capabilities it is frequently used as a scientific scripting language to aid in problems such as numerical data processing and manipulation br br br Programming examples br Hello World program br br Program to calculate the factorial of a positive integer br br br Libraries br Python s large standard library provides tools suited to many tasks and is commonly cited as one of its greatest strengths For Internet facing applications many standard formats and protocols such as MIME and HTTP are supported It includes modules for creating graphical user interfaces connecting to relational databases generating pseudorandom numbers arithmetic with arbitrary precision decimals manipulating regular expressions and unit testing br Some parts of the standard library are covered by specifications for example the Web Server Gateway Interface WSGI implementation wsgiref follows PEP but most are specified by their code internal documentation and test suites However because most of the standard library is cross platform Python code only a few modules need altering or rewriting for variant implementations br As of March the Python Package Index PyPI the official repository for third party Python software contains over packages with a wide range of functionality including br br br Development environments br br Most Python implementations including CPython include a read eval print loop REPL permitting them to function as a command line interpreter for which users enter statements sequentially and receive results immediately br Python also comes with an Integrated development environment IDE called IDLE which is more beginner oriented br Other shells including IDLE and IPython add further abilities such as improved auto completion session state retention and syntax highlighting br As well as standard desktop integrated development environments including PyCharm IntelliJ Idea Visual Studio Code etc there are web browser based IDEs including SageMath for developing science and math related programs PythonAnywhere a browser based IDE and hosting environment and Canopy IDE a commercial IDE emphasizing scientific computing br br br Implementations br br br Reference implementation br CPython is the reference implementation of Python It is written in C meeting the C standard Python uses C with several select C features CPython includes its own C extensions but third party extensions are not limited to older C versions e g they can be implemented with C or C CPython compiles Python programs into an intermediate bytecode which is then executed by its virtual machine CPython is distributed with a large standard library written in a mixture of C and native Python and is available for many platforms including Windows starting with Python the Python installer deliberately fails to install on Windows and Windows XP was supported until Python and most modern Unix like systems including macOS and Apple M Macs since Python with experimental installer with unofficial support for VMS Platform portability was one of its earliest priorities During Python and development even OS and Solaris were supported but support has since been dropped for many platforms br Python since only supports operating systems with multi threading support br br br Other implementations br PyPy is a fast compliant interpreter of Python and Its just in time compiler often brings a significant speed improvement over CPython but some libraries written in C cannot be used with it br Stackless Python is a significant fork of CPython that implements microthreads it does not use the call stack in the same way thus allowing massively concurrent programs PyPy also has a stackless version br MicroPython and CircuitPython are Python variants optimized for microcontrollers including Lego Mindstorms EV br Pyston is a variant of the Python runtime that uses just in time compilation to speed up the execution of Python programs br Cinder is a performance oriented fork of CPython that contains a number of optimizations including bytecode inline caching eager evaluation of coroutines a method at a time JIT and an experimental bytecode compiler br Snek Embedded Computing Language compatible with e g bit AVR microcontrollers such as ATmega P based Arduino as well as larger ones compatible with MicroPython is Python inspired but it is not Python It is possible to write Snek programs that run under a full Python system but most Python programs will not run under Snek It is an imperative language not including OOP classes unlike Python and simplifying to one number type with bit single precision similar to JavaScript except smaller br br br Unsupported implementations br Other just in time Python compilers have been developed but are now unsupported br br Google began a project named Unladen Swallow in with the aim of speeding up the Python interpreter five fold by using the LLVM and of improving its multithreading ability to scale to thousands of cores while ordinary implementations suffer from the global interpreter lock br Psyco is a discontinued just in time specializing compiler that integrates with CPython and transforms bytecode to machine code at runtime The emitted code is specialized for certain data types and is faster than the standard Python code Psyco does not support Python or later br PyS was a Python interpreter for Series mobile phones released by Nokia in It implemented many of the modules from the standard library and some additional modules for integrating with the Symbian operating system The Nokia N also supports Python with GTK widget libraries enabling programs to be written and run on the target device br br br Cross compilers to other languages br There are several compilers transpilers to high level object languages with either unrestricted Python a restricted subset of Python or a language similar to Python as the source language br br Brython Transcrypt and Pyjs latest release in compile Python to JavaScript br Codon compiles a subset of statically typed Python to machine code via LLVM and supports native multithreading br Cython compiles a superset of Python to C The resulting code is also usable with Python via direct C level API calls into the Python interpreter br PyJL compiles transpiles a subset of Python to human readable maintainable and high performance Julia source code Despite claiming high performance no tool can claim to do that for arbitrary Python code i e it s known not possible to compile to a faster language or machine code Unless semantics of Python are changed but in many cases speedup is possible with few or no changes in the Python code The faster Julia source code can then be used from Python or compiled to machine code and based that way br Nuitka compiles Python into C br Numba uses LLVM to compile a subset of Python to machine code br Pythran compiles a subset of Python to C C br RPython can be compiled to C and is used to build the PyPy interpreter of Python br The Python l C transpiler compiles a subset of Python to C C br Specialized br br MyHDL is a Python based hardware description language HDL that converts MyHDL code to Verilog or VHDL code br Older projects or not to be used with Python x and latest syntax br br Google s Grumpy latest release in transpiles Python to Go br IronPython allows running Python programs and an alpha released in is also available for Python although features and behaviors from later versions may be included on the NET Common Language Runtime br Jython compiles Python to Java bytecode allowing the use of the Java libraries from a Python program br Pyrex latest release in and Shed Skin latest release in compile to C and C respectively br br br Performance br Performance comparison of various Python implementations on a non numerical combinatorial workload was presented at EuroSciPy Python s performance compared to other programming languages is also benchmarked by The Computer Language Benchmarks Game br br br Development br Python s development is conducted largely through the Python Enhancement Proposal PEP process the primary mechanism for proposing major new features collecting community input on issues and documenting Python design decisions Python coding style is covered in PEP Outstanding PEPs are reviewed and commented on by the Python community and the steering council br Enhancement of the language corresponds with the development of the CPython reference implementation The mailing list python dev is the primary forum for the language s development Specific issues were originally discussed in the Roundup bug tracker hosted at by the foundation In all issues and discussions were migrated to GitHub Development originally took place on a self hosted source code repository running Mercurial until Python moved to GitHub in January br CPython s public releases come in three types distinguished by which part of the version number is incremented br br Backward incompatible versions where code is expected to break and needs to be manually ported The first part of the version number is incremented These releases happen infrequently version was released years after According to Guido van Rossum a version is very unlikely to ever happen br Major or feature releases are largely compatible with the previous version but introduce new features The second part of the version number is incremented Starting with Python these releases are expected to happen annually Each major version is supported by bug fixes for several years after its release br Bugfix releases which introduce no new features occur about every months and are made when a sufficient number of bugs have been fixed upstream since the last release Security vulnerabilities are also patched in these releases The third and final part of the version number is incremented br Many alpha beta and release candidates are also released as previews and for testing before final releases Although there is a rough schedule for each release they are often delayed if the code is not ready Python s development team monitors the state of the code by running the large unit test suite during development br The major academic conference on Python is PyCon There are also special Python mentoring programs such as PyLadies br Python removed wstr meaning Python extensions need to be modified and added pattern matching to the language br Python dropped some outdated modules and more will be dropped in the future deprecated as of already deprecated array u format code will emit DeprecationWarning since and will be removed in Python The w format code should be used instead Part of ctypes is also deprecated and http server CGIHTTPRequestHandler will emit a DeprecationWarning and will be removed in Using that code already has a high potential for both security and functionality bugs Parts of the typing module are deprecated e g creating a typing NamedTuple class using keyword arguments to denote the fields and such and more will be disallowed in Python br br br API documentation generators br Tools that can generate documentation for Python API include pydoc available as part of the standard library Sphinx Pdoc and its forks Doxygen and Graphviz among others br br br Naming br Python s name is derived from the British comedy group Monty Python whom Python creator Guido van Rossum enjoyed while developing the language Monty Python references appear frequently in Python code and culture for example the metasyntactic variables often used in Python literature are spam and eggs instead of the traditional foo and bar The official Python documentation also contains various references to Monty Python routines Users of Python are sometimes referred to as Pythonistas br The prefix Py is used to show that something is related to Python Examples of the use of this prefix in names of Python applications or libraries include Pygame a binding of SDL to Python commonly used to create games PyQt and PyGTK which bind Qt and GTK to Python respectively and PyPy a Python implementation originally written in Python br br br Popularity br Since Python has consistently ranked in the top ten most popular programming languages in the TIOBE Programming Community Index where as of December it was the most popular language ahead of C C and Java It was selected as Programming Language of the Year for the highest rise in ratings in a year in and the only language to have done so four times as of br Large organizations that use Python include Wikipedia Google Yahoo CERN NASA Facebook Amazon Instagram Spotify and some smaller entities like ILM and ITA The social news networking site Reddit was written mostly in Python br br br Uses br br Python can serve as a scripting language for web applications e g via mod wsgi for the Apache webserver With Web Server Gateway Interface a standard API has evolved to facilitate these applications Web frameworks like Django Pylons Pyramid TurboGears web py Tornado Flask Bottle and Zope support developers in the design and maintenance of complex applications Pyjs and IronPython can be used to develop the client side of Ajax based applications SQLAlchemy can be used as a data mapper to a relational database Twisted is a framework to program communications between computers and is used for example by Dropbox br Libraries such as NumPy SciPy and Matplotlib allow the effective use of Python in scientific computing with specialized libraries such as Biopython and Astropy providing domain specific functionality SageMath is a computer algebra system with a notebook interface programmable in Python its library covers many aspects of mathematics including algebra combinatorics numerical mathematics number theory and calculus OpenCV has Python bindings with a rich set of features for computer vision and image processing br Python is commonly used in artificial intelligence projects and machine learning projects with the help of libraries like TensorFlow Keras Pytorch scikit learn and the Logic language ProbLog As a scripting language with a modular architecture simple syntax and rich text processing tools Python is often used for natural language processing br The combination of Python and Prolog has proved to be particularly useful for AI applications with Prolog providing knowledge representation and reasoning capabilities The Janus system in particular exploits the similarities between these two languages br in part because of their use of dynamic typing and the simple recursive nature of their br data structures Typical applications of this combination include natural language processing visual query br answering geospatial reasoning and handling of semantic web data br The Natlog system implemented in Python uses Definite Clause Grammars DCGs as prompt generators for text to text generators like GPT and text to image generators like DALL E or Stable Diffusion br Python can also be used for graphical user interface GUI by using libraries like Tkinter br Python has been successfully embedded in many software products as a scripting language including in finite element method software such as Abaqus D parametric modelers like FreeCAD D animation packages such as ds Max Blender Cinema D Lightwave Houdini Maya modo MotionBuilder Softimage the visual effects compositor Nuke D imaging programs like GIMP Inkscape Scribus and Paint Shop Pro and musical notation programs like scorewriter and capella GNU Debugger uses Python as a pretty printer to show complex structures such as C containers Esri promotes Python as the best choice for writing scripts in ArcGIS It has also been used in several video games and has been adopted as first of the three available programming languages in Google App Engine the other two being Java and Go br Many operating systems include Python as a standard component It ships with most Linux distributions AmigaOS using Python FreeBSD as a package NetBSD and OpenBSD as a package and can be used from the command line terminal Many Linux distributions use installers written in Python Ubuntu uses the Ubiquity installer while Red Hat Linux and Fedora Linux use the Anaconda installer Gentoo Linux uses Python in its package management system Portage br Python is used extensively in the information security industry including in exploit development br Most of the Sugar software for the One Laptop per Child XO developed at Sugar Labs as of is written in Python The Raspberry Pi single board computer project has adopted Python as its main user programming language br LibreOffice includes Python and intends to replace Java with Python Its Python Scripting Provider is a core feature since Version from February br br br Languages influenced by Python br Python s design and philosophy have influenced many other programming languages br br Boo uses indentation a similar syntax and a similar object model br Cobra uses indentation and a similar syntax and its Acknowledgements document lists Python first among languages that influenced it br CoffeeScript a programming language that cross compiles to JavaScript has Python inspired syntax br ECMAScript JavaScript borrowed iterators and generators from Python br GDScript a scripting language very similar to Python built in to the Godot game engine br Go is designed for the speed of working in a dynamic language like Python and shares the same syntax for slicing arrays br Groovy was motivated by the desire to bring the Python design philosophy to Java br Julia was designed to be as usable for general programming as Python br Mojo is a non strict superset of Python e g still missing classes and adding e g struct br Nim uses indentation and similar syntax br Ruby s creator Yukihiro Matsumoto has said I wanted a scripting language that was more powerful than Perl and more object oriented than Python That s why I decided to design my own language br Swift a programming language developed by Apple has some Python inspired syntax br Kotlin blends Python and Java features minimizing boilerplate code for enhanced developer efficiency br Python s development practices have also been emulated by other languages For example the practice of requiring a document describing the rationale for and issues surrounding a change to the language in Python a PEP is also used in Tcl Erlang and Swift br br br See also br br Python syntax and semantics br pip package manager br List of programming languages br History of programming languages br Comparison of programming languages br br br br br br Sources br Python for Artificial Intelligence Python Wiki July Archived from the original on November Retrieved December br Paine Jocelyn ed August AI in Python AI Expert Newsletter Amzi Archived from the original on March Retrieved February br PyAIML Python Package Index Pypi python org Retrieved July br Russell Stuart J Norvig Peter Artificial Intelligence A Modern Approach rd ed Upper Saddle River NJ Prentice Hall ISBN br br br Further reading br Downey Allen B May Think Python How to Think Like a Computer Scientist version ed Cambridge University Press ISBN br Hamilton Naomi August The A Z of Programming Languages Python Computerworld Archived from the original on December Retrieved March br Lutz Mark Learning Python th ed O Reilly Media ISBN br Summerfield Mark Programming in Python nd ed Addison Wesley Professional ISBN br Ramalho Luciano May Fluent Python O Reilly Media ISBN br br br External links br br Official website