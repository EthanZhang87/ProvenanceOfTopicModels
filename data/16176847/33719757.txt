title: Mono (software)
id: 33719757
Mono is a free and open source NET Framework compatible software framework Originally by Ximian it was later acquired by Novell and is now being led by Xamarin a subsidiary of Microsoft and the NET Foundation Mono can be run on many software systems br br br History br br When Microsoft first announced their NET Framework in June it was described as a new platform based on Internet standards and in December of that year the underlying Common Language Infrastructure was published as an open standard ECMA opening up the potential for independent implementations Miguel de Icaza of Ximian believed that NET had the potential to increase programmer productivity and began investigating whether a Linux version was feasible Recognizing that their small team could not expect to build and support a full product they launched the Mono open source project on July at the O Reilly conference br After three years of development Mono was released on June Mono evolved from its initial focus of a developer platform for Linux desktop applications to supporting a wide range of architectures and operating systems including embedded systems br Novell acquired Ximian in After Novell was acquired by Attachmate in April Attachmate announced hundreds of layoffs for the Novell workforce putting in question the future of Mono br On May Miguel de Icaza announced in his blog that Mono would continue to be supported by Xamarin a company he founded after being laid off from Novell The original Mono team had also moved to the new company Xamarin planned to keep working on Mono and had planned to rewrite the proprietary NET stacks for iOS and Android from scratch because Novell still owned MonoTouch and Mono for Android at the time After this announcement the future of the project was questioned MonoTouch and Mono for Android being in direct competition with the existing commercial offerings now owned by Attachmate and considering that the Xamarin team would have difficulties proving that they did not use technologies they formerly developed when they were employed by Novell for the same work However in July Novell now a subsidiary of Attachmate and Xamarin announced that it granted a perpetual license to Xamarin for Mono MonoTouch and Mono for Android which officially took stewardship of the project br br br Current status and roadmap br Mono s current version is as of June This version provides the core API of the NET Framework and support for Visual Basic NET and C LINQ to Objects XML and SQL are part of the distribution Windows Forms is also supported but not actively developed and as such its support on Mono is incomplete Version was the first version that incorporates Microsoft original source code that was released by Microsoft as part of the NET Core project br As of January Mono has full support for all the features in NET except Windows Presentation Foundation WPF which the Mono team do not plan to support due to the amount of work it would need and Windows Workflow Foundation WF and with only limited support for Windows Communication Foundation WCF and the ASP NET async stack However System Web and WCF are candidates for almost immediate porting from the NET reference source back to Mono Some missing parts of the NET Framework are under development in an experimental Mono subproject called Olive br The Mono project has also created a Visual Basic NET compiler and a runtime designed for running VB NET applications It is currently being developed by Rolf Bjarne Kvinge br br br Moonlight br br An open source implementation of Microsoft Silverlight called Moonlight has been included since Mono Moonlight which supports the Silverlight APIs was released January Moonlight supports Silverlight and some features of Silverlight A preview release of Moonlight was announced in February and contains updates to Silverlight support br The Moonlight project was abandoned on May According to Miguel two factors sealed the fate of the project Microsoft added artificial restrictions that made it useless for desktop programming and the technology had not gained enough traction on the Web In addition Silverlight itself was deprecated by Microsoft by br br br Mono components br Mono consists of three groups of components br br Core components br Mono Linux GNOME development stack br Microsoft compatibility stack br The core components include the C compiler the virtual machine for the Common Language Infrastructure and the core class libraries These components are based on the Ecma and Ecma standards allowing Mono to provide a standards compliant free and open source CLI virtual machine Microsoft issued a statement that covers both standards under their Community Promise license br The Mono Linux GNOME development stack provide tools for application development while using the existing GNOME and free and open source libraries These include Gtk for graphical user interface GUI development Mozilla libraries for working with the Gecko rendering engine Unix integration libraries Mono Posix database connectivity libraries a security stack and the XML schema language RelaxNG Gtk allows Mono applications to integrate into the Gnome desktop as native applications The database libraries provide connectivity to the object relational database db o Firebird Microsoft SQL Server MSSQL MySQL Open Database Connectivity ODBC Oracle PostgreSQL SQLite and many others The Mono project tracks developing database components at its website br The Microsoft compatibility stack provides a pathway for porting Windows NET applications to Linux This group of components include ADO NET ASP NET and Windows Forms among others As these components are not covered by Ecma standards some of them remain subject to patent fears and concerns br br br Framework architecture br The major components of Mono include br br Code Execution Engine br Class Libraries br Base Class Library br NET Compatibility Class Libraries br Mono specific class libraries br Cross platform class libraries for both Mono and NET Gtk Mono Cecil Mono CSharp Text Templating br Unix specific class libraries POSIX Filesystem in Userspace FUSE curses br Platform specific class libraries bindings for Mac iOS Android MeeGo br CLI Assemblies br CLI Metadata br Mono s Common Language Runtime br Compatible with the ECMA Common Language Infrastructure NET Common Language Runtime br Mono specific enhancements br Mono SIMD support br Mono co routines and continuations br Mono specific enhancements br Native interop services and COM interop br Security Transparent Code Framework br br br Code Execution Engine br The Mono runtime contains a code execution engine that translates ECMA CIL byte codes into native code and supports a number of processors ARM MIPS in bit mode only SPARC PowerPC z Architecture IA x and IA for bit modes br The code generator is exposed in three modes br br Just in time JIT compilation The runtime will turn ECMA CIL byte codes into native code as the code runs br Ahead of Time AOT compilation this code turns the ECMA CIL byte codes typically found on a exe or dll file and generates native code stored in an operating system architecture and CPU specific file for a foo exe file it would produce foo exe so on Linux This mode of operation compiles most of the code that is typically done at runtime There are some exceptions like trampolines and other administrative code that still require the JIT to function so AOT images are not fully standalone br Full Static Compilation this mode is only supported on a handful of platforms and takes the Ahead of Time compilation process one step further and generates all the trampolines wrappers and proxies that are required into a static file that can be statically linked into a program and eliminates the need for a JIT at runtime This is used on Apple s iOS Sony s PlayStation and Microsoft s Xbox operating systems br Starting with Mono it is possible to configure Mono to use the LLVM as the code generation engine instead of Mono s own code generation engine This is useful for high performance computing loads and other situations where the execution performance is more important than the startup performance br Starting with the Mono preview it is no longer necessary to pick one engine over the other at configuration time The code generation engine can be selected at startup by using the llvm or nollvm command line arguments and it defaults to the fast starting Mono code generation engine br Starting with Mono support for LLVM is a default configuration option Previous versions required a special LLVM fork but now mono can fall back to its own code generator when it encounters something not handled by LLVM br br br Garbage collector br As of Mono the Mono runtime ships with two garbage collectors a generational collector and the Boehm Demers Weiser Conservative Garbage Collector The Boehm garbage collector could exhibit memory leaks on certain classes of applications making it unsuitable for some long running server applications Mono switched to Simple Generational GC SGen GC as the default collector in version br The SGen garbage collector has many advantages over a traditional conservative scanner It uses generational garbage collection where new objects are allocated from a nursery during the garbage collection cycle all objects that survived are migrated to an older generation memory pool The idea is that many objects are transient and can quickly be collected and only a handful of objects are long term objects that live for the entire life of the application To improve performance this collector assigns memory pools to each thread to let threads allocate new memory blocks without having to coordinate with other threads Migration of objects from the nursery to the old generation is done by copying the data from the nursery to the old generation pool and updating any live pointers that point to the data to point to the new location This can be expensive for large objects so Mono s SGen uses a separate pool of memory for large objects Large Object Section and uses a mark and sweep algorithm for those objects br br br Class library br The class library provides a comprehensive set of facilities for application development They are primarily written in C but due to the Common Language Specification they can be used by any NET language The class library is structured into namespaces and deployed in shared libraries known as assemblies Speaking of the NET Framework is primarily referring to this class library br br br Namespaces and assemblies br Namespaces are a mechanism for logically grouping similar classes into a hierarchical structure This prevents naming conflicts The structure is implemented using dot separated words where the most common top level namespace is System such as System IO and System Net There are other top level namespaces as well such as Accessibility and Windows A user can define a namespace by placing elements inside a namespace block br Assemblies are the physical packaging of the class libraries These are dll files just like but not to be confused with Win shared libraries Examples of assemblies are mscorlib dll System dll System Data dll and Accessibility dll Namespaces are often distributed among several assemblies and one assembly can be composed of several files br br br Common Language Infrastructure and Common Language Specification br The Common Language Infrastructure CLI as implemented by the Common Language Runtime CLR is implemented by the Mono executable The runtime compiles and executes NET applications The common language infrastructure is defined by the ECMA standard To run an application you must invoke the runtime with the relevant parameters br The Common Language Specification CLS is specified in chapter of ECMA and defines the interface to the CLI such as conventions like the underlying types for Enum The Mono compiler generates an image that conforms to the CLS This is the Common Intermediate Language The Mono runtime takes this image and runs it The ECMA standard formally defines a library that conforms to the CLS as a framework br br br Managed and unmanaged code br Within a native NET Mono application all code is managed that is it is governed by the CLI s style of memory management and thread safety Other NET or Mono applications can use legacy code which is referred to as unmanaged by using the System Runtime InteropServices libraries to create C bindings Many libraries which ship with Mono use this feature of the CLI such as Gtk br br br Mono specific innovations br Mono has innovated in some areas with new extensions to the core C and CLI specifications br br C Compiler as a Service Use the C compiler as a library br C Interactive Shell br SIMD support as part of the Mono SIMD namespace where method calls to special vector types are directly mapped to the underlying processor CPU SIMD instructions br Full static compilation of NET code used on Mono iPhone Mono PS br Mono coroutines used to implement micro threading code and continuations mostly for game developers br Assembly injection to live processes br Use of LLVM as JIT backend br Cxxi and CppSharp direct interop with C code and libraries br In addition Mono is available on a variety of operating systems and architectures br br br System requirements br Windows Windows Windows Windows macOS or Linux br br br Related projects br Several projects extend Mono and allow developers to use it in their development environment These projects include br Cross platform br br Banshee Media Player stalled a cross platform music media player built with Mono and Gtk and also a driver of dozens of C based libraries and projects for media handling br Beagle unmaintained a search system for Unix systems br Gecko bindings for embedding the layout engine used in Mozilla Gecko br Gtk C wrappers around the underlying GTK and GNOME libraries written in C and available on Linux MacOS and Windows br Mono Migration Analyzer MoMA a tool which aids Windows NET developers in finding areas in their code that might not be cross platform and therefore not work in Mono on Linux and other Unixes Not upgraded since Mono use Microsoft s NET Portability Analyzer dotnet apiport instead br MonoCross a cross platform model view controller design pattern where the Model and Controller are shared across platforms and the Views are unique for each platform for an optimized User Interface The framework requires Xamarin iOS and Xamarin Android br MvvmCross a cross platform Model View ViewModel framework utilizing Xamarin iOS and Xamarin Android for developing mobile apps br MonoDevelop an open source and cross platform integrated development environment that supports building applications for ASP NET Gtk Meego MonoTouch and Silverlight Moonlight br Moonlight discontinued an implementation of Silverlight that uses Mono br OpenTK a managed binding for OpenGL OpenCL and OpenAL br QtSharp C bindings for the Qt framework br Resco MobileBusiness a cross platform developer solution for mobile clients br Resco MobileCRM a cross platform developer solution for mobile clients synchronized with Microsoft Dynamics CRM br ServiceStack a high performance open source NET REST web services framework that simplifies the development of XML JSON and SOAP web services br SparkleShare an open source client software that provides cloud storage and file synchronization services br Tao superseded by OpenTK a collection of graphics and gaming bindings OpenGL SDL GLUT Cg br Xwt a GUI toolkit that maps API calls to native platform calls of the underlying platform exposing one unified API across different platforms and making possible for the graphical user interfaces to have native look and feel on different platforms It enables building GUI based desktop applications that run on multiple platforms without having to customizing code for different platforms Xwt API is mapped to a set of native controls on each supported platform Features that are not available on specific platforms are emulated by using native widgets which is referred to as hosting in the Xwt context Xwt was partially used as GUI toolkit beside GTK in the development of the Xamarin Studio Supported backend engines are WPF engine and Gtk engine using Gtk on Windows Cocoa engine using MonoMac and Gtk engine using Gtk on Mac OS X and Gtk engine using Gtk on Linux br macOS br br Cocoa wrappers around the native macOS toolkit Cocoa deprecated br Monobjc a set of bindings for macOS programming br MonoMac newer bindings for macOS programming based on the MonoTouch API design br Mobile platforms br br MonoDroid Mono for the Android operating system With bindings for the Android APIs br MonoTouch Mono for the iPhone iPad and iPod Touches With bindings to the iOS APIs br Windows br br MonoTools for Visual Studio A Visual Studio plugin that allows Windows developers to target Linux and macOS right from Visual Studio and integrates with SUSE Studio br br br Other implementations br Microsoft has a version of NET now available only for Windows XP called the Shared Source CLI Rotor Microsoft s shared source license may be insufficient for the needs of the community it explicitly forbids commercial use br Free Software Foundation s decommissioned Portable NET project br br br MonoDevelop br br MonoDevelop is a free GNOME integrated development environment primarily designed for C and other NET languages such as Nemerle Boo and Java via IKVM NET although it also supports languages such as C C Python and Vala MonoDevelop was originally a port of SharpDevelop to Gtk but it has since evolved to meet the needs of Mono developers The IDE includes class management built in help code completion Stetic a GUI designer project support and an integrated debugger br The MonoDoc browser provides access to API documentation and code samples The documentation browser uses wiki style content management allowing developers to edit and improve the documentation br br br Xamarin iOS and Xamarin Android br Xamarin iOS and Xamarin Android both developed by Xamarin are implementations of Mono for iPhone and Android based smartphones Previously available only for commercial licensing after Microsoft s acquisition of Xamarin in the Mono runtime itself was relicensed under MIT license and both Xamarin iOS and Xamarin Android are being made free and open source br br br Xamarin iOS br Xamarin iOS previously named MonoTouch is a library that allows developers to create C and NET based applications that run on the iPhone iPod and iPad devices It is based on the Mono framework and developed in conjunction with Novell Unlike Mono applications Xamarin iOS Apps are compiled down to machine code targeted specifically at the Apple iPhone and iPad This is necessary because the iOS kernel prevents just in time compilers from executing on the device br The Xamarin iOS stack is made up of br br Compilers br C from the Mono Project br Third party compilers like RemObject s Oxygene can target Xamarin iOS also br Core NET libraries br Development SDK br Linker used to bundle only the code used in the final application br mtouch the Native compiler and tool used to deploy to the target device br Interface Builder integration tools br Libraries that bind the native CocoaTouch APIs br Xamarin Studio IDE br Xamarin Studio is used as the primary IDE however additional links to Xcode and the iOS simulator have been written br From April to early September the future of MonoTouch was put in doubt as Apple introduced new terms for iPhone developers that apparently prohibits them from developing in languages other than C C and Objective C and the use of a middle layer between the iOS platform and iPhone applications This made the future of MonoTouch and other technologies such as Unity uncertain Then in September Apple rescinded this restriction stating that they were relaxing the language restrictions that they had put in place earlier that year br br br Version history br br br Xamarin Android br Xamarin Android formerly known as Mono for Android initially developed by Novell and continued by Xamarin is a proprietary implementation of Mono for Android based smart phones It was first released on April Mono for Android was developed to allow developers to more easily write cross platform applications that will run on all mobile platforms In an interview with H Online Miguel de Icaza stated Our vision is to allow developers to reuse their engine and business logic code across all mobile platforms and swapping out the user interface code for a platform specific API br In August a Microsoft spokesman Tom Hanrahan of Microsoft s Open Source Technology Centre stated in reference to the lawsuit filed by Oracle against Google over Android s use of Java that The type of action Oracle is taking against Google over Java is not going to happen If a NET port to Android was through Mono it would fall under the Microsoft Community Promise Agreement br The Xamarin Android stack consists of the following components br br Mono runtime br An Android UI designer br Libraries br Core NET class libraries br Libraries that bind the native Android Java APIs br SDK tools to package deploy and debug br Xamarin Studio and Visual Studio integration to design the UI remotely debug and deploy br br br Mono on macOS br br br CocoaSharp br Cocoa also known as CocoaSharp was a bridge framework for Mac OS X which allowed applications developed with the Mono runtime to access the Cocoa API It was initially released on August and was included with the Mono distribution starting with version released on February It has not seen any development since and is now deprecated br br br Monobjc br Monobjc was CocoaSharp s replacement It allows NET developers to use most of the Mac OS X API including Cocoa with no native code while still achieving a native UI br br br Xamarin Mac br Xamarin Mac is a library that allows developers to run NET and C apps on the Mac br br br License br Mono is dual licensed by Xamarin similar to other products such as Qt and the Mozilla Application Suite Mono s C compiler and tools are released under the GNU General Public License GPLv only starting with version of Mono the Mono C compiler source code is also available under the MIT X License the runtime libraries under the GNU Lesser General Public License LGPLv only and the class libraries under the MIT License These are all free software and open source licenses and hence Mono is free and open source software br The license of the C compiler was changed from the GPL to the MIT X license to allow the compiler code to be reused in a few instances where the GPL would have prevented such br br Mono s Compiler as a Service br The Mono interactive Shell br The Mono embeddable C compiler br Mono s implementation of the C dynamic binder br MonoDevelop s built in parser and AST graph br On March Microsoft s acquisition of Xamarin was officially closed br On March Microsoft announced at Microsoft Build that they ll completely re license Mono under the MIT License even in scenarios where previously a commercial license was necessary and Microsoft stated that they won t assert any applicable patents against parties that are using selling offering for sale importing or distributing Mono It was also announced that Xamarin had contributed the Mono Project to the NET Foundation br br br Mono and Microsoft s patents br br br Software developed with Mono br br Many programs covering a range of applications have been developed using the Mono application programming interface API and C Some programs written for the Linux Desktop include Banshee Beagle F Spot Gbrainy Docky GNOME Do MonoTorrent Pinta and Tomboy The program Logos Bible Study Software OS X Version was written for the MacOS br A number of video games such as The Sims and Second Life for their scripting languages OpenSimulator virtual world server or games built with the Unity or MonoGame game engines also make use of Mono OpenRA bundles its Apple Disk Image and Linux AppImages with Mono essentially removing almost all dependencies from the game br br br Version history br br br See also br br Common Language Runtime br NET Framework br NET an open source framework and successor to NET Framework br Standard Libraries CLI br Base Class Library BCL br Comparison of application virtual machines br DotGNU A free software umbrella project which includes Portable NET br MonoDevelop An open source IDE targeting both Mono and Microsoft NET Framework platforms br Moonlight runtime an open source implementation of Microsoft s Silverlight developed by the Mono Project br Shared Source Common Language Infrastructure Microsoft s shared source implementation of NET formerly codenamed Rotor br mod mono A module for the Apache HTTP Server that allows hosting of ASP NET pages and other assemblies on multiple platforms by use of Mono br br br br br br Citations br br br Sources br This article incorporates text from Mono s homepage which was then under the GNU Free Documentation License br de Icaza Miguel October Mono list Mono early history Archived from the original mailing list on June Retrieved December br Dumbill Edd March Will Mono Become the Preferred Platform for Linux Development ONLamp Archived from the original on October Retrieved October br Loli Queru Eugenia February Mono Applications Aplenty OSNews Retrieved December br Kerner Sean Michael November Mono Project Goes Virtual Internet News Retrieved October br Kerner Sean Michael November Months Late Novell Ships Mono internetnews com br Northcutt Corey October In the World of mod mono Ubiquity Archived from the original on February Retrieved October br Campbell Sean October Interview with Joseph Hill Product Manager Mono Novell HSIB Retrieved October br Smith Tim September A Brief Introduction to the Java and NET Patent Issues InfoQ Retrieved September br br br External links br br Official website br MonoTouch Main Page for the port to Apple Inc s hand held products