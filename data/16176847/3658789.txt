title: A/ROSE
id: 3658789
A ROSE Apple Real time Operating System Environment is a small embedded operating system that runs on Apple Computer s Macintosh Coprocessor Platform an expansion card for the Macintosh br The idea was to offer a single overdesigned hardware platform on which third party vendors could build practically any product reducing the otherwise heavy workload of developing a NuBus based expansion card However the MCP cards were expensive limiting the appeal of the concept A ROSE had very little use apparently limited solely to Apple s own networking cards for serial I O Ethernet Token Ring and Twinax GreenSpring Computers developed the RM which is an IndustryPack IP carrier card with a CPU running A ROSE and is intended for the data acquisition market br br br History br br A ROSE and the MCP originated in August during the development of the Macintosh II While working on various networking products for the new system the developers realized that the existing classic Mac OS would make any serious card difficult to create due to large latencies and the difficulty of writing complex device drivers Their solution was to make an intelligent NuBus card that was essentially an entire computer on a card containing its own Motorola processor working space in RAM mirrored in the main system and its own basic operating system The first version of the system was ready for use in February br A ROSE was internally called MR DOS Multitasking Realtime Distributed Operating System but Microsoft the developer of MS DOS did not appreciate the name and put pressure on Apple to change it Eric M Trehus a QA engineer on the Token Ring card running A ROSE reportedly said A ROSE by any other name is still MR DOS br A ROSE is infamous for its esoteric purpose which is generally not understood by Mac end users and for causing many Mac emulators such as Basilisk II to produce a system error at boot time br br br Overview br A ROSE is very small at kB with a kB kernel A ROSE supports pre emptive multitasking with round robin scheduling of tasks with a microsecond context switch time and only microseconds of latency guaranteed interrupt response time The system s task is primarily to move data around and start and stop tasks on the cards and the entire API contains only ten calls br A ROSE is a message passing system and the main calls made its programs are Send and Receive Messages are short including only bytes of user data and sent asynchronously To find the appropriate endpoint its name server allows the applications to bind their names to their task IDs allowing them to move in the system and be found dynamically The OS has several routines for finding starting and stopping tasks on other cards one of which is a virtual card representing the host computer br To coordinate communications and provide a mechanism for talking with the host s CPU a cut down copy of A ROSE also runs inside the Mac OS in the form of a system extension or INIT known as Prep Device drivers for A ROSE cards are INITs and started up automatically After starting they find the Prep stub and use the normal A ROSE communications channel it provides to communicate with the cards br For instance the Apple TokenTalk NB card installs its driver as an INIT and optionally installs the Prep stub assuming it had not been installed before On startup the driver finds the Prep stub and asks it to enumerate the TokenTalk cards installed in the machine and optionally uploads code or settings to them From that point on Prep handles the communications with the card handing off the results to the TokenTalk driver br br br 