title: OpenEmbedded
id: 2179628
OpenEmbedded is a build automation framework and cross compile environment used to create Linux distributions for embedded devices The OpenEmbedded framework is developed by the OpenEmbedded community which was formally established in OpenEmbedded is the recommended build system of the Yocto Project which is a Linux Foundation workgroup that assists commercial companies in the development of Linux based systems for embedded products br The build system is based on BitBake recipes which specify how a particular package is built but also include lists of dependencies and source code locations as well as for instructions on how to install and remove a compiled package OpenEmbedded tools use these recipes to fetch and patch source code compile and link binaries produce binary packages ipk deb rpm and create bootable images br Historically OpenEmbedded s collection of recipes was stored in a single repository and the metadata was structured in a form now called OpenEmbedded Classic By it had become increasingly difficult to manage the ever growing number of recipes To resolve this recipe metadata was split into multiple layers The lowest layer which includes platform independent and distribution independent meta data is called OpenEmbedded Core Architecture specific application specific and distribution dependent instructions are applied in appropriate target support layers that can override or complement the instructions from lower layers Additionally changes to the recipes at the core layer are now managed with a pull model instead of committing their changes directly to the repository as was previously the case developers now send their patches to the mailing list The patches if approved are then merged pulled by a maintainer br The OpenEmbedded framework can be installed and automatically updated via Git br br br History br br The OpenEmbedded Project OE for short was created by Chris Larson Michael Lauer and Holger Schurig merging the achievements of OpenZaurus with contributions from projects like Familiar Linux and OpenSIMpad into a common codebase OpenEmbedded superseded these projects and was used to build any of them from the same code base br The OpenEmbedded Core Project OE Core for short resulted from the merge of the Yocto Project with OpenEmbedded All package recipes are since then maintained through OpenEmbedded Core br br br Layer organisation br OpenEmbedded Core has adapted this layered structure in the merge with Yocto and new layer entries were added over time The Layers represent a structure which is only of declarative nature The specific entries are stricter in the scope of deciding which entry provides which packages Overview of layers is available in layers openembedded org layerindex branch master layers br br Developer layer br The user defined layer for custom Bitbake recipes Embedded system software developers would place their recipe here if the software would not fit the commercial or base layer br Commercial layer br Packages plugins and configurations from open source vendors go in this layer br UI specific layer br Layers currently present within the meta openembedded layer br meta efl Enlightenment window manager br meta gnome GNOME window manager br meta gpe GPE window manager br meta xfce Xfce window manager br Hardware specific layer br br meta efikamx Efika devices br meta fsl arm Freescale Semiconductor officially supported development boards br meta fsl arm extra Freescale Semiconductor community supported boards br meta handheld Personal digital assistants PDAs br meta intel Intel embedded devices br meta nslu NSLU devices br meta openpandora Openpandora devices br meta smartphone various smartphone devices br meta ti Texas Instruments devices br meta xilinx Xilinx devices br meta altera Altera devices br meta ettus Ettus Research USRP SDR devices br Others br Yocto layer br br meta yocto Yocto Project layer br OpenEmbedded Core layer br br openembedded core br meta openembedded br br br Distributions supported br In OpenEmbedded Classic the configurations from Base to the UI Layer can be supplemented by various Linux distributions The following list is available for OpenEmbedded br br ngstr m distribution br KaliOS br Openmoko br SHR br SlugOS br WebOS br Others br br br Supported hardware br Various devices are supported br br Boards and processors br The BeagleBoard from Texas Instruments and a variety of devices based on an ARM CPU are supported br Smartphones br Smartphones like the Nokia N and Neo FreeRunner are supported br Porting to new hardware br The constellation of OpenEmbedded especially the open design allows it to get OpenEmbedded to adapt new hardware fairly easy br br br See also br br BitBake br Buildroot br Emdebian Grip br Familiar Linux br Openpandora br OpenZaurus br Yocto Project br T SDE br br br br br br External links br Official website br FOSDEM presentation of OpenEmbedded br FOSDEM presentation of OpenEmbedded br ELC presentation of OpenEmbedded